/* tslint:disable:max-line-length */
/**
 * API documentation
 * Access token is needed to use this API. To get a token, send a POST request with your email address to /api-users endpoint and one will be send to your. Each endpoint bellow has more information on how to use this API. If you have any questions you can contact us at helpdesk@laji.fi.  You can find more documentation [here](https://laji.fi/about/806).  ##Endpoints  Observations and collections * Warehouse - Observation Data Warehouse API * Collection - Collection metadata * Source - Information sources (IT systems) * Annotation - Quality control   Taxonomy * Taxa - Taxonomy API * InformalTaxonGroup - Informal taxon groups are used in taxa and warehouse endpoints * Publication - Scientific publications * Checklist - Mainly you only work with one checklits: the FinBIF master checklist. There are others.   Other master data * Metadata - Variable descriptions * Area - Countries, municipalities and biogeographical provinces of Finland, etc. * Person - Information about people.   Helpers * APIUser - Register as an API user * Autocomplete - For making an autocomplete filed for taxa, collections or persons (friends) * PersonToken - Information about an authorized person   Vihko observation system * Form - Form definition * Document - Document instance of a form * Image - Image of a document   Laji.fi portal * Feedback - Feedback form API * Information - CMS content of information pages * Logger - Error logging from user's browsers to FinBIF * News - News
 *
 * OpenAPI spec version: 0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


export interface Collection {
  /**
   * More descriptive name for the collection
   */
  longName?: string;
  /**
   * Whether or not this collection has sub collections
   */
  hasChildren?: boolean;
  id: string;
  /**
   * Secure level (salaus-/karkeistustaso) for the data
   */
  secureLevel?: Collection.SecureLevelEnum;
  /**
   * Official abbreviation (or acronym) for this collection
   */
  abbreviation?: string;
  /**
   * Example how to cite this collection in a scientific article, if using organization, name and abbreviation is not enough.
   */
  citation?: string;
  /**
   * Name of the collection in different languages. (Not name of collection database.) If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  collectionName?: string;
  /**
   * How many specimens, records or such does the collection contain? Fill in approximate number, describe more in notes if necessary.
   */
  collectionSize?: string;
  /**
   * Type of the collection (specimen, monitoring etc).
   */
  collectionType?: Collection.CollectionTypeEnum;
  /**
   * Legal basis for concealment or quarantine If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  concealmentBasis?: string;
  /**
   * Personal or general (e.g. group of people in the organisation) email address to reach the person(s) responsible.
   */
  contactEmail?: string;
  /**
   * Concise definition of the coverage, if not clear from name or description. For example, 'Winter birds of Finland'. If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  coverageBasis?: string;
  /**
   * Quality estimation for the data in this collection
   */
  dataQuality?: Collection.DataQualityEnum;
  /**
   * Description and reasons for the data quality in different languages. If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  dataQualityDescription?: string;
  /**
   * Quarantine period in years after which data is opened
   */
  dataQuarantinePeriod?: number;
  /**
   * Description of possible special terms for data use (for example not for commercial purposes etc.) If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  dataUseTerms?: string;
  /**
   * Free-form description of the collection in different languages. If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  description?: string;
  /**
   * How many percent of the collection is in digital form, e.g. in a database or Excel file? Fill in approximate number, describe more in notes if necessary.
   */
  digitizedSize?: string;
  /**
   * Admin field. The identifier of the person responsible for handling requests for restricted data for this set (typically same person who's responsible for the collection)
   */
  downloadRequestHandler?: Array<string>;
  /**
   * Reason for this edit or notes about it.
   */
  editNotes?: string;
  /**
   * Smallest common geographical area for the specimens/data in the collection (for example, country or continent name). If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  geographicCoverage?: string;
  /**
   * Description of the rights governing the data (for example, what contracts have been made about this). If left blank, Luomus data policy is followed. If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  intellectualDescription?: string;
  /**
   * Name of the data owner; ONLY fill this if the owner is not clear from the parent collection name(s). E.g. \"University of Oulu\" or \"Luomus\"
   */
  intellectualOwner?: string;
  /**
   * License which is used when publishing data that belongs to this collection.
   */
  intellectualRights?: Collection.IntellectualRightsEnum;
  internalUseOnly?: boolean;
  /**
   * Which parent or larger collection this is part of.
   */
  isPartOf?: string;
  /**
   * Language the data is (mainly) written in, if applicable.
   */
  language?: string;
  metadataCreator?: string;
  /**
   * Indication of how comprehensive the information on this form is.
   */
  metadataStatus?: Collection.MetadataStatusEnum;
  /**
   * Methods used when creating this collection, if they are standardized. Includes information on items such as census methods, tools, instrument calibration and software. If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  methods?: string;
  /**
   * Additional information to the data in each section.
   */
  notes?: string;
  /**
   * Web address (URL) with more info about the collection. If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  onlineUrl?: string;
  /**
   * Person(s) responsible for the collection (Lastname, Firstname; Lastname, Firstname).
   */
  personResponsible?: string;
  /**
   * Description of possible restrictions on publication of the data (for example, is there data about endangered species which should be concealed?) If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  publicationDescription?: string;
  /**
   * How can Luomus publish the data, if it is owned by third party?
   */
  publicationTerms?: Collection.PublicationTermsEnum;
  /**
   * Lowest common taxon in the collection (for example, scientific name of an order). If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  taxonomicCoverage?: string;
  /**
   * When were the specimens/data collected? If lang parameter is 'multi' this will be a lang object instead of a string or an array of strings!
   */
  temporalCoverage?: string;
  /**
   * How many TYPE specimens does the collection contain?  Fill in approximate number, describe more in notes if necessary.
   */
  typesSize?: string;
  dateCreated?: string;
  dateEdited?: string;
  /**
   * Team or organisation that owns the record and can edit it.
   */
  owner?: string;
  /**
   * PUBLIC: all data can be published; PROTECTED: exact locality is hidden (100*100km square); PRIVATE: most of the data is hidden. Empty value means same as public.
   */
  publicityRestrictions?: Collection.PublicityRestrictionsEnum;
}

export namespace Collection {
  export type SecureLevelEnum =
    'MX.secureLevelNone'
    | 'MX.secureLevelKM1'
    | 'MX.secureLevelKM5'
    | 'MX.secureLevelKM10'
    | 'MX.secureLevelKM25'
    | 'MX.secureLevelKM50'
    | 'MX.secureLevelKM100'
    | 'MX.secureLevelHighest'
    | 'MX.secureLevelNoShow';
  export const SecureLevelEnum = {
    SecureLevelNone: 'MX.secureLevelNone' as SecureLevelEnum,
    SecureLevelKM1: 'MX.secureLevelKM1' as SecureLevelEnum,
    SecureLevelKM5: 'MX.secureLevelKM5' as SecureLevelEnum,
    SecureLevelKM10: 'MX.secureLevelKM10' as SecureLevelEnum,
    SecureLevelKM25: 'MX.secureLevelKM25' as SecureLevelEnum,
    SecureLevelKM50: 'MX.secureLevelKM50' as SecureLevelEnum,
    SecureLevelKM100: 'MX.secureLevelKM100' as SecureLevelEnum,
    SecureLevelHighest: 'MX.secureLevelHighest' as SecureLevelEnum,
    SecureLevelNoShow: 'MX.secureLevelNoShow' as SecureLevelEnum
  };
  export type CollectionTypeEnum =
    'MY.collectionTypeSpecimens'
    | 'MY.collectionTypeLiving'
    | 'MY.collectionTypeMonitoring'
    | 'MY.collectionTypeObservations'
    | 'MY.collectionTypePublicationdata'
    | 'MY.collectionTypePublication'
    | 'MY.collectionTypeMixed'
    | 'MY.collectionTypeOther'
    | 'MY.collectionTypeGardenArea';
  export const CollectionTypeEnum = {
    CollectionTypeSpecimens: 'MY.collectionTypeSpecimens' as CollectionTypeEnum,
    CollectionTypeLiving: 'MY.collectionTypeLiving' as CollectionTypeEnum,
    CollectionTypeMonitoring: 'MY.collectionTypeMonitoring' as CollectionTypeEnum,
    CollectionTypeObservations: 'MY.collectionTypeObservations' as CollectionTypeEnum,
    CollectionTypePublicationdata: 'MY.collectionTypePublicationdata' as CollectionTypeEnum,
    CollectionTypePublication: 'MY.collectionTypePublication' as CollectionTypeEnum,
    CollectionTypeMixed: 'MY.collectionTypeMixed' as CollectionTypeEnum,
    CollectionTypeOther: 'MY.collectionTypeOther' as CollectionTypeEnum,
    CollectionTypeGardenArea: 'MY.collectionTypeGardenArea' as CollectionTypeEnum
  };
  export type DataQualityEnum =
    'MY.dataQuality1'
    | 'MY.dataQuality2'
    | 'MY.dataQuality3'
    | 'MY.dataQuality4'
    | 'MY.dataQuality5'
    | 'MY.dataQualityNA';
  export const DataQualityEnum = {
    DataQuality1: 'MY.dataQuality1' as DataQualityEnum,
    DataQuality2: 'MY.dataQuality2' as DataQualityEnum,
    DataQuality3: 'MY.dataQuality3' as DataQualityEnum,
    DataQuality4: 'MY.dataQuality4' as DataQualityEnum,
    DataQuality5: 'MY.dataQuality5' as DataQualityEnum,
    DataQualityNA: 'MY.dataQualityNA' as DataQualityEnum
  };
  export type IntellectualRightsEnum =
    'MY.intellectualRightsCC-BY'
    | 'MY.intellectualRightsCC0'
    | 'MY.intellectualRightsPD'
    | 'MY.intellectualRightsARR';
  export const IntellectualRightsEnum = {
    IntellectualRightsCCBY: 'MY.intellectualRightsCC-BY' as IntellectualRightsEnum,
    IntellectualRightsCC0: 'MY.intellectualRightsCC0' as IntellectualRightsEnum,
    IntellectualRightsPD: 'MY.intellectualRightsPD' as IntellectualRightsEnum,
    IntellectualRightsARR: 'MY.intellectualRightsARR' as IntellectualRightsEnum
  };
  export type MetadataStatusEnum =
    'MY.metadataStatusPreliminary'
    | 'MY.metadataStatusSatisfactory'
    | 'MY.metadataStatusComprehensive'
    | 'MY.metadataStatusHidden';
  export const MetadataStatusEnum = {
    MetadataStatusPreliminary: 'MY.metadataStatusPreliminary' as MetadataStatusEnum,
    MetadataStatusSatisfactory: 'MY.metadataStatusSatisfactory' as MetadataStatusEnum,
    MetadataStatusComprehensive: 'MY.metadataStatusComprehensive' as MetadataStatusEnum,
    MetadataStatusHidden: 'MY.metadataStatusHidden' as MetadataStatusEnum
  };
  export type PublicationTermsEnum =
    'MY.publicationTermsFree'
    | 'MY.publicationTermsOfficial'
    | 'MY.publicationTermsInternal'
    | 'MY.publicationTermsNone';
  export const PublicationTermsEnum = {
    PublicationTermsFree: 'MY.publicationTermsFree' as PublicationTermsEnum,
    PublicationTermsOfficial: 'MY.publicationTermsOfficial' as PublicationTermsEnum,
    PublicationTermsInternal: 'MY.publicationTermsInternal' as PublicationTermsEnum,
    PublicationTermsNone: 'MY.publicationTermsNone' as PublicationTermsEnum
  };
  export type PublicityRestrictionsEnum =
    'MZ.publicityRestrictionsPublic'
    | 'MZ.publicityRestrictionsProtected'
    | 'MZ.publicityRestrictionsPrivate';
  export const PublicityRestrictionsEnum = {
    PublicityRestrictionsPublic: 'MZ.publicityRestrictionsPublic' as PublicityRestrictionsEnum,
    PublicityRestrictionsProtected: 'MZ.publicityRestrictionsProtected' as PublicityRestrictionsEnum,
    PublicityRestrictionsPrivate: 'MZ.publicityRestrictionsPrivate' as PublicityRestrictionsEnum
  };
}
