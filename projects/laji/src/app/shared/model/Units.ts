/**
 * OpenAPI spec version: 0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Identifications } from './Identifications';
import { TypeSpecimens } from './TypeSpecimens';
import { UnitFact } from './UnitFact';
import { UnitGathering } from './UnitGathering';
import { Gatherings } from './Gatherings';

export interface Units {

    /**
     * Diameter at breast height, in centimeters
     */
    dBH?: string;

    /**
     * Leave empty if no sample taken, or if the sample was recorded separately
     */
    dNASampleLocation?: string;

    abundanceString?: string;

    adultIndividualCount?: number;

    age?: string;

    ageNotes?: string;

    local?: boolean;

    alive?: boolean;

    ankleInMillimeters?: Array<string>;

    atlasCode?: Units.AtlasCodeEnum;

    beakInMillimeters?: Array<string>;

    breeding?: boolean;

    broodSize?: number;

    causeOfDeath?: string;

    /**
     * QName for MR.checklist
     */
    checklistID?: string;

    chemistry?: string;

    /**
     * Numeric or other description on the amount of individuals (or sprouts, fruiting bodies or such) in the specimen.
     * Sexes and juveniles can be specified like so: 1m2f3j (=1 male, 2 females, 3 juveniles)
     */
    count?: string;

    decayStage?: string;

    /**
     * Non-negative integer
     */
    femaleIndividualCount?: number;

    genotype?: string;

    gonadInMillimeters?: Array<string>;

    growthMediumName?: string;

    growthOtherConditions?: string;

    growthTemperature?: string;

    /**
     * QName for MX.taxon
     */
    hostID?: string;

    hostInformalNameString?: string;

    /**
     * Unique ID for the object. This will be automatically generated.
     */
    id?: string;

    /**
     * Array of identifications
     */
    identifications?: Array<Identifications>;

    /**
     * QName for MM.image
     */
    images?: Array<string>;

    /**
     * Non-negative integer
     */
    individualCount?: number;

    informalNameString?: string;

    /**
     * QName for MVL.informalTaxonGroup
     */
    informalTaxonGroup?: string;

    informalTaxonGroups?: string[];

    infrasubspecificSubdivision?: string;

    juvenileIndividualCount?: number;

    lengthInMillimeters?: Array<string>;

    lifeStage?: Units.LifeStageEnum;

    lifeStageDescription?: string;

    macroscopy?: string;

    /**
     * Non-negative integer
     */
    maleIndividualCount?: number;

    measurement?: Array<string>;

    microscopy?: string;

    movingStatus?: string;

    mutant?: string;

    nativeStatus?: Units.NativeStatusEnum;

    /**
     * Free-text notes
     */
    notes?: string;

    pairCount?: number;

    plantLifeStage?: Units.PlantLifeStageEnum;

    plantStatusCode?: Units.PlantStatusCodeEnum;

    /**
     * Abundance of the taxon in the field
     */
    populationAbundance?: string;

    preparations?: string;

    /**
     * Main method of preservation
     */
    preservation?: Units.PreservationEnum;

    primarySpecimen?: boolean;

    /**
     * Source of the accession
     */
    provenance?: Units.ProvenanceEnum;

    /**
     * PUBLIC: all data can be published; PROTECTED: exact locality is hidden; PRIVATE: most of the data is hidden.
     * If blank means same as public
     */
    publicityRestrictions?: Units.PublicityRestrictionsEnum;

    recordBasis?: Units.RecordBasisEnum;

    recordParts?: Array<string>;

    ring?: string;

    samplingMethod?: Gatherings.SamplingMethodEnum;

    sex?: Units.SexEnum;

    sexNotes?: string;

    shortHandText?: string;

    smell?: Units.SmellEnum;

    smellNotes?: string;

    substrateClassification?: Units.SubstrateClassificationEnum;

    substrateDecayStage?: Units.SubstrateDecayStageEnum;

    substrateNotes?: string;

    substrateSpecies?: string;

    substrateTreeClassification?: Array<string>;

    tailInMillimeters?: Array<string>;

    taste?: Units.TasteEnum;

    tasteNotes?: string;

    taxonConfidence?: Units.TaxonConfidenceEnum;

    twitched?: boolean;

    /**
     * QName for MY.typeSpecimen
     */
    typeSpecimen?: Array<string>;

    /**
     * Array of typeSpecimens
     */
    typeSpecimens?: Array<TypeSpecimens>;

    /**
     * instance of unitFact
     */
    unitFact?: UnitFact;

    /**
     * instance of unitGathering
     */
    unitGathering?: UnitGathering;

    unitType?: Array<string>;

    weightInGrams?: Array<string>;

    wingInMillimeters?: Array<string>;

    /**
     * Decimal number
     */
    wingLengthAccuracy?: number;

    /**
     * Decimal number
     */
    wingLengthMax?: number;

    /**
     * Decimal number
     */
    wingLengthMin?: number;


    areaInSquareMeters?: number;

}
export namespace Units {
    export enum AtlasCodeEnum {
        AtlasCodeEnum1 = <any> 'MY.atlasCodeEnum1',
        AtlasCodeEnum2 = <any> 'MY.atlasCodeEnum2',
        AtlasCodeEnum3 = <any> 'MY.atlasCodeEnum3',
        AtlasCodeEnum4 = <any> 'MY.atlasCodeEnum4',
        AtlasCodeEnum5 = <any> 'MY.atlasCodeEnum5',
        AtlasCodeEnum6 = <any> 'MY.atlasCodeEnum6',
        AtlasCodeEnum7 = <any> 'MY.atlasCodeEnum7',
        AtlasCodeEnum8 = <any> 'MY.atlasCodeEnum8',
        AtlasCodeEnum61 = <any> 'MY.atlasCodeEnum61',
        AtlasCodeEnum62 = <any> 'MY.atlasCodeEnum62',
        AtlasCodeEnum63 = <any> 'MY.atlasCodeEnum63',
        AtlasCodeEnum64 = <any> 'MY.atlasCodeEnum64',
        AtlasCodeEnum65 = <any> 'MY.atlasCodeEnum65',
        AtlasCodeEnum66 = <any> 'MY.atlasCodeEnum66',
        AtlasCodeEnum71 = <any> 'MY.atlasCodeEnum71',
        AtlasCodeEnum72 = <any> 'MY.atlasCodeEnum72',
        AtlasCodeEnum73 = <any> 'MY.atlasCodeEnum73',
        AtlasCodeEnum74 = <any> 'MY.atlasCodeEnum74',
        AtlasCodeEnum75 = <any> 'MY.atlasCodeEnum75',
        AtlasCodeEnum81 = <any> 'MY.atlasCodeEnum81',
        AtlasCodeEnum82 = <any> 'MY.atlasCodeEnum82'
    }
    export enum LifeStageEnum {
        LifeStageEgg = <any> 'MY.lifeStageEgg',
        LifeStageLarva = <any> 'MY.lifeStageLarva',
        LifeStagePupa = <any> 'MY.lifeStagePupa',
        LifeStageJuvenile = <any> 'MY.lifeStageJuvenile',
        LifeStageNymph = <any> 'MY.lifeStageNymph',
        LifeStageSubimago = <any> 'MY.lifeStageSubimago',
        LifeStageImmature = <any> 'MY.lifeStageImmature',
        LifeStageAdult = <any> 'MY.lifeStageAdult',
        LifeStageFertile = <any> 'MY.lifeStageFertile',
        LifeStageSterile = <any> 'MY.lifeStageSterile',
        LifeStageTadpole = <any> 'MY.lifeStageTadpole',
        LifeStageDead = <any> 'MY.lifeStageDead',
        LifeStageAlive = <any> 'MY.lifeStageAlive'
    }
    export enum LineTransectObsTypeEnum {
        LineTransectObsTypeSong = <any> 'MY.lineTransectObsTypeSong',
        LineTransectObsTypeOtherSound = <any> 'MY.lineTransectObsTypeOtherSound',
        LineTransectObsTypeSeen = <any> 'MY.lineTransectObsTypeSeen',
        LineTransectObsTypeSeenMale = <any> 'MY.lineTransectObsTypeSeenMale',
        LineTransectObsTypeSeenFemale = <any> 'MY.lineTransectObsTypeSeenFemale',
        LineTransectObsTypeFlyingOverhead = <any> 'MY.lineTransectObsTypeFlyingOverhead',
        LineTransectObsTypeFlock = <any> 'MY.lineTransectObsTypeFlock',
        LineTransectObsTypeFlockFlyingOverhead = <any> 'MY.lineTransectObsTypeFlockFlyingOverhead',
        LineTransectObsTypeSeenPair = <any> 'MY.lineTransectObsTypeSeenPair',
        LineTransectObsTypeSeenBrood = <any> 'MY.lineTransectObsTypeSeenBrood',
        LineTransectObsTypeSeenNest = <any> 'MY.lineTransectObsTypeSeenNest'
    }
    export enum LineTransectRouteFieldTypeEnum {
        LineTransectRouteFieldTypeInner = <any> 'MY.lineTransectRouteFieldTypeInner',
        LineTransectRouteFieldTypeOuter = <any> 'MY.lineTransectRouteFieldTypeOuter'
    }
    export enum NativeStatusEnum {
        Native = <any> 'MY.native',
        NonNative = <any> 'MY.nonNative'
    }
    export enum PlantLifeStageEnum {
        PlantLifeStageSterile = <any> 'MY.plantLifeStageSterile',
        PlantLifeStageFertile = <any> 'MY.plantLifeStageFertile',
        PlantLifeStageSeed = <any> 'MY.plantLifeStageSeed',
        PlantLifeStageSprout = <any> 'MY.plantLifeStageSprout',
        PlantLifeStageBud = <any> 'MY.plantLifeStageBud',
        PlantLifeStageFlower = <any> 'MY.plantLifeStageFlower',
        PlantLifeStageWitheredFlower = <any> 'MY.plantLifeStageWitheredFlower',
        PlantLifeStageRipeningFruit = <any> 'MY.plantLifeStageRipeningFruit',
        PlantLifeStageRipeFruit = <any> 'MY.plantLifeStageRipeFruit',
        PlantLifeStageDeadSprout = <any> 'MY.plantLifeStageDeadSprout',
        PlantLifeStageSubterranean = <any> 'MY.plantLifeStageSubterranean',
        PlantLifeStageLivingPlant = <any> 'MY.plantLifeStageLivingPlant',
        PlantLifeStageDeadPlant = <any> 'MY.plantLifeStageDeadPlant'
    }
    export enum PlantStatusCodeEnum {
        MYPlantStatusCodeL = <any> 'MY.MY.plantStatusCodeL',
        PlantStatusCodeA = <any> 'MY.plantStatusCodeA',
        PlantStatusCodeAV = <any> 'MY.plantStatusCodeAV',
        PlantStatusCodeAOV = <any> 'MY.plantStatusCodeAOV',
        PlantStatusCodeAN = <any> 'MY.plantStatusCodeAN',
        PlantStatusCodeANV = <any> 'MY.plantStatusCodeANV',
        PlantStatusCodeANS = <any> 'MY.plantStatusCodeANS',
        PlantStatusCodeT = <any> 'MY.plantStatusCodeT',
        PlantStatusCodeTV = <any> 'MY.plantStatusCodeTV',
        PlantStatusCodeTOV = <any> 'MY.plantStatusCodeTOV',
        PlantStatusCodeTNV = <any> 'MY.plantStatusCodeTNV',
        PlantStatusCodeTNS = <any> 'MY.plantStatusCodeTNS',
        PlantStatusCodeV = <any> 'MY.plantStatusCodeV',
        PlantStatusCodeOV = <any> 'MY.plantStatusCodeOV',
        PlantStatusCodeN = <any> 'MY.plantStatusCodeN',
        PlantStatusCodeNV = <any> 'MY.plantStatusCodeNV',
        PlantStatusCodeNS = <any> 'MY.plantStatusCodeNS',
        PlantStatusCodeE = <any> 'MY.plantStatusCodeE',
        PlantStatusCodeTE = <any> 'MY.plantStatusCodeTE',
        PlantStatusCodeTVE = <any> 'MY.plantStatusCodeTVE',
        PlantStatusCodeTOVE = <any> 'MY.plantStatusCodeTOVE',
        PlantStatusCodeTNVE = <any> 'MY.plantStatusCodeTNVE',
        PlantStatusCodeTNSE = <any> 'MY.plantStatusCodeTNSE',
        PlantStatusCodeTN = <any> 'MY.plantStatusCodeTN',
        PlantStatusCodeTNE = <any> 'MY.plantStatusCodeTNE',
        PlantStatusCodeR = <any> 'MY.plantStatusCodeR',
        PlantStatusCodeC = <any> 'MY.plantStatusCodeC',
        PlantStatusCodeH = <any> 'MY.plantStatusCodeH',
        PlantStatusCodeG = <any> 'MY.plantStatusCodeG',
        PlantStatusCodeF = <any> 'MY.plantStatusCodeF'
    }
    export enum PreservationEnum {
        PreservationPinned = <any> 'MY.preservationPinned',
        PreservationGlued = <any> 'MY.preservationGlued',
        PreservationEthanol = <any> 'MY.preservationEthanol',
        PreservationEthanolPure = <any> 'MY.preservationEthanolPure',
        PreservationEthanol96 = <any> 'MY.preservationEthanol96',
        PreservationEthanol80 = <any> 'MY.preservationEthanol80',
        PreservationEthanol80Pure = <any> 'MY.preservationEthanol80Pure',
        PreservationEthanol70 = <any> 'MY.preservationEthanol70',
        PreservationEthanolDenatured = <any> 'MY.preservationEthanolDenatured',
        PreservationFormalin = <any> 'MY.preservationFormalin',
        PreservationEthanolFormalin = <any> 'MY.preservationEthanolFormalin',
        PreservationGlycerol = <any> 'MY.preservationGlycerol',
        PreservationLiquid = <any> 'MY.preservationLiquid',
        PreservationEulan = <any> 'MY.preservationEulan',
        PreservationSlide = <any> 'MY.preservationSlide',
        PreservationSlideEuparal = <any> 'MY.preservationSlideEuparal',
        PreservationSlidePolyviol = <any> 'MY.preservationSlidePolyviol',
        PreservationSlideCanadaBalsam = <any> 'MY.preservationSlideCanadaBalsam',
        PreservationCriticalPointDrying = <any> 'MY.preservationCriticalPointDrying',
        PreservationGoldPlated = <any> 'MY.preservationGoldPlated',
        PreservationFreezeDried = <any> 'MY.preservationFreezeDried',
        PreservationFrozen = <any> 'MY.preservationFrozen',
        PreservationDry = <any> 'MY.preservationDry',
        PreservationStuffed = <any> 'MY.preservationStuffed',
        PreservationParaffin = <any> 'MY.preservationParaffin',
        PreservationPressed = <any> 'MY.preservationPressed',
        PreservationLiving = <any> 'MY.preservationLiving',
        PreservationCast = <any> 'MY.preservationCast',
        PreservationEthanolExFormalin = <any> 'MY.preservationEthanolExFormalin',
        PreservationMercuricChloride = <any> 'MY.preservationMercuricChloride',
        PreservationBouinSolution = <any> 'MY.preservationBouinSolution',
        PreservationPampelsFluid = <any> 'MY.preservationPampelsFluid'
    }
    export enum ProvenanceEnum {
        ProvenanceUnknown = <any> 'MY.provenanceUnknown',
        ProvenanceCultivated = <any> 'MY.provenanceCultivated',
        ProvenanceCultivatedUnsure = <any> 'MY.provenanceCultivatedUnsure',
        ProvenanceCultivatedPropagatedFromWildSource = <any> 'MY.provenanceCultivatedPropagatedFromWildSource',
        ProvenanceWildSource = <any> 'MY.provenanceWildSource',
        ProvenanceWildSourceUnsure = <any> 'MY.provenanceWildSourceUnsure',
        ProvenanceEscapedCultivated = <any> 'MY.provenanceEscapedCultivated',
        ProvenancePropagule = <any> 'MY.provenancePropagule'
    }
    export enum PublicityRestrictionsEnum {
        PublicityRestrictionsPublic = <any> 'MZ.publicityRestrictionsPublic',
        PublicityRestrictionsProtected = <any> 'MZ.publicityRestrictionsProtected',
        PublicityRestrictionsPrivate = <any> 'MZ.publicityRestrictionsPrivate'
    }
    export enum RecordBasisEnum {
        RecordBasisPreservedSpecimen = <any> 'MY.recordBasisPreservedSpecimen',
        RecordBasisFossilSpecimen = <any> 'MY.recordBasisFossilSpecimen',
        RecordBasisSubfossilSpecimen = <any> 'MY.recordBasisSubfossilSpecimen',
        RecordBasisHumanObservation = <any> 'MY.recordBasisHumanObservation',
        RecordBasisMachineObservation = <any> 'MY.recordBasisMachineObservation',
        RecordBasisLivingSpecimen = <any> 'MY.recordBasisLivingSpecimen',
        RecordBasisMicrobialSpecimen = <any> 'MY.recordBasisMicrobialSpecimen',
        RecordBasisHumanObservationSeen = <any> 'MY.recordBasisHumanObservationSeen',
        RecordBasisHumanObservationHeard = <any> 'MY.recordBasisHumanObservationHeard',
        RecordBasisHumanObservationPhoto = <any> 'MY.recordBasisHumanObservationPhoto',
        RecordBasisHumanObservationIndirect = <any> 'MY.recordBasisHumanObservationIndirect',
        RecordBasisHumanObservationHandled = <any> 'MY.recordBasisHumanObservationHandled',
        RecordBasisHumanObservationVideo = <any> 'MY.recordBasisHumanObservationVideo',
        RecordBasisHumanObservationAudio = <any> 'MY.recordBasisHumanObservationAudio',
        RecordBasisMachineObservationVideo = <any> 'MY.recordBasisMachineObservationVideo',
        RecordBasisMachineObservationAudio = <any> 'MY.recordBasisMachineObservationAudio',
        RecordBasisMachineObservationGeologger = <any> 'MY.recordBasisMachineObservationGeologger',
        RecordBasisMachineObservationSatelliteTransmitter = <any> 'MY.recordBasisMachineObservationSatelliteTransmitter',
        RecordBasisLiterature = <any> 'MY.recordBasisLiterature'
    }
    export enum SexEnum {
        SexM = <any> 'MY.sexM',
        SexF = <any> 'MY.sexF',
        SexW = <any> 'MY.sexW',
        SexU = <any> 'MY.sexU',
        SexN = <any> 'MY.sexN',
        SexX = <any> 'MY.sexX',
        SexE = <any> 'MY.sexE',
        SexC = <any> 'MY.sexC'
    }
    export enum SmellEnum {
        SmellNotSmelled = <any> 'MY.smellNotSmelled',
        SmellNoSmelled = <any> 'MY.smellNoSmelled',
        SmellWeak = <any> 'MY.smellWeak',
        SmellModerate = <any> 'MY.smellModerate',
        SmellStrong = <any> 'MY.smellStrong'
    }
    export enum SubstrateClassificationEnum {
        SubstrateGround = <any> 'MY.substrateGround',
        SubstrateGroundLowShrubs = <any> 'MY.substrateGroundLowShrubs',
        SubstrateGroundLichens = <any> 'MY.substrateGroundLichens',
        SubstrateGroundHerbs = <any> 'MY.substrateGroundHerbs',
        SubstrateGroundMosses = <any> 'MY.substrateGroundMosses',
        SubstrateGroundSphagnum = <any> 'MY.substrateGroundSphagnum',
        SubstrateGroundGrassy = <any> 'MY.substrateGroundGrassy',
        SubstrateGroundNeedleLitter = <any> 'MY.substrateGroundNeedleLitter',
        SubstrateGroundLeafLitter = <any> 'MY.substrateGroundLeafLitter',
        SubstrateGroundMixedLitter = <any> 'MY.substrateGroundMixedLitter',
        SubstrateGroundSandySoil = <any> 'MY.substrateGroundSandySoil',
        SubstrateGroundGravelSoil = <any> 'MY.substrateGroundGravelSoil',
        SubstrateGroundClayeySoil = <any> 'MY.substrateGroundClayeySoil',
        SubstrateGroundHeathHumus = <any> 'MY.substrateGroundHeathHumus',
        SubstrateGroundMull = <any> 'MY.substrateGroundMull',
        SubstrateGroundPeat = <any> 'MY.substrateGroundPeat',
        SubstrateGroundBurnedSoil = <any> 'MY.substrateGroundBurnedSoil',
        SubstrateLivingTree = <any> 'MY.substrateLivingTree',
        SubstrateLivingTreeTrunk = <any> 'MY.substrateLivingTreeTrunk',
        SubstrateLivingTreeBase = <any> 'MY.substrateLivingTreeBase',
        SubstrateLivingTreeRoots = <any> 'MY.substrateLivingTreeRoots',
        SubstrateLivingTreeBranch = <any> 'MY.substrateLivingTreeBranch',
        SubstrateLivingTreeDeadBranch = <any> 'MY.substrateLivingTreeDeadBranch',
        SubstrateLivingTreeDeadLimb = <any> 'MY.substrateLivingTreeDeadLimb',
        SubstrateLivingTreeLeaf = <any> 'MY.substrateLivingTreeLeaf',
        SubstrateLivingTreeNeedle = <any> 'MY.substrateLivingTreeNeedle',
        SubstrateDeadWood = <any> 'MY.substrateDeadWood',
        SubstrateDeadWoodStandingTreeTrunk = <any> 'MY.substrateDeadWoodStandingTreeTrunk',
        SubstrateDeadWoodStandingTreeBranch = <any> 'MY.substrateDeadWoodStandingTreeBranch',
        SubstrateDeadWoodStandingTreeBase = <any> 'MY.substrateDeadWoodStandingTreeBase',
        SubstrateDeadWoodFallenTreeTrunk = <any> 'MY.substrateDeadWoodFallenTreeTrunk',
        SubstrateDeadWoodFallenTreeBranch = <any> 'MY.substrateDeadWoodFallenTreeBranch',
        SubstrateDeadWoodUpturnedRoots = <any> 'MY.substrateDeadWoodUpturnedRoots',
        SubstrateDeadWoodDeadRoots = <any> 'MY.substrateDeadWoodDeadRoots',
        SubstrateDeadWoodStump = <any> 'MY.substrateDeadWoodStump',
        SubstrateDeadWoodFallenBranch = <any> 'MY.substrateDeadWoodFallenBranch',
        SubstrateDeadWoodCone = <any> 'MY.substrateDeadWoodCone',
        SubstrateDeadWoodTwigs = <any> 'MY.substrateDeadWoodTwigs',
        SubstrateDeadWoodBark = <any> 'MY.substrateDeadWoodBark',
        SubstrateDeadWoodSawdust = <any> 'MY.substrateDeadWoodSawdust',
        SubstrateDeadWoodPieceOfWood = <any> 'MY.substrateDeadWoodPieceOfWood',
        SubstrateDeadWoodLoggingResidue = <any> 'MY.substrateDeadWoodLoggingResidue',
        SubstrateDeadWoodLog = <any> 'MY.substrateDeadWoodLog',
        SubstrateDeadWoodDriftwood = <any> 'MY.substrateDeadWoodDriftwood',
        SubstrateDeadWoodConstructionWood = <any> 'MY.substrateDeadWoodConstructionWood',
        SubstrateDung = <any> 'MY.substrateDung',
        SubstrateCompost = <any> 'MY.substrateCompost',
        SubstrateLivingShoot = <any> 'MY.substrateLivingShoot',
        SubstrateDeadShoot = <any> 'MY.substrateDeadShoot',
        SubstrateLivingFungus = <any> 'MY.substrateLivingFungus',
        SubstrateDeadFungus = <any> 'MY.substrateDeadFungus',
        SubstrateLivingAnimal = <any> 'MY.substrateLivingAnimal',
        SubstrateDeadAnimal = <any> 'MY.substrateDeadAnimal',
        SubstrateRockSurface = <any> 'MY.substrateRockSurface'
    }
    export enum SubstrateDecayStageEnum {
        SubstrateDecayStageEnum1 = <any> 'MY.substrateDecayStageEnum1',
        SubstrateDecayStageEnum2 = <any> 'MY.substrateDecayStageEnum2',
        SubstrateDecayStageEnum3 = <any> 'MY.substrateDecayStageEnum3',
        SubstrateDecayStageEnum4 = <any> 'MY.substrateDecayStageEnum4',
        SubstrateDecayStageEnum5 = <any> 'MY.substrateDecayStageEnum5'
    }
    export enum TasteEnum {
        TasteNotTasted = <any> 'MY.tasteNotTasted',
        TasteNoTaste = <any> 'MY.tasteNoTaste',
        TasteWeak = <any> 'MY.tasteWeak',
        TasteModerate = <any> 'MY.tasteModerate',
        TasteStrong = <any> 'MY.tasteStrong'
    }
    export enum TaxonConfidenceEnum {
        TaxonConfidenceSure = <any> 'MY.taxonConfidenceSure',
        TaxonConfidenceUnsure = <any> 'MY.taxonConfidenceUnsure',
        TaxonConfidenceSubspeciesUnsure = <any> 'MY.taxonConfidenceSubspeciesUnsure'
    }
}
