{
  "name": "laji-front",
  "version": "1.0.44",
  "main": "dist/electron",
  "description": "laji.fi frontend",
  "scripts": {
    "ng-high-memory": "node --max_old_space_size=8192 ./node_modules/@angular/cli/bin/ng",
    "ng": "ng",
    "start": "ng serve --configuration=local --host 0.0.0.0 --port 3000",
    "start:local:api": "ng serve --configuration=local --proxy-config proxy.conf.js --host 0.0.0.0 --port 3000",
    "start:local:prod": "NODE_ENV=development ng serve --aot=false --build-optimizer=false --configuration=local --prod --proxy-config proxy.conf.js --host 0.0.0.0 --port 3000",
    "start:ssr:local": "npm run build:ssr:local && npm run server",
    "start:aot": "ng serve --configuration=local --proxy-config proxy.conf.js --host 0.0.0.0 --port 3000",
    "start:prod": "ng serve --configuration=prod --proxy-config proxy.conf.js --host 0.0.0.0 --port 3000",
    "start:embedded": "ng serve --configuration=embedded --proxy-config proxy.conf.js --host 0.0.0.0 --port 3000",
    "start:vir": "ng serve --configuration=vir --proxy-config proxy.conf.js --host 0.0.0.0 --port 3000",
    "start:iucn": "ng serve iucn --configuration=dev --proxy-config proxy.conf.js --host 0.0.0.0 --port 3000",
    "start:label-designer-element": "ng serve label-designer-element --host 0.0.0.0",
    "start:label-designer:element": "npm run build:label-designer-electron && electron ./dist/electron",
    "start:label-designer-electron": "ng serve label-designer-electron --host 0.0.0.0",
    "build:label-designer": "ng build label-designer",
    "build:prod": "npm run ng-high-memory -- build --prod --configuration=production --base-href https://laji.fi/",
    "build:local": "ng build --configuration=local --prod --base-href http://localhost:3000/",
    "build:embedded": "npm run ng-high-memory -- build --configuration=embedded --prod",
    "build:iucn": "npm run ng-high-memory -- build iucn --prod",
    "build:vir": "npm run ng-high-memory -- build --configuration=vir --prod",
    "build:dev": "npm run ng-high-memory -- build --configuration=dev --prod --base-href https://dev.laji.fi",
    "build:beta": "npm run ng-high-memory -- build --configuration=beta --prod --base-href https://beta.laji.fi",
    "build:dev:embedded": "npm run ng-high-memory -- build --configuration=dev-embedded --prod --base-href https://dev-embedded.laji.fi",
    "build:label-designer-electron": "rm -rf dist && ng build --base-href ./ label-designer-electron && tsc --p projects/label-designer-electron/electron && cp projects/label-designer-electron/package.json dist/",
    "build:laji-ui": "ng build laji-ui",
    "build:label-designer-element": "ng build --prod --output-hashing=none label-designer-element",
    "build:server:prod": "ng run laji:server:production && webpack --config webpack.server.config.js --progress --colors --mode production",
    "build:server:beta": "ng run laji:server:beta --bundleDependencies all && webpack --config webpack.server.config.js --progress --colors --mode production",
    "build:server:dev": "ng run laji:server:dev && webpack --config webpack.server.config.js --progress --colors --mode production",
    "build:server:local": "ng run laji:server:local && webpack --config webpack.server.config.js --progress --colors --mode development",
    "build:ssr:prod": "npm run build:server:prod && npm run build:prod",
    "build:ssr:beta": "npm run build:server:beta && npm run build:beta",
    "build:ssr:dev": "npm run build:server:dev && npm run build:dev",
    "build:ssr:local": "npm run build:server:local && npm run build:local",
    "bundle-report": "npm run ng-high-memory -- build --prod --aot --stats-json --named-chunks=true && webpack-bundle-analyzer dist/browser/stats.json",
    "lint": "tslint --project ./src/tsconfig.app.json \"src/**/*.ts\"",
    "test": "ng test",
    "pree2e": "webdriver-manager update --standalone false --gecko false",
    "e2e": "ng e2e --port 3000",
    "postinstall": "patch-package && node ./scripts/remove-extras.js",
    "package:label-designer": "npm run build:label-designer-electron && npm run prepare:package:label-designer",
    "package:label-designer-element": "npm run build:label-designer-element && cat ./dist/label-designer-element/runtime.js ./dist/label-designer-element/polyfills.js ./dist/label-designer-element/scripts.js ./dist/label-designer-element/main.js > ./dist/label-designer.js",
    "package:label-designer-linux": "electron-packager ./dist \"Label Designer\" --out=release-builds --platform=linux --arch=x64 --asar --executableName=LabelDesigner --overwrite --prune",
    "package:label-designer-mac": "electron-packager ./dist \"Label Designer\" --out=release-builds --platform=darwin  --arch=x64 --asar --executableName=LabelDesigner --overwrite --prune --appBundleId=fi.laji.labelDesigner --app-category-type=public.app-category.graphics-design",
    "package:label-designer-win": "electron-packager ./dist \"Label Designer\" --out=release-builds --platform=win32 --arch=ia32 --asar --executableName=LabelDesigner --overwrite --prune",
    "server": "node dist/server",
    "msg-a": "node ./scripts/echo.js \"\nLint check!\n**Please note that warnings can be ignored, only errors will prevent the commit!**\n\n\""
  },
  "contributors": [
    "Ville-Matti Riihikoski <ville-matti.riihikoski@helsinki.fi>",
    "Kalle Myllymaa <kalle.myllymaa@helsinki.fi>",
    "Pyry MÃ¤kinen <pyry.makinen@helsinki.fi>",
    "Meeri Rannisto <meeri.rannisto@helsinki.fi>"
  ],
  "license": "MIT",
  "angular-cli": {},
  "private": false,
  "dependencies": {
    "@angular/animations": "^8.2.13",
    "@angular/cdk": "^8.2.3",
    "@angular/common": "^8.2.13",
    "@angular/compiler": "^8.2.13",
    "@angular/core": "^8.2.13",
    "@angular/elements": "^8.2.13",
    "@angular/forms": "^8.2.13",
    "@angular/http": "^7.1.1",
    "@angular/platform-browser": "^8.2.13",
    "@angular/platform-browser-dynamic": "^8.2.13",
    "@angular/platform-server": "^8.2.13",
    "@angular/router": "^8.2.13",
    "@ng-select/ng-select": "^3.6.0",
    "@ng-toolkit/universal": "^7.1.2",
    "@nguniversal/common": "^8.1.1",
    "@nguniversal/express-engine": "^8.1.1",
    "@nguniversal/module-map-ngfactory-loader": "^8.1.1",
    "@ngx-translate/core": "^11.0.1",
    "@swimlane/ngx-charts": "^12.0.1",
    "@swimlane/ngx-datatable": "git+https://git@github.com/vixriihi/ngx-datatable.git#dev",
    "angularx-qrcode": "^1.5.1",
    "apollo-angular": "^1.8.0",
    "apollo-angular-link-http": "^1.9.0",
    "apollo-cache-inmemory": "^1.6.3",
    "apollo-client": "^2.6.4",
    "chart.js": "^2.9.2",
    "chartjs-plugin-datalabels": "^0.6.0",
    "classlist.js": "^1.1.20150312",
    "core-js": "^2.6.10",
    "cors": "~2.8.5",
    "d3-axis": "^1.0.8",
    "d3-format": "^1.2.0",
    "d3-scale": "^2.1.2",
    "d3-selection": "^1.1.0",
    "d3-shape": "^1.2.0",
    "deep-equal": "^1.0.1",
    "deepmerge": "^2.2.1",
    "document-register-element": "^1.13.2",
    "domino": "^2.1.3",
    "file-saver": "^2.0.2",
    "graphql": "^14.5.8",
    "graphql-tag": "^2.10.1",
    "ie-shim": "^0.1.0",
    "intl": "^1.2.5",
    "jsonpath-plus": "^0.20.1",
    "jw-bootstrap-switch-ng2": "^2.0.5",
    "label-designer": "^3.2.4",
    "laji-form": "^4.3.0",
    "laji-map": "3.0.4",
    "leaflet.sync": "^0.2.4",
    "localforage": "^1.7.3",
    "moment": "2.24.0",
    "ng2-charts": "^2.3.0",
    "ngx-bootstrap": "^5.2.0",
    "ngx-clipboard": "^12.2.0",
    "ngx-moment": "^3.5.0",
    "ngx-toastr": "^10.0.4",
    "ngx-webstorage": "4.0.1",
    "object-hash": "^1.3.1",
    "openseadragon": "^2.4.1",
    "rxjs": "^6.5.2",
    "rxjs-compat": "^6.5.2",
    "ts-loader": "6.0.4",
    "tslib": "^1.10.0",
    "vm": "^0.1.0",
    "web-animations-js": "^2.3.2",
    "xlsx": "0.13.2",
    "zone.js": "^0.9.1"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.802.1",
    "@angular-devkit/build-ng-packagr": "~0.802.1",
    "@angular/cli": "^8.3.18",
    "@angular/compiler-cli": "^8.2.13",
    "@angular/language-service": "^8.2.13",
    "@phenomnomnominal/angular-lazy-routes-fix": "^0.1.5",
    "@types/d3-axis": "^1.0.10",
    "@types/d3-format": "^1.3.0",
    "@types/d3-scale": "^2.0.2",
    "@types/d3-selection": "^1.3.4",
    "@types/d3-shape": "^1.3.2",
    "@types/geojson": "7946.0.4",
    "@types/jasmine": "3.3.0",
    "@types/jasminewd2": "2.0.6",
    "@types/jszip": "^3.1.5",
    "@types/leaflet": "^1.4.6",
    "@types/leaflet-draw": "^0.4.14",
    "@types/leaflet.markercluster": "^1.4.0",
    "@types/node": "^11.15.2",
    "@types/object-hash": "^1.2.0",
    "@types/redis": "^2.8.8",
    "@types/redlock": "^3.0.5",
    "@types/underscore": "1.8.9",
    "codelyzer": "~4.5.0",
    "globby": "^8.0.1",
    "hiredis": "^0.5.0",
    "husky": "^1.2.0",
    "jasmine-core": "~2.99.1",
    "jasmine-reporters": "~2.3.2",
    "jasmine-spec-reporter": "~4.2.1",
    "jszip": "^3.2.0",
    "karma": "~4.1.0",
    "karma-chrome-launcher": "~2.2.0",
    "karma-cli": "2.0.0",
    "karma-coverage-istanbul-reporter": "~2.0.5",
    "karma-jasmine": "~1.1.2",
    "karma-jasmine-html-reporter": "^0.2.2",
    "ng-packagr": "^5.7.1",
    "patch-package": "6.0.0-11",
    "postinstall-prepare": "^1.0.1",
    "protractor": "~5.4.2",
    "redis": "^2.8.0",
    "redlock": "^3.1.2",
    "regexp-replace-loader": "^1.0.1",
    "rimraf": "2.6.2",
    "rxjs-tslint": "^0.1.7",
    "string-replace-loader": "^2.1.1",
    "ts-node": "7.0.1",
    "tsickle": "^0.37.1",
    "tslib": "^1.10.0",
    "tslint": "~5.11.0",
    "tslint-angular": "^1.1.2",
    "typescript": "~3.4.5",
    "webpack-bundle-analyzer": "^3.6.0",
    "webpack-cli": "^3.3.10",
    "webpack-node-externals": "^1.7.2"
  },
  "peerDependencies": {
    "@types/electron": "^1.6.10",
    "electron": "^4.1.0",
    "electron-packager": "^13.1.1"
  },
  "resolutions": {
    "proj4": "2.3.16",
    "leaflet": "1.6.0",
    "@types/leaflet-draw": "0.4.14",
    "laji-map": "3.0.2",
    "tslint": "5.10.0",
    "typescript": "3.4.5"
  },
  "keywords": [
    "laji.fi"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://bitbucket.org:luomus/laji.fi-front.git"
  },
  "homepage": "https://bitbucket.org/luomus/laji.fi-front",
  "husky": {
    "hooks": {
      "pre-commit": "npm --silent run msg-a && npm --silent run lint"
    }
  }
}
