diff --git a/node_modules/@nguniversal/common/README.md b/node_modules/@nguniversal/common/README.md
index cfe1537..bad5b3f 100755
--- a/node_modules/@nguniversal/common/README.md
+++ b/node_modules/@nguniversal/common/README.md
@@ -9,67 +9,4 @@ The package can be installed using:
 
 ## TransferHttpCacheModule
 
-`TransferHttpCacheModule` installs a Http interceptor that avoids duplicate `HttpClient` requests
-on the client, for requests that were already made when the application was rendered on the server
-side.
-
-When the module is installed in the application `NgModule`, it will intercept `HttpClient` requests
-on the server and store the response in the `TransferState` key-value store. This is transferred to the client, which then uses it to respond to the same `HttpClient` requests on the client.
-
-### Usage
-
-To use the `TransferHttpCacheModule`, first install it as part of the top-level App module.
-
-```ts
-import {TransferHttpCacheModule} from '@nguniversal/common';
-
-@NgModule({
-  imports: [
-    BrowserModule.withServerTransition({appId: 'my-app'}),
-    TransferHttpCacheModule,
-  ],
-  bootstrap: [MyApp]
-})
-export class AppBrowserModule() {}
-```
-Then, import `ServerTransferStateModule` in your Server module.
-
-```ts
-import { NgModule } from "@angular/core";
-import {
-  ServerModule,
-  ServerTransferStateModule
-} from "@angular/platform-server";
-
-import { AppModule } from "./app.module";
-import { AppComponent } from "./app.component";
-
-@NgModule({
-  imports: [
-    AppModule,
-    ServerModule,
-    ServerTransferStateModule
-  ],
-  bootstrap: [AppComponent]
-})
-export class AppServerModule {}
-
-```
-Finally, in `main.ts` change this:
-
-```ts
-...
-
-platformBrowserDynamic().bootstrapModule(AppBrowserModule);
-```
-To this: 
-
-```ts
-...
-
-document.addEventListener("DOMContentLoaded", () => {
-  platformBrowserDynamic()
-    .bootstrapModule(AppBrowserModule)
-    .catch(err => console.log(err));
-});
-```
+Moved to [/docs/transfer-http.md](https://github.com/angular/universal/tree/master/docs/transfer-http.md)
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/bundles/common-engine.umd.js b/node_modules/@nguniversal/common/bundles/common-engine.umd.js
new file mode 100755
index 0000000..6ee9008
--- /dev/null
+++ b/node_modules/@nguniversal/common/bundles/common-engine.umd.js
@@ -0,0 +1,215 @@
+(function (global, factory) {
+	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('fs'), require('@angular/compiler'), require('@angular/core'), require('@angular/platform-server')) :
+	typeof define === 'function' && define.amd ? define('@nguniversal/common/engine', ['exports', 'fs', '@angular/compiler', '@angular/core', '@angular/platform-server'], factory) :
+	(factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = global.nguniversal.common || {}, global.nguniversal.common.engine = {}),global.fs,global.ng.compiler,global.ng.core,global.ng.platformServer));
+}(this, (function (exports,fs,compiler,core,platformServer) { 'use strict';
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/** ResourceLoader implementation for loading files */
+var FileLoader = /** @class */ (function () {
+    function FileLoader() {
+    }
+    FileLoader.prototype.get = function (url) {
+        return new Promise(function (resolve, reject) {
+            fs.readFile(url, function (err, buffer) {
+                if (err) {
+                    return reject(err);
+                }
+                resolve(buffer.toString());
+            });
+        });
+    };
+    return FileLoader;
+}());
+
+var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (_) try {
+            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [0, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+var __read = (undefined && undefined.__read) || function (o, n) {
+    var m = typeof Symbol === "function" && o[Symbol.iterator];
+    if (!m) return o;
+    var i = m.call(o), r, ar = [], e;
+    try {
+        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
+    }
+    catch (error) { e = { error: error }; }
+    finally {
+        try {
+            if (r && !r.done && (m = i["return"])) m.call(i);
+        }
+        finally { if (e) throw e.error; }
+    }
+    return ar;
+};
+var __spread = (undefined && undefined.__spread) || function () {
+    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
+    return ar;
+};
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/**
+ * A common rendering engine utility. This abstracts the logic
+ * for handling the platformServer compiler, the module cache, and
+ * the document loader
+ */
+var CommonEngine = /** @class */ (function () {
+    function CommonEngine(moduleOrFactory, providers) {
+        if (providers === void 0) { providers = []; }
+        this.moduleOrFactory = moduleOrFactory;
+        this.providers = providers;
+        this.factoryCacheMap = new Map();
+        this.templateCache = {};
+    }
+    /** Return an instance of the platformServer compiler */
+    CommonEngine.prototype.getCompiler = function () {
+        var compilerFactory = platformServer.platformDynamicServer().injector.get(core.CompilerFactory);
+        return compilerFactory.createCompiler([
+            { providers: [{ provide: compiler.ResourceLoader, useClass: FileLoader, deps: [] }] }
+        ]);
+    };
+    /**
+     * Render an HTML document for a specific URL with specified
+     * render options
+     */
+    CommonEngine.prototype.render = function (opts) {
+        return __awaiter(this, void 0, void 0, function () {
+            var doc, _a, extraProviders, factory;
+            return __generator(this, function (_b) {
+                switch (_b.label) {
+                    case 0:
+                        _a = opts.document;
+                        if (_a) return [3 /*break*/, 2];
+                        return [4 /*yield*/, this.getDocument(opts.documentFilePath)];
+                    case 1:
+                        _a = (_b.sent());
+                        _b.label = 2;
+                    case 2:
+                        doc = _a;
+                        extraProviders = __spread((opts.providers || []), (this.providers || []), [
+                            {
+                                provide: platformServer.INITIAL_CONFIG,
+                                useValue: {
+                                    document: doc,
+                                    url: opts.url
+                                }
+                            }
+                        ]);
+                        return [4 /*yield*/, this.getFactory()];
+                    case 3:
+                        factory = _b.sent();
+                        return [2 /*return*/, platformServer.renderModuleFactory(factory, { extraProviders: extraProviders })];
+                }
+            });
+        });
+    };
+    /** Return the factory for a given engine instance */
+    CommonEngine.prototype.getFactory = function () {
+        var _this = this;
+        // If module has been compiled AoT
+        var moduleOrFactory = this.moduleOrFactory;
+        if (moduleOrFactory instanceof core.NgModuleFactory) {
+            return Promise.resolve(moduleOrFactory);
+        }
+        else {
+            // we're in JIT mode
+            var moduleFactory = this.factoryCacheMap.get(moduleOrFactory);
+            // If module factory is cached
+            if (moduleFactory) {
+                return Promise.resolve(moduleFactory);
+            }
+            // Compile the module and cache it
+            return this.getCompiler().compileModuleAsync(moduleOrFactory)
+                .then(function (factory) {
+                _this.factoryCacheMap.set(moduleOrFactory, factory);
+                return factory;
+            });
+        }
+    };
+    /** Retrieve the document from the cache or the filesystem */
+    CommonEngine.prototype.getDocument = function (filePath) {
+        var doc = this.templateCache[filePath] = this.templateCache[filePath] ||
+            fs.readFileSync(filePath).toString();
+        // As  promise so we can change the API later without breaking
+        return Promise.resolve(doc);
+    };
+    return CommonEngine;
+}());
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * Generated bundle index. Do not edit.
+ */
+
+exports.ɵFileLoader = FileLoader;
+exports.ɵCommonEngine = CommonEngine;
+
+Object.defineProperty(exports, '__esModule', { value: true });
+
+})));
+//# sourceMappingURL=common-engine.umd.js.map
diff --git a/node_modules/@nguniversal/common/bundles/common-engine.umd.js.map b/node_modules/@nguniversal/common/bundles/common-engine.umd.js.map
new file mode 100755
index 0000000..6d73ecf
--- /dev/null
+++ b/node_modules/@nguniversal/common/bundles/common-engine.umd.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"common-engine.umd.js","sources":["../../../../../../../../../../execroot/modules/common/engine/src/file-loader.ts","../../../../../../../../../../execroot/modules/common/engine/src/engine.ts","../../../../../../../../../../execroot/modules/common/engine/private_api.ts","../../../../../../../../../../execroot/modules/common/engine/public_api.ts","../../../../../../../../../../execroot/modules/common/engine/index.ts","../../../../../../../../../../execroot/modules/common/engine/engine_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport { ResourceLoader } from '@angular/compiler';\n\n/** ResourceLoader implementation for loading files */\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException, buffer: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(buffer.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ResourceLoader} from '@angular/compiler';\nimport {Compiler, Type, NgModuleFactory, CompilerFactory, StaticProvider} from '@angular/core';\nimport {INITIAL_CONFIG, renderModuleFactory, platformDynamicServer} from '@angular/platform-server';\nimport * as fs from 'fs';\n\nimport {FileLoader} from './file-loader';\nimport {RenderOptions} from './interfaces';\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n\n  /** Return an instance of the platformServer compiler */\n  getCompiler(): Compiler {\n    const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n    return compilerFactory.createCompiler([\n      {providers: [{provide: ResourceLoader, useClass: FileLoader, deps: []}]}\n    ]);\n  }\n\n  private factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n  private templateCache: {[key: string]: string} = {};\n\n  constructor(private moduleOrFactory: Type<{}> | NgModuleFactory<{}>,\n              private providers: StaticProvider[] = []) {}\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const doc = opts.document || await this.getDocument(opts!.documentFilePath as string);\n    const extraProviders = [\n      ...(opts.providers || []),\n      ...(this.providers || []),\n      {\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: doc,\n          url: opts.url\n        }\n      }\n    ];\n\n    const factory = await this.getFactory();\n    return renderModuleFactory(factory, {extraProviders});\n  }\n\n  /** Return the factory for a given engine instance */\n  getFactory(): Promise<NgModuleFactory<{}>> {\n    // If module has been compiled AoT\n    const moduleOrFactory = this.moduleOrFactory;\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      return Promise.resolve(moduleOrFactory);\n    } else {\n      // we're in JIT mode\n      let moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        return Promise.resolve(moduleFactory);\n      }\n\n      // Compile the module and cache it\n      return this.getCompiler().compileModuleAsync(moduleOrFactory)\n        .then((factory) => {\n          this.factoryCacheMap.set(moduleOrFactory, factory);\n          return factory;\n        });\n    }\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private getDocument(filePath: string): Promise<string> {\n    const doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n    fs.readFileSync(filePath).toString();\n\n    // As  promise so we can change the API later without breaking\n    return Promise.resolve(doc);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { FileLoader as ÉµFileLoader, CommonEngine as ÉµCommonEngine,\n  RenderOptions as ÉµRenderOptions } from './src/index';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["fs.readFile","platformDynamicServer","CompilerFactory","ResourceLoader","INITIAL_CONFIG","renderModuleFactory","NgModuleFactory","fs.readFileSync"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/bundles/common-engine.umd.min.js b/node_modules/@nguniversal/common/bundles/common-engine.umd.min.js
new file mode 100755
index 0000000..506b51f
--- /dev/null
+++ b/node_modules/@nguniversal/common/bundles/common-engine.umd.min.js
@@ -0,0 +1,30 @@
+!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("fs"),require("@angular/compiler"),require("@angular/core"),require("@angular/platform-server")):"function"==typeof define&&define.amd?define("@nguniversal/common/engine",["exports","fs","@angular/compiler","@angular/core","@angular/platform-server"],r):r((e.nguniversal=e.nguniversal||{},e.nguniversal.common=e.nguniversal.common||{},e.nguniversal.common.engine={}),e.fs,e.ng.compiler,e.ng.core,e.ng.platformServer)}(this,function(e,r,t,n,o){"use strict";
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */var i=function(){function e(){}return e.prototype.get=function(e){return new Promise(function(t,n){r.readFile(e,function(e,r){if(e)return n(e);t(r.toString())})})},e}(),a=function(e,r){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var n,o,i=t.call(e),a=[];try{for(;(void 0===r||r-- >0)&&!(n=i.next()).done;)a.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},u=function(){function e(e,r){void 0===r&&(r=[]),this.moduleOrFactory=e,this.providers=r,this.factoryCacheMap=new Map,this.templateCache={}}return e.prototype.getCompiler=function(){return o.platformDynamicServer().injector.get(n.CompilerFactory).createCompiler([{providers:[{provide:t.ResourceLoader,useClass:i,deps:[]}]}])},e.prototype.render=function(e){return r=this,void 0,n=function(){var r,t,n;return function(e,r){var t,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function c(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,n&&(o=n[2&i[0]?"return":i[0]?"throw":"next"])&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[0,o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,n=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=r.call(e,a)}catch(e){i=[6,e],n=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}}(this,function(i){switch(i.label){case 0:return(r=e.document)?[3,2]:[4,this.getDocument(e.documentFilePath)];case 1:r=i.sent(),i.label=2;case 2:return t=function(){for(var e=[],r=0;r<arguments.length;r++)e=e.concat(a(arguments[r]));return e}(e.providers||[],this.providers||[],[{provide:o.INITIAL_CONFIG,useValue:{document:r,url:e.url}}]),[4,this.getFactory()];case 3:return n=i.sent(),[2,o.renderModuleFactory(n,{extraProviders:t})]}})},new((t=void 0)||(t=Promise))(function(e,o){function i(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(r){r.done?e(r.value):new t(function(e){e(r.value)}).then(i,a)}u((n=n.apply(r,[])).next())});var r,t,n},e.prototype.getFactory=function(){var e=this,r=this.moduleOrFactory;if(r instanceof n.NgModuleFactory)return Promise.resolve(r);var t=this.factoryCacheMap.get(r);return t?Promise.resolve(t):this.getCompiler().compileModuleAsync(r).then(function(t){return e.factoryCacheMap.set(r,t),t})},e.prototype.getDocument=function(e){var t=this.templateCache[e]=this.templateCache[e]||r.readFileSync(e).toString();return Promise.resolve(t)},e}();
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+e.ɵFileLoader=i,e.ɵCommonEngine=u,Object.defineProperty(e,"__esModule",{value:!0})});
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/bundles/common-engine.umd.min.js.map b/node_modules/@nguniversal/common/bundles/common-engine.umd.min.js.map
new file mode 100755
index 0000000..478e1f5
--- /dev/null
+++ b/node_modules/@nguniversal/common/bundles/common-engine.umd.min.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["modules/common/common-engine.umd.js"],"names":["global","factory","exports","module","require","define","amd","nguniversal","common","engine","fs","ng","compiler","core","platformServer","this","FileLoader","prototype","get","url","Promise","resolve","reject","readFile","err","buffer","toString","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","CommonEngine","moduleOrFactory","providers","factoryCacheMap","Map","templateCache","getCompiler","platformDynamicServer","injector","CompilerFactory","createCompiler","provide","ResourceLoader","useClass","deps","render","opts","thisArg","generator","_a","extraProviders","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","v","step","op","TypeError","pop","length","__generator","_b","document","getDocument","documentFilePath","arguments","concat","__spread","INITIAL_CONFIG","useValue","getFactory","renderModuleFactory","P","fulfilled","rejected","result","then","apply","_this","NgModuleFactory","moduleFactory","compileModuleAsync","set","filePath","doc","readFileSync","ɵFileLoader","ɵCommonEngine","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('fs'), require('@angular/compiler'), require('@angular/core'), require('@angular/platform-server')) :\n\ttypeof define === 'function' && define.amd ? define('@nguniversal/common/engine', ['exports', 'fs', '@angular/compiler', '@angular/core', '@angular/platform-server'], factory) :\n\t(factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = global.nguniversal.common || {}, global.nguniversal.common.engine = {}),global.fs,global.ng.compiler,global.ng.core,global.ng.platformServer));\n}(this, (function (exports,fs,compiler,core,platformServer) { 'use strict';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** ResourceLoader implementation for loading files */\nvar FileLoader = /** @class */ (function () {\n    function FileLoader() {\n    }\n    FileLoader.prototype.get = function (url) {\n        return new Promise(function (resolve, reject) {\n            fs.readFile(url, function (err, buffer) {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(buffer.toString());\n            });\n        });\n    };\n    return FileLoader;\n}());\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nvar CommonEngine = /** @class */ (function () {\n    function CommonEngine(moduleOrFactory, providers) {\n        if (providers === void 0) { providers = []; }\n        this.moduleOrFactory = moduleOrFactory;\n        this.providers = providers;\n        this.factoryCacheMap = new Map();\n        this.templateCache = {};\n    }\n    /** Return an instance of the platformServer compiler */\n    CommonEngine.prototype.getCompiler = function () {\n        var compilerFactory = platformServer.platformDynamicServer().injector.get(core.CompilerFactory);\n        return compilerFactory.createCompiler([\n            { providers: [{ provide: compiler.ResourceLoader, useClass: FileLoader, deps: [] }] }\n        ]);\n    };\n    /**\n     * Render an HTML document for a specific URL with specified\n     * render options\n     */\n    CommonEngine.prototype.render = function (opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var doc, _a, extraProviders, factory;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = opts.document;\n                        if (_a) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getDocument(opts.documentFilePath)];\n                    case 1:\n                        _a = (_b.sent());\n                        _b.label = 2;\n                    case 2:\n                        doc = _a;\n                        extraProviders = __spread((opts.providers || []), (this.providers || []), [\n                            {\n                                provide: platformServer.INITIAL_CONFIG,\n                                useValue: {\n                                    document: doc,\n                                    url: opts.url\n                                }\n                            }\n                        ]);\n                        return [4 /*yield*/, this.getFactory()];\n                    case 3:\n                        factory = _b.sent();\n                        return [2 /*return*/, platformServer.renderModuleFactory(factory, { extraProviders: extraProviders })];\n                }\n            });\n        });\n    };\n    /** Return the factory for a given engine instance */\n    CommonEngine.prototype.getFactory = function () {\n        var _this = this;\n        // If module has been compiled AoT\n        var moduleOrFactory = this.moduleOrFactory;\n        if (moduleOrFactory instanceof core.NgModuleFactory) {\n            return Promise.resolve(moduleOrFactory);\n        }\n        else {\n            // we're in JIT mode\n            var moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n            // If module factory is cached\n            if (moduleFactory) {\n                return Promise.resolve(moduleFactory);\n            }\n            // Compile the module and cache it\n            return this.getCompiler().compileModuleAsync(moduleOrFactory)\n                .then(function (factory) {\n                _this.factoryCacheMap.set(moduleOrFactory, factory);\n                return factory;\n            });\n        }\n    };\n    /** Retrieve the document from the cache or the filesystem */\n    CommonEngine.prototype.getDocument = function (filePath) {\n        var doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n            fs.readFileSync(filePath).toString();\n        // As  promise so we can change the API later without breaking\n        return Promise.resolve(doc);\n    };\n    return CommonEngine;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵFileLoader = FileLoader;\nexports.ɵCommonEngine = CommonEngine;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=common-engine.umd.js.map\n"]}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/bundles/common-tokens.umd.js b/node_modules/@nguniversal/common/bundles/common-tokens.umd.js
new file mode 100755
index 0000000..1134cbf
--- /dev/null
+++ b/node_modules/@nguniversal/common/bundles/common-tokens.umd.js
@@ -0,0 +1,53 @@
+(function (global, factory) {
+	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
+	typeof define === 'function' && define.amd ? define('@nguniversal/common/tokens', ['exports', '@angular/core'], factory) :
+	(factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = global.nguniversal.common || {}, global.nguniversal.common.tokens = {}),global.ng.core));
+}(this, (function (exports,core) { 'use strict';
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+var ORIGIN_URL = new core.InjectionToken('ORIGIN_URL');
+var REQUEST = new core.InjectionToken('REQUEST');
+var RESPONSE = new core.InjectionToken('RESPONSE');
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * Generated bundle index. Do not edit.
+ */
+
+exports.ɵORIGIN_URL = ORIGIN_URL;
+exports.ɵREQUEST = REQUEST;
+exports.ɵRESPONSE = RESPONSE;
+
+Object.defineProperty(exports, '__esModule', { value: true });
+
+})));
+//# sourceMappingURL=common-tokens.umd.js.map
diff --git a/node_modules/@nguniversal/common/bundles/common-tokens.umd.js.map b/node_modules/@nguniversal/common/bundles/common-tokens.umd.js.map
new file mode 100755
index 0000000..f29188a
--- /dev/null
+++ b/node_modules/@nguniversal/common/bundles/common-tokens.umd.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"common-tokens.umd.js","sources":["../../../../../../../../../../execroot/modules/common/tokens/src/tokens.ts","../../../../../../../../../../execroot/modules/common/tokens/private_api.ts","../../../../../../../../../../execroot/modules/common/tokens/public_api.ts","../../../../../../../../../../execroot/modules/common/tokens/index.ts","../../../../../../../../../../execroot/modules/common/tokens/tokens_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '@angular/core';\n\nexport const ORIGIN_URL = new InjectionToken<any>('ORIGIN_URL');\nexport const REQUEST = new InjectionToken<any>('REQUEST');\nexport const RESPONSE = new InjectionToken<any>('RESPONSE');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport {ORIGIN_URL as ÉµORIGIN_URL, REQUEST as ÉµREQUEST, RESPONSE as ÉµRESPONSE} from './src/tokens';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["InjectionToken"],"mappings":";;;;;;AAAA;;;;;;;AAOA,AAEO,IAAM,UAAU,GAAG,IAAIA,mBAAc,CAAM,YAAY,CAAC,CAAC;AAChE,AAAO,IAAM,OAAO,GAAG,IAAIA,mBAAc,CAAM,SAAS,CAAC,CAAC;AAC1D,AAAO,IAAM,QAAQ,GAAG,IAAIA,mBAAc,CAAM,UAAU,CAAC;;ACX3D;;;;;;GAMG;;ACNH;;;;;;GAMG;;ACNH;;;;;;GAMG;;ACNH;;GAEG;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/bundles/common-tokens.umd.min.js b/node_modules/@nguniversal/common/bundles/common-tokens.umd.min.js
new file mode 100755
index 0000000..b692a25
--- /dev/null
+++ b/node_modules/@nguniversal/common/bundles/common-tokens.umd.min.js
@@ -0,0 +1,30 @@
+!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("@nguniversal/common/tokens",["exports","@angular/core"],n):n((e.nguniversal=e.nguniversal||{},e.nguniversal.common=e.nguniversal.common||{},e.nguniversal.common.tokens={}),e.ng.core)}(this,function(e,n){"use strict";
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */var o=new n.InjectionToken("ORIGIN_URL"),i=new n.InjectionToken("REQUEST"),r=new n.InjectionToken("RESPONSE");
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+e.ɵORIGIN_URL=o,e.ɵREQUEST=i,e.ɵRESPONSE=r,Object.defineProperty(e,"__esModule",{value:!0})});
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/bundles/common-tokens.umd.min.js.map b/node_modules/@nguniversal/common/bundles/common-tokens.umd.min.js.map
new file mode 100755
index 0000000..9f22562
--- /dev/null
+++ b/node_modules/@nguniversal/common/bundles/common-tokens.umd.min.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["modules/common/common-tokens.umd.js"],"names":["global","factory","exports","module","require","define","amd","nguniversal","common","tokens","ng","core","this","ORIGIN_URL","InjectionToken","REQUEST","RESPONSE","ɵORIGIN_URL","ɵREQUEST","ɵRESPONSE","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACC,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,kBACtE,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,8BAA+B,UAAW,iBAAkBJ,GAC/GA,GAASD,EAAOO,YAAcP,EAAOO,gBAAmBP,EAAOO,YAAYC,OAASR,EAAOO,YAAYC,WAAcR,EAAOO,YAAYC,OAAOC,WAAaT,EAAOU,GAAGC,MAHxK,CAIEC,KAAM,SAAWV,EAAQS,GAAQ;;;;;;;GASnC,IAAIE,EAAa,IAAIF,EAAKG,eAAe,cACrCC,EAAU,IAAIJ,EAAKG,eAAe,WAClCE,EAAW,IAAIL,EAAKG,eAAe;;;;;;;;;;;;;;;;;;;;;;AA8BvCZ,EAAQe,YAAcJ,EACtBX,EAAQgB,SAAWH,EACnBb,EAAQiB,UAAYH,EAEpBI,OAAOC,eAAenB,EAAS,cAAgBoB,OAAO","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define('@nguniversal/common/tokens', ['exports', '@angular/core'], factory) :\n\t(factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = global.nguniversal.common || {}, global.nguniversal.common.tokens = {}),global.ng.core));\n}(this, (function (exports,core) { 'use strict';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ORIGIN_URL = new core.InjectionToken('ORIGIN_URL');\nvar REQUEST = new core.InjectionToken('REQUEST');\nvar RESPONSE = new core.InjectionToken('RESPONSE');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵORIGIN_URL = ORIGIN_URL;\nexports.ɵREQUEST = REQUEST;\nexports.ɵRESPONSE = RESPONSE;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=common-tokens.umd.js.map\n"]}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/bundles/common.umd.js b/node_modules/@nguniversal/common/bundles/common.umd.js
index 22cff92..935bd1c 100755
--- a/node_modules/@nguniversal/common/bundles/common.umd.js
+++ b/node_modules/@nguniversal/common/bundles/common.umd.js
@@ -1,7 +1,7 @@
 (function (global, factory) {
 	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common/http'), require('@angular/core'), require('@angular/platform-browser'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :
-	typeof define === 'function' && define.amd ? define(['exports', '@angular/common/http', '@angular/core', '@angular/platform-browser', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :
-	(factory((global.npm_package = {}),global.ng.common.http,global.ng.core,global.ng.platformBrowser,global.Rx,global.Rx.operators,global.ng.common));
+	typeof define === 'function' && define.amd ? define('@nguniversal/common', ['exports', '@angular/common/http', '@angular/core', '@angular/platform-browser', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :
+	(factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = {}),global.ng.common.http,global.ng.core,global.ng.platformBrowser,global.rxjs,global.rxjs.operators,global.ng.common));
 }(this, (function (exports,http,core,platformBrowser,rxjs,operators,common) { 'use strict';
 
 var __values = (undefined && undefined.__values) || function (o) {
@@ -14,12 +14,19 @@ var __values = (undefined && undefined.__values) || function (o) {
         }
     };
 };
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
 function getHeadersMap(headers) {
     var headersMap = {};
     try {
         for (var _a = __values(headers.keys()), _b = _a.next(); !_b.done; _b = _a.next()) {
             var key = _b.value;
-            headersMap[key] = (headers.getAll(key));
+            headersMap[key] = headers.getAll(key);
         }
     }
     catch (e_1_1) { e_1 = { error: e_1_1 }; }
@@ -44,8 +51,15 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
             .then(function () { _this.isCacheActive = false; });
     }
     TransferHttpCacheInterceptor.prototype.invalidateCacheEntry = function (url) {
-        this.transferState.remove(platformBrowser.makeStateKey('G.' + url));
-        this.transferState.remove(platformBrowser.makeStateKey('H.' + url));
+        var _this = this;
+        Object.keys(this.transferState['store'])
+            .forEach(function (key) { return key.includes(url) ? _this.transferState.remove(platformBrowser.makeStateKey(key)) : null; });
+    };
+    TransferHttpCacheInterceptor.prototype.makeCacheKey = function (method, url, params) {
+        // make the params encoded same as a url so it's easy to identify
+        var encodedParams = params.keys().sort().map(function (k) { return k + "=" + params.get(k); }).join('&');
+        var key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;
+        return platformBrowser.makeStateKey(key);
     };
     TransferHttpCacheInterceptor.prototype.intercept = function (req, next) {
         var _this = this;
@@ -58,8 +72,7 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
             // Cache is no longer active. Pass the request through.
             return next.handle(req);
         }
-        var key = (req.method === 'GET' ? 'G.' : 'H.') + req.url;
-        var storeKey = platformBrowser.makeStateKey(key);
+        var storeKey = this.makeCacheKey(req.method, req.url, req.params);
         if (this.transferState.hasKey(storeKey)) {
             // Request found in cache. Respond using it.
             var response = this.transferState.get(storeKey, {});
@@ -82,7 +95,7 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
                         headers: getHeadersMap(event.headers),
                         status: event.status,
                         statusText: event.statusText,
-                        url: (event.url),
+                        url: event.url,
                     });
                 }
             }));
@@ -93,8 +106,8 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
     ];
     /** @nocollapse */
     TransferHttpCacheInterceptor.ctorParameters = function () { return [
-        { type: core.ApplicationRef, },
-        { type: platformBrowser.TransferState, },
+        { type: core.ApplicationRef },
+        { type: platformBrowser.TransferState }
     ]; };
     return TransferHttpCacheInterceptor;
 }());
@@ -125,15 +138,13 @@ var TransferHttpCacheModule = /** @class */ (function () {
  * found in the LICENSE file at https://angular.io/license
  */
 function domContentLoadedFactory(doc) {
-    return function () {
-        return new Promise(function (resolve, _reject) {
-            var contentLoaded = function () {
-                doc.removeEventListener('DOMContentLoaded', contentLoaded);
-                resolve();
-            };
-            doc.addEventListener('DOMContentLoaded', contentLoaded);
-        });
-    };
+    return function () { return new Promise(function (resolve, _reject) {
+        var contentLoaded = function () {
+            doc.removeEventListener('DOMContentLoaded', contentLoaded);
+            resolve();
+        };
+        doc.addEventListener('DOMContentLoaded', contentLoaded);
+    }); };
 }
 var StateTransferInitializerModule = /** @class */ (function () {
     function StateTransferInitializerModule() {
@@ -149,13 +160,37 @@ var StateTransferInitializerModule = /** @class */ (function () {
 }());
 
 /**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
  * Generated bundle index. Do not edit.
  */
 
-exports.ɵnguniversal_modules_common_common_b = domContentLoadedFactory;
-exports.ɵnguniversal_modules_common_common_a = TransferHttpCacheInterceptor;
+exports.ɵnguniversal_modules_common_common_a = domContentLoadedFactory;
 exports.TransferHttpCacheModule = TransferHttpCacheModule;
 exports.StateTransferInitializerModule = StateTransferInitializerModule;
+exports.ɵTransferHttpCacheInterceptor = TransferHttpCacheInterceptor;
 
 Object.defineProperty(exports, '__esModule', { value: true });
 
diff --git a/node_modules/@nguniversal/common/bundles/common.umd.js.map b/node_modules/@nguniversal/common/bundles/common.umd.js.map
index 82fa2cc..eb852df 100755
--- a/node_modules/@nguniversal/common/bundles/common.umd.js.map
+++ b/node_modules/@nguniversal/common/bundles/common.umd.js.map
@@ -1 +1 @@
-{"version":3,"file":"common.umd.js","sources":["../../../../../../../../../execroot/nguniversal/modules/common/src/transfer_http.ts","../../../../../../../../../execroot/nguniversal/modules/common/src/state-transfer-initializer/module.ts","../../../../../../../../../execroot/nguniversal/modules/common/common_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport {ApplicationRef, Injectable, NgModule} from '@angular/core';\nimport {BrowserTransferStateModule, TransferState, makeStateKey} from '@angular/platform-browser';\nimport {Observable, of as observableOf} from 'rxjs';\nimport {tap, take, filter} from 'rxjs/operators';\n\nexport interface TransferHttpResponse {\n  body?: any | null;\n  headers?: {[k: string]: string[]};\n  status?: number;\n  statusText?: string;\n  url?: string;\n}\n\nfunction getHeadersMap(headers: HttpHeaders) {\n  const headersMap: {[name: string]: string[]} = {};\n  for (const key of headers.keys()) {\n    headersMap[key] = headers.getAll(key)!;\n  }\n  return headersMap;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n\n  private isCacheActive = true;\n\n  private invalidateCacheEntry(url: string) {\n    this.transferState.remove(makeStateKey<TransferHttpResponse>('G.' + url));\n    this.transferState.remove(makeStateKey<TransferHttpResponse>('H.' + url));\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    appRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => { this.isCacheActive = false; });\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Stop using the cache if there is a mutating call.\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      this.isCacheActive = false;\n      this.invalidateCacheEntry(req.url);\n    }\n\n    if (!this.isCacheActive) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const key = (req.method === 'GET' ? 'G.' : 'H.') + req.url;\n    const storeKey = makeStateKey<TransferHttpResponse>(key);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get(storeKey, {} as TransferHttpResponse);\n      return observableOf(new HttpResponse<any>({\n        body: response.body,\n        headers: new HttpHeaders(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url,\n      }));\n    } else {\n      // Request not found in cache. Make the request and cache it.\n      const httpEvent = next.handle(req);\n      return httpEvent\n        .pipe(\n          tap((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n              this.transferState.set(storeKey, {\n                body: event.body,\n                headers: getHeadersMap(event.headers),\n                status: event.status,\n                statusText: event.statusText,\n                url: event.url!,\n              });\n            }\n          })\n        );\n    }\n  }\n}\n\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    {provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true},\n  ],\n})\nexport class TransferHttpCacheModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nexport function domContentLoadedFactory(doc: Document) {\n  return () => new Promise ((resolve, _reject) => {\n    const contentLoaded = () => {\n      doc.removeEventListener('DOMContentLoaded', contentLoaded);\n      resolve();\n    };\n    doc.addEventListener('DOMContentLoaded', contentLoaded);\n  });\n}\n\n\n@NgModule({\n  providers: [\n    {provide: APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [DOCUMENT]},\n  ]\n})\nexport class StateTransferInitializerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {domContentLoadedFactory as Éµnguniversal_modules_common_common_b} from './src/state-transfer-initializer/module';\nexport {TransferHttpCacheInterceptor as Éµnguniversal_modules_common_common_a} from './src/transfer_http';"],"names":["filter","take","makeStateKey","observableOf","HttpResponse","HttpHeaders","tap","Injectable","ApplicationRef","TransferState","NgModule","BrowserTransferStateModule","HTTP_INTERCEPTORS","APP_INITIALIZER","DOCUMENT"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"common.umd.js","sources":["../../../../../../../../../../execroot/nguniversal/modules/common/src/transfer_http.ts","../../../../../../../../../../execroot/nguniversal/modules/common/src/state-transfer-initializer/module.ts","../../../../../../../../../../execroot/nguniversal/modules/common/private_api.ts","../../../../../../../../../../execroot/nguniversal/modules/common/public_api.ts","../../../../../../../../../../execroot/nguniversal/modules/common/index.ts","../../../../../../../../../../execroot/nguniversal/modules/common/common_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpParams\n} from '@angular/common/http';\nimport {ApplicationRef, Injectable, NgModule} from '@angular/core';\nimport {\n  BrowserTransferStateModule,\n  TransferState,\n  makeStateKey,\n  StateKey\n} from '@angular/platform-browser';\nimport {Observable, of as observableOf} from 'rxjs';\nimport {tap, take, filter} from 'rxjs/operators';\n\nexport interface TransferHttpResponse {\n  body?: any | null;\n  headers?: {[k: string]: string[]};\n  status?: number;\n  statusText?: string;\n  url?: string;\n}\n\nfunction getHeadersMap(headers: HttpHeaders) {\n  const headersMap: {[name: string]: string[]} = {};\n  for (const key of headers.keys()) {\n    headersMap[key] = headers.getAll(key)!;\n  }\n  return headersMap;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n\n  private isCacheActive = true;\n\n  private invalidateCacheEntry(url: string) {\n    Object.keys(this.transferState['store'])\n      .forEach(key => key.includes(url) ? this.transferState.remove(makeStateKey(key)) : null);\n  }\n\n  private makeCacheKey(method: string, url: string, params: HttpParams): StateKey<string> {\n    // make the params encoded same as a url so it's easy to identify\n    const encodedParams = params.keys().sort().map(k => `${k}=${params.get(k)}`).join('&');\n    const key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n    return makeStateKey<TransferHttpResponse>(key);\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    appRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => { this.isCacheActive = false; });\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Stop using the cache if there is a mutating call.\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      this.isCacheActive = false;\n      this.invalidateCacheEntry(req.url);\n    }\n\n    if (!this.isCacheActive) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const storeKey = this.makeCacheKey(req.method, req.url, req.params);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get(storeKey, {} as TransferHttpResponse);\n      return observableOf(new HttpResponse<any>({\n        body: response.body,\n        headers: new HttpHeaders(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url,\n      }));\n    } else {\n      // Request not found in cache. Make the request and cache it.\n      const httpEvent = next.handle(req);\n      return httpEvent\n        .pipe(\n          tap((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n              this.transferState.set(storeKey, {\n                body: event.body,\n                headers: getHeadersMap(event.headers),\n                status: event.status,\n                statusText: event.statusText,\n                url: event.url!,\n              });\n            }\n          })\n        );\n    }\n  }\n}\n\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    {provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true},\n  ],\n})\nexport class TransferHttpCacheModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nexport function domContentLoadedFactory(doc: Document) {\n  return () => new Promise ((resolve, _reject) => {\n    const contentLoaded = () => {\n      doc.removeEventListener('DOMContentLoaded', contentLoaded);\n      resolve();\n    };\n    doc.addEventListener('DOMContentLoaded', contentLoaded);\n  });\n}\n\n\n@NgModule({\n  providers: [\n    {provide: APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [DOCUMENT]},\n  ]\n})\nexport class StateTransferInitializerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { TransferHttpCacheInterceptor as ÉµTransferHttpCacheInterceptor } from './src/transfer_http';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { TransferHttpCacheModule } from './src/transfer_http';\nexport { StateTransferInitializerModule } from './src/state-transfer-initializer/module';\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {domContentLoadedFactory as Éµnguniversal_modules_common_common_a} from './src/state-transfer-initializer/module';"],"names":["filter","take","makeStateKey","observableOf","HttpResponse","HttpHeaders","tap","Injectable","ApplicationRef","TransferState","NgModule","BrowserTransferStateModule","HTTP_INTERCEPTORS","APP_INITIALIZER","DOCUMENT"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/bundles/common.umd.min.js b/node_modules/@nguniversal/common/bundles/common.umd.min.js
index 4ca288d..cb17253 100755
--- a/node_modules/@nguniversal/common/bundles/common.umd.min.js
+++ b/node_modules/@nguniversal/common/bundles/common.umd.min.js
@@ -1,4 +1,4 @@
-!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common/http"),require("@angular/core"),require("@angular/platform-browser"),require("rxjs"),require("rxjs/operators"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/common/http","@angular/core","@angular/platform-browser","rxjs","rxjs/operators","@angular/common"],t):t(e.npm_package={},e.ng.common.http,e.ng.core,e.ng.platformBrowser,e.Rx,e.Rx.operators,e.ng.common)}(this,function(e,t,r,n,o,a,s){"use strict";var i=function(){function e(e,t){var r=this;this.transferState=t,this.isCacheActive=!0,e.isStable.pipe(a.filter(function(e){return e}),a.take(1)).toPromise().then(function(){r.isCacheActive=!1})}return e.prototype.invalidateCacheEntry=function(e){this.transferState.remove(n.makeStateKey("G."+e)),this.transferState.remove(n.makeStateKey("H."+e))},e.prototype.intercept=function(e,r){var s=this;if("GET"!==e.method&&"HEAD"!==e.method&&(this.isCacheActive=!1,this.invalidateCacheEntry(e.url)),!this.isCacheActive)return r.handle(e);var i=n.makeStateKey(("GET"===e.method?"G.":"H.")+e.url);if(this.transferState.hasKey(i)){var u=this.transferState.get(i,{});return o.of(new t.HttpResponse({body:u.body,headers:new t.HttpHeaders(u.headers),status:u.status,statusText:u.statusText,url:u.url}))}return r.handle(e).pipe(a.tap(function(e){e instanceof t.HttpResponse&&s.transferState.set(i,{body:e.body,headers:function r(e){var t,r,n={};try{for(var o=function(e){var t="function"==typeof Symbol&&e[Symbol.iterator],r=0;return t?t.call(e):{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}}}(e.keys()),a=o.next();!a.done;a=o.next()){var s=a.value;n[s]=e.getAll(s)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return n}(e.headers),status:e.status,statusText:e.statusText,url:e.url})}))},e.decorators=[{type:r.Injectable}],e.ctorParameters=function(){return[{type:r.ApplicationRef},{type:n.TransferState}]},e}(),u=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{imports:[n.BrowserTransferStateModule],providers:[i,{provide:t.HTTP_INTERCEPTORS,useExisting:i,multi:!0}]}]}],e}();
+!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common/http"),require("@angular/core"),require("@angular/platform-browser"),require("rxjs"),require("rxjs/operators"),require("@angular/common")):"function"==typeof define&&define.amd?define("@nguniversal/common",["exports","@angular/common/http","@angular/core","@angular/platform-browser","rxjs","rxjs/operators","@angular/common"],t):t((e.nguniversal=e.nguniversal||{},e.nguniversal.common={}),e.ng.common.http,e.ng.core,e.ng.platformBrowser,e.rxjs,e.rxjs.operators,e.ng.common)}(this,function(e,t,r,n,o,a,s){"use strict";var i=function(){function e(e,t){var r=this;this.transferState=t,this.isCacheActive=!0,e.isStable.pipe(a.filter(function(e){return e}),a.take(1)).toPromise().then(function(){r.isCacheActive=!1})}return e.prototype.invalidateCacheEntry=function(e){var t=this;Object.keys(this.transferState.store).forEach(function(r){return r.includes(e)?t.transferState.remove(n.makeStateKey(r)):null})},e.prototype.makeCacheKey=function(e,t,r){var o=r.keys().sort().map(function(e){return e+"="+r.get(e)}).join("&");return n.makeStateKey(("GET"===e?"G.":"H.")+t+"?"+o)},e.prototype.intercept=function(e,r){var n=this;if("GET"!==e.method&&"HEAD"!==e.method&&(this.isCacheActive=!1,this.invalidateCacheEntry(e.url)),!this.isCacheActive)return r.handle(e);var s=this.makeCacheKey(e.method,e.url,e.params);if(this.transferState.hasKey(s)){var i=this.transferState.get(s,{});return o.of(new t.HttpResponse({body:i.body,headers:new t.HttpHeaders(i.headers),status:i.status,statusText:i.statusText,url:i.url}))}return r.handle(e).pipe(a.tap(function(e){e instanceof t.HttpResponse&&n.transferState.set(s,{body:e.body,headers:
 /**
  * @license
  * Copyright Google LLC All Rights Reserved.
@@ -6,4 +6,33 @@
  * Use of this source code is governed by an MIT-style license that can be
  * found in the LICENSE file at https://angular.io/license
  */
-function c(e){return function(){return new Promise(function(t,r){var n=function(){e.removeEventListener("DOMContentLoaded",n),t()};e.addEventListener("DOMContentLoaded",n)})}}var f=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{providers:[{provide:r.APP_INITIALIZER,multi:!0,useFactory:c,deps:[s.DOCUMENT]}]}]}],e}();e.ɵnguniversal_modules_common_common_b=c,e.ɵnguniversal_modules_common_common_a=i,e.TransferHttpCacheModule=u,e.StateTransferInitializerModule=f,Object.defineProperty(e,"__esModule",{value:!0})});
\ No newline at end of file
+function r(e){var t,r,n={};try{for(var o=function(e){var t="function"==typeof Symbol&&e[Symbol.iterator],r=0;return t?t.call(e):{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}}}(e.keys()),a=o.next();!a.done;a=o.next()){var s=a.value;n[s]=e.getAll(s)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return n}(e.headers),status:e.status,statusText:e.statusText,url:e.url})}))},e.decorators=[{type:r.Injectable}],e.ctorParameters=function(){return[{type:r.ApplicationRef},{type:n.TransferState}]},e}(),u=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{imports:[n.BrowserTransferStateModule],providers:[i,{provide:t.HTTP_INTERCEPTORS,useExisting:i,multi:!0}]}]}],e}();
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+function c(e){return function(){return new Promise(function(t,r){var n=function(){e.removeEventListener("DOMContentLoaded",n),t()};e.addEventListener("DOMContentLoaded",n)})}}var f=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{providers:[{provide:r.APP_INITIALIZER,multi:!0,useFactory:c,deps:[s.DOCUMENT]}]}]}],e}();
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */e.ɵnguniversal_modules_common_common_a=c,e.TransferHttpCacheModule=u,e.StateTransferInitializerModule=f,e.ɵTransferHttpCacheInterceptor=i,Object.defineProperty(e,"__esModule",{value:!0})});
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/bundles/common.umd.min.js.map b/node_modules/@nguniversal/common/bundles/common.umd.min.js.map
index 77f7232..a043c88 100755
--- a/node_modules/@nguniversal/common/bundles/common.umd.min.js.map
+++ b/node_modules/@nguniversal/common/bundles/common.umd.min.js.map
@@ -1 +1 @@
-{"version":3,"sources":["modules/common/common.umd.js"],"names":["global","factory","exports","module","require","define","amd","npm_package","ng","common","http","core","platformBrowser","Rx","operators","this","rxjs","TransferHttpCacheInterceptor","appRef","transferState","_this","isCacheActive","isStable","pipe","filter","take","toPromise","then","prototype","invalidateCacheEntry","url","remove","makeStateKey","intercept","req","next","method","handle","storeKey","hasKey","response","get","of","HttpResponse","body","headers","HttpHeaders","status","statusText","tap","event","set","getHeadersMap","e_1","_c","headersMap","_a","o","m","Symbol","iterator","i","call","length","value","done","__values","keys","_b","key","getAll","e_1_1","error","return","decorators","type","Injectable","ctorParameters","ApplicationRef","TransferState","TransferHttpCacheModule","NgModule","args","imports","BrowserTransferStateModule","providers","provide","HTTP_INTERCEPTORS","useExisting","multi","domContentLoadedFactory","doc","Promise","resolve","_reject","contentLoaded","removeEventListener","addEventListener","StateTransferInitializerModule","APP_INITIALIZER","useFactory","deps","DOCUMENT","ɵnguniversal_modules_common_common_b","ɵnguniversal_modules_common_common_a","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common/http'), require('@angular/core'), require('@angular/platform-browser'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/common/http', '@angular/core', '@angular/platform-browser', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :\n\t(factory((global.npm_package = {}),global.ng.common.http,global.ng.core,global.ng.platformBrowser,global.Rx,global.Rx.operators,global.ng.common));\n}(this, (function (exports,http,core,platformBrowser,rxjs,operators,common) { 'use strict';\n\nvar __values = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nfunction getHeadersMap(headers) {\n    var headersMap = {};\n    try {\n        for (var _a = __values(headers.keys()), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var key = _b.value;\n            headersMap[key] = (headers.getAll(key));\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return headersMap;\n    var e_1, _c;\n}\nvar TransferHttpCacheInterceptor = /** @class */ (function () {\n    function TransferHttpCacheInterceptor(appRef, transferState) {\n        var _this = this;\n        this.transferState = transferState;\n        this.isCacheActive = true;\n        // Stop using the cache if the application has stabilized, indicating initial rendering is\n        // complete.\n        appRef.isStable\n            .pipe(operators.filter(function (isStable) { return isStable; }), operators.take(1)).toPromise()\n            .then(function () { _this.isCacheActive = false; });\n    }\n    TransferHttpCacheInterceptor.prototype.invalidateCacheEntry = function (url) {\n        this.transferState.remove(platformBrowser.makeStateKey('G.' + url));\n        this.transferState.remove(platformBrowser.makeStateKey('H.' + url));\n    };\n    TransferHttpCacheInterceptor.prototype.intercept = function (req, next) {\n        var _this = this;\n        // Stop using the cache if there is a mutating call.\n        if (req.method !== 'GET' && req.method !== 'HEAD') {\n            this.isCacheActive = false;\n            this.invalidateCacheEntry(req.url);\n        }\n        if (!this.isCacheActive) {\n            // Cache is no longer active. Pass the request through.\n            return next.handle(req);\n        }\n        var key = (req.method === 'GET' ? 'G.' : 'H.') + req.url;\n        var storeKey = platformBrowser.makeStateKey(key);\n        if (this.transferState.hasKey(storeKey)) {\n            // Request found in cache. Respond using it.\n            var response = this.transferState.get(storeKey, {});\n            return rxjs.of(new http.HttpResponse({\n                body: response.body,\n                headers: new http.HttpHeaders(response.headers),\n                status: response.status,\n                statusText: response.statusText,\n                url: response.url,\n            }));\n        }\n        else {\n            // Request not found in cache. Make the request and cache it.\n            var httpEvent = next.handle(req);\n            return httpEvent\n                .pipe(operators.tap(function (event) {\n                if (event instanceof http.HttpResponse) {\n                    _this.transferState.set(storeKey, {\n                        body: event.body,\n                        headers: getHeadersMap(event.headers),\n                        status: event.status,\n                        statusText: event.statusText,\n                        url: (event.url),\n                    });\n                }\n            }));\n        }\n    };\n    TransferHttpCacheInterceptor.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    TransferHttpCacheInterceptor.ctorParameters = function () { return [\n        { type: core.ApplicationRef, },\n        { type: platformBrowser.TransferState, },\n    ]; };\n    return TransferHttpCacheInterceptor;\n}());\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\nvar TransferHttpCacheModule = /** @class */ (function () {\n    function TransferHttpCacheModule() {\n    }\n    TransferHttpCacheModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [platformBrowser.BrowserTransferStateModule],\n                    providers: [\n                        TransferHttpCacheInterceptor,\n                        { provide: http.HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true },\n                    ],\n                },] }\n    ];\n    return TransferHttpCacheModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction domContentLoadedFactory(doc) {\n    return function () {\n        return new Promise(function (resolve, _reject) {\n            var contentLoaded = function () {\n                doc.removeEventListener('DOMContentLoaded', contentLoaded);\n                resolve();\n            };\n            doc.addEventListener('DOMContentLoaded', contentLoaded);\n        });\n    };\n}\nvar StateTransferInitializerModule = /** @class */ (function () {\n    function StateTransferInitializerModule() {\n    }\n    StateTransferInitializerModule.decorators = [\n        { type: core.NgModule, args: [{\n                    providers: [\n                        { provide: core.APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [common.DOCUMENT] },\n                    ]\n                },] }\n    ];\n    return StateTransferInitializerModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵnguniversal_modules_common_common_b = domContentLoadedFactory;\nexports.ɵnguniversal_modules_common_common_a = TransferHttpCacheInterceptor;\nexports.TransferHttpCacheModule = TransferHttpCacheModule;\nexports.StateTransferInitializerModule = StateTransferInitializerModule;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=common.umd.js.map\n"]}
\ No newline at end of file
+{"version":3,"sources":["modules/common/common.umd.js"],"names":["global","factory","exports","module","require","define","amd","nguniversal","common","ng","http","core","platformBrowser","rxjs","operators","this","TransferHttpCacheInterceptor","appRef","transferState","_this","isCacheActive","isStable","pipe","filter","take","toPromise","then","prototype","invalidateCacheEntry","url","Object","keys","forEach","key","includes","remove","makeStateKey","makeCacheKey","method","params","encodedParams","sort","map","k","get","join","intercept","req","next","handle","storeKey","hasKey","response","of","HttpResponse","body","headers","HttpHeaders","status","statusText","tap","event","set","getHeadersMap","e_1","_c","headersMap","_a","o","m","Symbol","iterator","i","call","length","value","done","__values","_b","getAll","e_1_1","error","return","decorators","type","Injectable","ctorParameters","ApplicationRef","TransferState","TransferHttpCacheModule","NgModule","args","imports","BrowserTransferStateModule","providers","provide","HTTP_INTERCEPTORS","useExisting","multi","domContentLoadedFactory","doc","Promise","resolve","_reject","contentLoaded","removeEventListener","addEventListener","StateTransferInitializerModule","APP_INITIALIZER","useFactory","deps","DOCUMENT","ɵnguniversal_modules_common_common_a","ɵTransferHttpCacheInterceptor","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common/http'), require('@angular/core'), require('@angular/platform-browser'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :\n\ttypeof define === 'function' && define.amd ? define('@nguniversal/common', ['exports', '@angular/common/http', '@angular/core', '@angular/platform-browser', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :\n\t(factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = {}),global.ng.common.http,global.ng.core,global.ng.platformBrowser,global.rxjs,global.rxjs.operators,global.ng.common));\n}(this, (function (exports,http,core,platformBrowser,rxjs,operators,common) { 'use strict';\n\nvar __values = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getHeadersMap(headers) {\n    var headersMap = {};\n    try {\n        for (var _a = __values(headers.keys()), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var key = _b.value;\n            headersMap[key] = headers.getAll(key);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return headersMap;\n    var e_1, _c;\n}\nvar TransferHttpCacheInterceptor = /** @class */ (function () {\n    function TransferHttpCacheInterceptor(appRef, transferState) {\n        var _this = this;\n        this.transferState = transferState;\n        this.isCacheActive = true;\n        // Stop using the cache if the application has stabilized, indicating initial rendering is\n        // complete.\n        appRef.isStable\n            .pipe(operators.filter(function (isStable) { return isStable; }), operators.take(1)).toPromise()\n            .then(function () { _this.isCacheActive = false; });\n    }\n    TransferHttpCacheInterceptor.prototype.invalidateCacheEntry = function (url) {\n        var _this = this;\n        Object.keys(this.transferState['store'])\n            .forEach(function (key) { return key.includes(url) ? _this.transferState.remove(platformBrowser.makeStateKey(key)) : null; });\n    };\n    TransferHttpCacheInterceptor.prototype.makeCacheKey = function (method, url, params) {\n        // make the params encoded same as a url so it's easy to identify\n        var encodedParams = params.keys().sort().map(function (k) { return k + \"=\" + params.get(k); }).join('&');\n        var key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n        return platformBrowser.makeStateKey(key);\n    };\n    TransferHttpCacheInterceptor.prototype.intercept = function (req, next) {\n        var _this = this;\n        // Stop using the cache if there is a mutating call.\n        if (req.method !== 'GET' && req.method !== 'HEAD') {\n            this.isCacheActive = false;\n            this.invalidateCacheEntry(req.url);\n        }\n        if (!this.isCacheActive) {\n            // Cache is no longer active. Pass the request through.\n            return next.handle(req);\n        }\n        var storeKey = this.makeCacheKey(req.method, req.url, req.params);\n        if (this.transferState.hasKey(storeKey)) {\n            // Request found in cache. Respond using it.\n            var response = this.transferState.get(storeKey, {});\n            return rxjs.of(new http.HttpResponse({\n                body: response.body,\n                headers: new http.HttpHeaders(response.headers),\n                status: response.status,\n                statusText: response.statusText,\n                url: response.url,\n            }));\n        }\n        else {\n            // Request not found in cache. Make the request and cache it.\n            var httpEvent = next.handle(req);\n            return httpEvent\n                .pipe(operators.tap(function (event) {\n                if (event instanceof http.HttpResponse) {\n                    _this.transferState.set(storeKey, {\n                        body: event.body,\n                        headers: getHeadersMap(event.headers),\n                        status: event.status,\n                        statusText: event.statusText,\n                        url: event.url,\n                    });\n                }\n            }));\n        }\n    };\n    TransferHttpCacheInterceptor.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    TransferHttpCacheInterceptor.ctorParameters = function () { return [\n        { type: core.ApplicationRef },\n        { type: platformBrowser.TransferState }\n    ]; };\n    return TransferHttpCacheInterceptor;\n}());\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\nvar TransferHttpCacheModule = /** @class */ (function () {\n    function TransferHttpCacheModule() {\n    }\n    TransferHttpCacheModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [platformBrowser.BrowserTransferStateModule],\n                    providers: [\n                        TransferHttpCacheInterceptor,\n                        { provide: http.HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true },\n                    ],\n                },] }\n    ];\n    return TransferHttpCacheModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction domContentLoadedFactory(doc) {\n    return function () { return new Promise(function (resolve, _reject) {\n        var contentLoaded = function () {\n            doc.removeEventListener('DOMContentLoaded', contentLoaded);\n            resolve();\n        };\n        doc.addEventListener('DOMContentLoaded', contentLoaded);\n    }); };\n}\nvar StateTransferInitializerModule = /** @class */ (function () {\n    function StateTransferInitializerModule() {\n    }\n    StateTransferInitializerModule.decorators = [\n        { type: core.NgModule, args: [{\n                    providers: [\n                        { provide: core.APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [common.DOCUMENT] },\n                    ]\n                },] }\n    ];\n    return StateTransferInitializerModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵnguniversal_modules_common_common_a = domContentLoadedFactory;\nexports.TransferHttpCacheModule = TransferHttpCacheModule;\nexports.StateTransferInitializerModule = StateTransferInitializerModule;\nexports.ɵTransferHttpCacheInterceptor = TransferHttpCacheInterceptor;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=common.umd.js.map\n"]}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/common_public_index.d.ts b/node_modules/@nguniversal/common/common_public_index.d.ts
index a14cd0e..8b601b8 100755
--- a/node_modules/@nguniversal/common/common_public_index.d.ts
+++ b/node_modules/@nguniversal/common/common_public_index.d.ts
@@ -2,5 +2,4 @@
  * Generated bundle index. Do not edit.
  */
 export * from './index';
-export { domContentLoadedFactory as ɵnguniversal_modules_common_common_b } from './src/state-transfer-initializer/module';
-export { TransferHttpCacheInterceptor as ɵnguniversal_modules_common_common_a } from './src/transfer_http';
+export { domContentLoadedFactory as ɵnguniversal_modules_common_common_a } from './src/state-transfer-initializer/module';
diff --git a/node_modules/@nguniversal/common/common_public_index.metadata.json b/node_modules/@nguniversal/common/common_public_index.metadata.json
index 82a77fd..e98f402 100755
--- a/node_modules/@nguniversal/common/common_public_index.metadata.json
+++ b/node_modules/@nguniversal/common/common_public_index.metadata.json
@@ -1 +1 @@
-{"__symbolic":"module","version":4,"metadata":{"ɵnguniversal_modules_common_common_a":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":37,"character":1}}],"members":{"invalidateCacheEntry":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ApplicationRef","line":47,"character":22},{"__symbolic":"reference","module":"@angular/platform-browser","name":"TransferState","line":47,"character":61}]}],"intercept":[{"__symbolic":"method"}]}},"ɵnguniversal_modules_common_common_b":{"__symbolic":"function","parameters":["doc"],"value":{"__symbolic":"error","message":"Lambda not supported","line":12,"character":9,"module":"./src/state-transfer-initializer/module"}},"TransferHttpCacheModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":108,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserTransferStateModule","line":109,"character":12}],"providers":[{"__symbolic":"reference","name":"ɵnguniversal_modules_common_common_a"},{"provide":{"__symbolic":"reference","module":"@angular/common/http","name":"HTTP_INTERCEPTORS","line":112,"character":14},"useExisting":{"__symbolic":"reference","name":"ɵnguniversal_modules_common_common_a"},"multi":true}]}]}],"members":{}},"StateTransferInitializerModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":22,"character":1},"arguments":[{"providers":[{"provide":{"__symbolic":"reference","module":"@angular/core","name":"APP_INITIALIZER","line":24,"character":14},"multi":true,"useFactory":{"__symbolic":"reference","name":"ɵnguniversal_modules_common_common_b"},"deps":[{"__symbolic":"reference","module":"@angular/common","name":"DOCUMENT","line":24,"character":88}]}]}]}],"members":{}}},"origins":{"ɵnguniversal_modules_common_common_a":"./src/transfer_http","ɵnguniversal_modules_common_common_b":"./src/state-transfer-initializer/module","TransferHttpCacheModule":"./src/transfer_http","StateTransferInitializerModule":"./src/state-transfer-initializer/module"},"importAs":"@nguniversal/common"}
\ No newline at end of file
+{"__symbolic":"module","version":4,"metadata":{"ɵnguniversal_modules_common_common_a":{"__symbolic":"function","parameters":["doc"],"value":{"__symbolic":"error","message":"Lambda not supported","line":12,"character":9,"module":"./src/state-transfer-initializer/module"}},"TransferHttpCacheModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":120,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserTransferStateModule","line":121,"character":12}],"providers":[{"__symbolic":"reference","name":"ɵTransferHttpCacheInterceptor"},{"provide":{"__symbolic":"reference","module":"@angular/common/http","name":"HTTP_INTERCEPTORS","line":124,"character":14},"useExisting":{"__symbolic":"reference","name":"ɵTransferHttpCacheInterceptor"},"multi":true}]}]}],"members":{}},"StateTransferInitializerModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":22,"character":1},"arguments":[{"providers":[{"provide":{"__symbolic":"reference","module":"@angular/core","name":"APP_INITIALIZER","line":24,"character":14},"multi":true,"useFactory":{"__symbolic":"reference","name":"ɵnguniversal_modules_common_common_a"},"deps":[{"__symbolic":"reference","module":"@angular/common","name":"DOCUMENT","line":24,"character":88}]}]}]}],"members":{}},"ɵTransferHttpCacheInterceptor":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":43,"character":1}}],"members":{"invalidateCacheEntry":[{"__symbolic":"method"}],"makeCacheKey":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ApplicationRef","line":60,"character":22},{"__symbolic":"reference","module":"@angular/platform-browser","name":"TransferState","line":60,"character":61}]}],"intercept":[{"__symbolic":"method"}]}}},"origins":{"ɵnguniversal_modules_common_common_a":"./src/state-transfer-initializer/module","TransferHttpCacheModule":"./src/transfer_http","StateTransferInitializerModule":"./src/state-transfer-initializer/module","ɵTransferHttpCacheInterceptor":"./src/transfer_http"},"importAs":"@nguniversal/common"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/engine.d.ts b/node_modules/@nguniversal/common/engine.d.ts
new file mode 100755
index 0000000..44d121b
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine.d.ts
@@ -0,0 +1,3 @@
+
+  export * from './engine/engine_public_index';
+  
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/engine.metadata.json b/node_modules/@nguniversal/common/engine.metadata.json
new file mode 100755
index 0000000..d8c0961
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine.metadata.json
@@ -0,0 +1 @@
+{"__symbolic":"module","version":3,"metadata":{},"exports":[{"from":"./engine/engine_public_index"}],"flatModuleIndexRedirect":true,"importAs":"@nguniversal/common/engine"}
diff --git a/node_modules/@nguniversal/common/engine/engine_public_index.d.ts b/node_modules/@nguniversal/common/engine/engine_public_index.d.ts
new file mode 100755
index 0000000..67ff29a
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine/engine_public_index.d.ts
@@ -0,0 +1,4 @@
+/**
+ * Generated bundle index. Do not edit.
+ */
+export * from './index';
diff --git a/node_modules/@nguniversal/common/engine/engine_public_index.metadata.json b/node_modules/@nguniversal/common/engine/engine_public_index.metadata.json
new file mode 100755
index 0000000..f9b5c7f
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine/engine_public_index.metadata.json
@@ -0,0 +1 @@
+{"__symbolic":"module","version":4,"metadata":{"ɵFileLoader":{"__symbolic":"class","members":{"get":[{"__symbolic":"method"}]}},"ɵCommonEngine":{"__symbolic":"class","members":{"getCompiler":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Type","module":"@angular/core","arguments":[{"__symbolic":"error","message":"Expression form not supported","line":33,"character":44,"module":"./src/engine"}]},{"__symbolic":"reference","name":"Array","arguments":[{"__symbolic":"reference","module":"@angular/core","name":"StaticProvider","line":34,"character":33}]}]}],"render":[{"__symbolic":"method"}],"getFactory":[{"__symbolic":"method"}],"getDocument":[{"__symbolic":"method"}]}},"ɵRenderOptions":{"__symbolic":"interface"}},"origins":{"ɵFileLoader":"./src/file-loader","ɵCommonEngine":"./src/engine","ɵRenderOptions":"./src/interfaces"},"importAs":"@nguniversal/common/engine"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/engine/index.d.ts b/node_modules/@nguniversal/common/engine/index.d.ts
new file mode 100755
index 0000000..45965af
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine/index.d.ts
@@ -0,0 +1,8 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export * from './public_api';
diff --git a/node_modules/@nguniversal/common/engine/private_api.d.ts b/node_modules/@nguniversal/common/engine/private_api.d.ts
new file mode 100755
index 0000000..e0ca170
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine/private_api.d.ts
@@ -0,0 +1,8 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { FileLoader as ɵFileLoader, CommonEngine as ɵCommonEngine, RenderOptions as ɵRenderOptions } from './src/index';
diff --git a/node_modules/@nguniversal/common/engine/public_api.d.ts b/node_modules/@nguniversal/common/engine/public_api.d.ts
new file mode 100755
index 0000000..64280dd
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine/public_api.d.ts
@@ -0,0 +1,8 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export * from './private_api';
diff --git a/node_modules/@nguniversal/common/engine/src/engine.d.ts b/node_modules/@nguniversal/common/engine/src/engine.d.ts
new file mode 100755
index 0000000..acdb597
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine/src/engine.d.ts
@@ -0,0 +1,25 @@
+import { Compiler, Type, NgModuleFactory, StaticProvider } from '@angular/core';
+import { RenderOptions } from './interfaces';
+/**
+ * A common rendering engine utility. This abstracts the logic
+ * for handling the platformServer compiler, the module cache, and
+ * the document loader
+ */
+export declare class CommonEngine {
+    private moduleOrFactory;
+    private providers;
+    /** Return an instance of the platformServer compiler */
+    getCompiler(): Compiler;
+    private factoryCacheMap;
+    private templateCache;
+    constructor(moduleOrFactory: Type<{}> | NgModuleFactory<{}>, providers?: StaticProvider[]);
+    /**
+     * Render an HTML document for a specific URL with specified
+     * render options
+     */
+    render(opts: RenderOptions): Promise<string>;
+    /** Return the factory for a given engine instance */
+    getFactory(): Promise<NgModuleFactory<{}>>;
+    /** Retrieve the document from the cache or the filesystem */
+    private getDocument(filePath);
+}
diff --git a/node_modules/@nguniversal/common/engine/src/file-loader.d.ts b/node_modules/@nguniversal/common/engine/src/file-loader.d.ts
new file mode 100755
index 0000000..e8765e7
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine/src/file-loader.d.ts
@@ -0,0 +1,5 @@
+import { ResourceLoader } from '@angular/compiler';
+/** ResourceLoader implementation for loading files */
+export declare class FileLoader implements ResourceLoader {
+    get(url: string): Promise<string>;
+}
diff --git a/node_modules/@nguniversal/common/engine/src/index.d.ts b/node_modules/@nguniversal/common/engine/src/index.d.ts
new file mode 100755
index 0000000..3aa25dd
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine/src/index.d.ts
@@ -0,0 +1,10 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export * from './interfaces';
+export * from './file-loader';
+export * from './engine';
diff --git a/node_modules/@nguniversal/common/engine/src/interfaces.d.ts b/node_modules/@nguniversal/common/engine/src/interfaces.d.ts
new file mode 100755
index 0000000..68ce1c5
--- /dev/null
+++ b/node_modules/@nguniversal/common/engine/src/interfaces.d.ts
@@ -0,0 +1,16 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+import { NgModuleFactory, StaticProvider, Type } from '@angular/core';
+/** These are the allowed options for the render */
+export interface RenderOptions {
+    bootstrap: Type<{}> | NgModuleFactory<{}>;
+    providers?: StaticProvider[];
+    url?: string;
+    document?: string;
+    documentFilePath?: string;
+}
diff --git a/node_modules/@nguniversal/common/esm2015/common_public_index.js b/node_modules/@nguniversal/common/esm2015/common_public_index.js
index ad73c2b..35a7237 100755
--- a/node_modules/@nguniversal/common/esm2015/common_public_index.js
+++ b/node_modules/@nguniversal/common/esm2015/common_public_index.js
@@ -2,7 +2,6 @@
  * Generated bundle index. Do not edit.
  */
 export * from './index';
-export { domContentLoadedFactory as ɵnguniversal_modules_common_common_b } from './src/state-transfer-initializer/module';
-export { TransferHttpCacheInterceptor as ɵnguniversal_modules_common_common_a } from './src/transfer_http';
+export { domContentLoadedFactory as ɵnguniversal_modules_common_common_a } from './src/state-transfer-initializer/module';
 
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uX3B1YmxpY19pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2NvbW1vbl9wdWJsaWNfaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLFNBQVMsQ0FBQztBQUV4QixPQUFPLEVBQUMsdUJBQXVCLElBQUksb0NBQW9DLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQztBQUN4SCxPQUFPLEVBQUMsNEJBQTRCLElBQUksb0NBQW9DLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9pbmRleCc7XG5cbmV4cG9ydCB7ZG9tQ29udGVudExvYWRlZEZhY3RvcnkgYXMgybVuZ3VuaXZlcnNhbF9tb2R1bGVzX2NvbW1vbl9jb21tb25fYn0gZnJvbSAnLi9zcmMvc3RhdGUtdHJhbnNmZXItaW5pdGlhbGl6ZXIvbW9kdWxlJztcbmV4cG9ydCB7VHJhbnNmZXJIdHRwQ2FjaGVJbnRlcmNlcHRvciBhcyDJtW5ndW5pdmVyc2FsX21vZHVsZXNfY29tbW9uX2NvbW1vbl9hfSBmcm9tICcuL3NyYy90cmFuc2Zlcl9odHRwJzsiXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uX3B1YmxpY19pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2NvbW1vbl9wdWJsaWNfaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLFNBQVMsQ0FBQztBQUV4QixPQUFPLEVBQUMsdUJBQXVCLElBQUksb0NBQW9DLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9pbmRleCc7XG5cbmV4cG9ydCB7ZG9tQ29udGVudExvYWRlZEZhY3RvcnkgYXMgybVuZ3VuaXZlcnNhbF9tb2R1bGVzX2NvbW1vbl9jb21tb25fYX0gZnJvbSAnLi9zcmMvc3RhdGUtdHJhbnNmZXItaW5pdGlhbGl6ZXIvbW9kdWxlJzsiXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/engine/engine.externs.js b/node_modules/@nguniversal/common/esm2015/engine/engine.externs.js
new file mode 100755
index 0000000..936d2af
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/engine/engine.externs.js
@@ -0,0 +1,6 @@
+/** @externs */
+/**
+ * @externs
+ * @suppress {duplicate,checkTypes}
+ */
+// NOTE: generated by tsickle, do not edit.
diff --git a/node_modules/@nguniversal/common/esm2015/engine/engine_public_index.js b/node_modules/@nguniversal/common/esm2015/engine/engine_public_index.js
new file mode 100755
index 0000000..3a799cf
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/engine/engine_public_index.js
@@ -0,0 +1,6 @@
+/**
+ * Generated bundle index. Do not edit.
+ */
+export * from './index';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5naW5lX3B1YmxpY19pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2VuZ2luZS9lbmdpbmVfcHVibGljX2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsY0FBYyxTQUFTLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vaW5kZXgnO1xuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/engine/index.js b/node_modules/@nguniversal/common/esm2015/engine/index.js
new file mode 100755
index 0000000..5bcfe0d
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/engine/index.js
@@ -0,0 +1,14 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { ɵFileLoader, ɵCommonEngine } from './public_api';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9lbmdpbmUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFPQSwyQ0FBYyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljX2FwaSc7XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/engine/private_api.js b/node_modules/@nguniversal/common/esm2015/engine/private_api.js
new file mode 100755
index 0000000..b5f9c24
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/engine/private_api.js
@@ -0,0 +1,14 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { FileLoader as ɵFileLoader, CommonEngine as ɵCommonEngine } from './src/index';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV9hcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9lbmdpbmUvcHJpdmF0ZV9hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFRQSxPQUFPLEVBQUUsVUFBVSxJQUFJLFdBQVcsRUFBRSxZQUFZLElBQUksYUFBYSxFQUM5QixNQUFNLGFBQWEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5leHBvcnQgeyBGaWxlTG9hZGVyIGFzIMm1RmlsZUxvYWRlciwgQ29tbW9uRW5naW5lIGFzIMm1Q29tbW9uRW5naW5lLFxuICBSZW5kZXJPcHRpb25zIGFzIMm1UmVuZGVyT3B0aW9ucyB9IGZyb20gJy4vc3JjL2luZGV4JztcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/engine/public_api.js b/node_modules/@nguniversal/common/esm2015/engine/public_api.js
new file mode 100755
index 0000000..6342a39
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/engine/public_api.js
@@ -0,0 +1,14 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { ɵFileLoader, ɵCommonEngine } from './private_api';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2VuZ2luZS9wdWJsaWNfYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBT0EsMkNBQWMsZUFBZSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5leHBvcnQgKiBmcm9tICcuL3ByaXZhdGVfYXBpJztcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/engine/src/engine.js b/node_modules/@nguniversal/common/esm2015/engine/src/engine.js
new file mode 100755
index 0000000..d752488
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/engine/src/engine.js
@@ -0,0 +1,117 @@
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+import { ResourceLoader } from '@angular/compiler';
+import { NgModuleFactory, CompilerFactory } from '@angular/core';
+import { INITIAL_CONFIG, renderModuleFactory, platformDynamicServer } from '@angular/platform-server';
+import * as fs from 'fs';
+import { FileLoader } from './file-loader';
+/**
+ * A common rendering engine utility. This abstracts the logic
+ * for handling the platformServer compiler, the module cache, and
+ * the document loader
+ */
+export class CommonEngine {
+    /**
+     * @param {?} moduleOrFactory
+     * @param {?=} providers
+     */
+    constructor(moduleOrFactory, providers = []) {
+        this.moduleOrFactory = moduleOrFactory;
+        this.providers = providers;
+        this.factoryCacheMap = new Map();
+        this.templateCache = {};
+    }
+    /**
+     * Return an instance of the platformServer compiler
+     * @return {?}
+     */
+    getCompiler() {
+        const /** @type {?} */ compilerFactory = platformDynamicServer().injector.get(CompilerFactory);
+        return compilerFactory.createCompiler([
+            { providers: [{ provide: ResourceLoader, useClass: FileLoader, deps: [] }] }
+        ]);
+    }
+    /**
+     * Render an HTML document for a specific URL with specified
+     * render options
+     * @param {?} opts
+     * @return {?}
+     */
+    render(opts) {
+        return __awaiter(this, void 0, void 0, function* () {
+            // if opts.document dosen't exist then opts.documentFilePath must
+            const /** @type {?} */ doc = opts.document || (yield this.getDocument(/** @type {?} */ (((opts)).documentFilePath)));
+            const /** @type {?} */ extraProviders = [
+                ...(opts.providers || []),
+                ...(this.providers || []),
+                {
+                    provide: INITIAL_CONFIG,
+                    useValue: {
+                        document: doc,
+                        url: opts.url
+                    }
+                }
+            ];
+            const /** @type {?} */ factory = yield this.getFactory();
+            return renderModuleFactory(factory, { extraProviders });
+        });
+    }
+    /**
+     * Return the factory for a given engine instance
+     * @return {?}
+     */
+    getFactory() {
+        // If module has been compiled AoT
+        const /** @type {?} */ moduleOrFactory = this.moduleOrFactory;
+        if (moduleOrFactory instanceof NgModuleFactory) {
+            return Promise.resolve(moduleOrFactory);
+        }
+        else {
+            // we're in JIT mode
+            let /** @type {?} */ moduleFactory = this.factoryCacheMap.get(moduleOrFactory);
+            // If module factory is cached
+            if (moduleFactory) {
+                return Promise.resolve(moduleFactory);
+            }
+            // Compile the module and cache it
+            return this.getCompiler().compileModuleAsync(moduleOrFactory)
+                .then((factory) => {
+                this.factoryCacheMap.set(moduleOrFactory, factory);
+                return factory;
+            });
+        }
+    }
+    /**
+     * Retrieve the document from the cache or the filesystem
+     * @param {?} filePath
+     * @return {?}
+     */
+    getDocument(filePath) {
+        const /** @type {?} */ doc = this.templateCache[filePath] = this.templateCache[filePath] ||
+            fs.readFileSync(filePath).toString();
+        // As  promise so we can change the API later without breaking
+        return Promise.resolve(doc);
+    }
+}
+function CommonEngine_tsickle_Closure_declarations() {
+    /** @type {?} */
+    CommonEngine.prototype.factoryCacheMap;
+    /** @type {?} */
+    CommonEngine.prototype.templateCache;
+    /** @type {?} */
+    CommonEngine.prototype.moduleOrFactory;
+    /** @type {?} */
+    CommonEngine.prototype.providers;
+}
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5naW5lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9jb21tb24vZW5naW5lL3NyYy9lbmdpbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBT0EsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBaUIsZUFBZSxFQUFFLGVBQWUsRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDL0YsT0FBTyxFQUFDLGNBQWMsRUFBRSxtQkFBbUIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ3BHLE9BQU8sS0FBSyxFQUFFLE1BQU0sSUFBSSxDQUFDO0FBRXpCLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7Ozs7OztBQVF6QyxNQUFNOzs7OztJQWFKLFlBQW9CLGVBQStDLEVBQy9DLFlBQThCLEVBQUU7UUFEaEMsb0JBQWUsR0FBZixlQUFlLENBQWdDO1FBQy9DLGNBQVMsR0FBVCxTQUFTOytCQUpILElBQUksR0FBRyxFQUFpQzs2QkFDakIsRUFBRTtLQUdLOzs7OztJQVh4RCxXQUFXO1FBQ1QsdUJBQU0sZUFBZSxHQUFvQixxQkFBcUIsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDL0YsTUFBTSxDQUFDLGVBQWUsQ0FBQyxjQUFjLENBQUM7WUFDcEMsRUFBQyxTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFDLENBQUMsRUFBQztTQUN6RSxDQUFDLENBQUM7S0FDSjs7Ozs7OztJQVlLLE1BQU0sQ0FBQyxJQUFtQjs7O1lBRTlCLHVCQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxLQUFJLE1BQU0sSUFBSSxDQUFDLFdBQVcscUJBQUMsSUFBSSxHQUFFLGdCQUFnQixFQUFXLENBQUEsQ0FBQztZQUN0Rix1QkFBTSxjQUFjLEdBQUc7Z0JBQ3JCLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQztnQkFDekIsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDO2dCQUN6QjtvQkFDRSxPQUFPLEVBQUUsY0FBYztvQkFDdkIsUUFBUSxFQUFFO3dCQUNSLFFBQVEsRUFBRSxHQUFHO3dCQUNiLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRztxQkFDZDtpQkFDRjthQUNGLENBQUM7WUFFRix1QkFBTSxPQUFPLEdBQUcsTUFBTSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDeEMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sRUFBRSxFQUFDLGNBQWMsRUFBQyxDQUFDLENBQUM7O0tBQ3ZEOzs7OztJQUdELFVBQVU7O1FBRVIsdUJBQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDN0MsRUFBRSxDQUFDLENBQUMsZUFBZSxZQUFZLGVBQWUsQ0FBQyxDQUFDLENBQUM7WUFDL0MsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDekM7UUFBQyxJQUFJLENBQUMsQ0FBQzs7WUFFTixxQkFBSSxhQUFhLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7O1lBRzlELEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7Z0JBQ2xCLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO2FBQ3ZDOztZQUdELE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsa0JBQWtCLENBQUMsZUFBZSxDQUFDO2lCQUMxRCxJQUFJLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxDQUFDO2dCQUNuRCxNQUFNLENBQUMsT0FBTyxDQUFDO2FBQ2hCLENBQUMsQ0FBQztTQUNOO0tBQ0Y7Ozs7OztJQUdPLFdBQVcsQ0FBQyxRQUFnQjtRQUNsQyx1QkFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQztZQUN2RSxFQUFFLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDOztRQUdyQyxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQzs7Q0FFL0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7UmVzb3VyY2VMb2FkZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvbXBpbGVyJztcbmltcG9ydCB7Q29tcGlsZXIsIFR5cGUsIE5nTW9kdWxlRmFjdG9yeSwgQ29tcGlsZXJGYWN0b3J5LCBTdGF0aWNQcm92aWRlcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0lOSVRJQUxfQ09ORklHLCByZW5kZXJNb2R1bGVGYWN0b3J5LCBwbGF0Zm9ybUR5bmFtaWNTZXJ2ZXJ9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLXNlcnZlcic7XG5pbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XG5cbmltcG9ydCB7RmlsZUxvYWRlcn0gZnJvbSAnLi9maWxlLWxvYWRlcic7XG5pbXBvcnQge1JlbmRlck9wdGlvbnN9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5cbi8qKlxuICogQSBjb21tb24gcmVuZGVyaW5nIGVuZ2luZSB1dGlsaXR5LiBUaGlzIGFic3RyYWN0cyB0aGUgbG9naWNcbiAqIGZvciBoYW5kbGluZyB0aGUgcGxhdGZvcm1TZXJ2ZXIgY29tcGlsZXIsIHRoZSBtb2R1bGUgY2FjaGUsIGFuZFxuICogdGhlIGRvY3VtZW50IGxvYWRlclxuICovXG5leHBvcnQgY2xhc3MgQ29tbW9uRW5naW5lIHtcblxuICAvKiogUmV0dXJuIGFuIGluc3RhbmNlIG9mIHRoZSBwbGF0Zm9ybVNlcnZlciBjb21waWxlciAqL1xuICBnZXRDb21waWxlcigpOiBDb21waWxlciB7XG4gICAgY29uc3QgY29tcGlsZXJGYWN0b3J5OiBDb21waWxlckZhY3RvcnkgPSBwbGF0Zm9ybUR5bmFtaWNTZXJ2ZXIoKS5pbmplY3Rvci5nZXQoQ29tcGlsZXJGYWN0b3J5KTtcbiAgICByZXR1cm4gY29tcGlsZXJGYWN0b3J5LmNyZWF0ZUNvbXBpbGVyKFtcbiAgICAgIHtwcm92aWRlcnM6IFt7cHJvdmlkZTogUmVzb3VyY2VMb2FkZXIsIHVzZUNsYXNzOiBGaWxlTG9hZGVyLCBkZXBzOiBbXX1dfVxuICAgIF0pO1xuICB9XG5cbiAgcHJpdmF0ZSBmYWN0b3J5Q2FjaGVNYXAgPSBuZXcgTWFwPFR5cGU8e30+LCBOZ01vZHVsZUZhY3Rvcnk8e30+PigpO1xuICBwcml2YXRlIHRlbXBsYXRlQ2FjaGU6IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9ID0ge307XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtb2R1bGVPckZhY3Rvcnk6IFR5cGU8e30+IHwgTmdNb2R1bGVGYWN0b3J5PHt9PixcbiAgICAgICAgICAgICAgcHJpdmF0ZSBwcm92aWRlcnM6IFN0YXRpY1Byb3ZpZGVyW10gPSBbXSkge31cblxuICAvKipcbiAgICogUmVuZGVyIGFuIEhUTUwgZG9jdW1lbnQgZm9yIGEgc3BlY2lmaWMgVVJMIHdpdGggc3BlY2lmaWVkXG4gICAqIHJlbmRlciBvcHRpb25zXG4gICAqL1xuICBhc3luYyByZW5kZXIob3B0czogUmVuZGVyT3B0aW9ucyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgLy8gaWYgb3B0cy5kb2N1bWVudCBkb3Nlbid0IGV4aXN0IHRoZW4gb3B0cy5kb2N1bWVudEZpbGVQYXRoIG11c3RcbiAgICBjb25zdCBkb2MgPSBvcHRzLmRvY3VtZW50IHx8IGF3YWl0IHRoaXMuZ2V0RG9jdW1lbnQob3B0cyEuZG9jdW1lbnRGaWxlUGF0aCBhcyBzdHJpbmcpO1xuICAgIGNvbnN0IGV4dHJhUHJvdmlkZXJzID0gW1xuICAgICAgLi4uKG9wdHMucHJvdmlkZXJzIHx8IFtdKSxcbiAgICAgIC4uLih0aGlzLnByb3ZpZGVycyB8fCBbXSksXG4gICAgICB7XG4gICAgICAgIHByb3ZpZGU6IElOSVRJQUxfQ09ORklHLFxuICAgICAgICB1c2VWYWx1ZToge1xuICAgICAgICAgIGRvY3VtZW50OiBkb2MsXG4gICAgICAgICAgdXJsOiBvcHRzLnVybFxuICAgICAgICB9XG4gICAgICB9XG4gICAgXTtcblxuICAgIGNvbnN0IGZhY3RvcnkgPSBhd2FpdCB0aGlzLmdldEZhY3RvcnkoKTtcbiAgICByZXR1cm4gcmVuZGVyTW9kdWxlRmFjdG9yeShmYWN0b3J5LCB7ZXh0cmFQcm92aWRlcnN9KTtcbiAgfVxuXG4gIC8qKiBSZXR1cm4gdGhlIGZhY3RvcnkgZm9yIGEgZ2l2ZW4gZW5naW5lIGluc3RhbmNlICovXG4gIGdldEZhY3RvcnkoKTogUHJvbWlzZTxOZ01vZHVsZUZhY3Rvcnk8e30+PiB7XG4gICAgLy8gSWYgbW9kdWxlIGhhcyBiZWVuIGNvbXBpbGVkIEFvVFxuICAgIGNvbnN0IG1vZHVsZU9yRmFjdG9yeSA9IHRoaXMubW9kdWxlT3JGYWN0b3J5O1xuICAgIGlmIChtb2R1bGVPckZhY3RvcnkgaW5zdGFuY2VvZiBOZ01vZHVsZUZhY3RvcnkpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobW9kdWxlT3JGYWN0b3J5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gd2UncmUgaW4gSklUIG1vZGVcbiAgICAgIGxldCBtb2R1bGVGYWN0b3J5ID0gdGhpcy5mYWN0b3J5Q2FjaGVNYXAuZ2V0KG1vZHVsZU9yRmFjdG9yeSk7XG5cbiAgICAgIC8vIElmIG1vZHVsZSBmYWN0b3J5IGlzIGNhY2hlZFxuICAgICAgaWYgKG1vZHVsZUZhY3RvcnkpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShtb2R1bGVGYWN0b3J5KTtcbiAgICAgIH1cblxuICAgICAgLy8gQ29tcGlsZSB0aGUgbW9kdWxlIGFuZCBjYWNoZSBpdFxuICAgICAgcmV0dXJuIHRoaXMuZ2V0Q29tcGlsZXIoKS5jb21waWxlTW9kdWxlQXN5bmMobW9kdWxlT3JGYWN0b3J5KVxuICAgICAgICAudGhlbigoZmFjdG9yeSkgPT4ge1xuICAgICAgICAgIHRoaXMuZmFjdG9yeUNhY2hlTWFwLnNldChtb2R1bGVPckZhY3RvcnksIGZhY3RvcnkpO1xuICAgICAgICAgIHJldHVybiBmYWN0b3J5O1xuICAgICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKiogUmV0cmlldmUgdGhlIGRvY3VtZW50IGZyb20gdGhlIGNhY2hlIG9yIHRoZSBmaWxlc3lzdGVtICovXG4gIHByaXZhdGUgZ2V0RG9jdW1lbnQoZmlsZVBhdGg6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgY29uc3QgZG9jID0gdGhpcy50ZW1wbGF0ZUNhY2hlW2ZpbGVQYXRoXSA9IHRoaXMudGVtcGxhdGVDYWNoZVtmaWxlUGF0aF0gfHxcbiAgICBmcy5yZWFkRmlsZVN5bmMoZmlsZVBhdGgpLnRvU3RyaW5nKCk7XG5cbiAgICAvLyBBcyAgcHJvbWlzZSBzbyB3ZSBjYW4gY2hhbmdlIHRoZSBBUEkgbGF0ZXIgd2l0aG91dCBicmVha2luZ1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZG9jKTtcbiAgfVxufVxuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/engine/src/file-loader.js b/node_modules/@nguniversal/common/esm2015/engine/src/file-loader.js
new file mode 100755
index 0000000..2d4a572
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/engine/src/file-loader.js
@@ -0,0 +1,26 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+import * as fs from 'fs';
+/**
+ * ResourceLoader implementation for loading files
+ */
+export class FileLoader {
+    /**
+     * @param {?} url
+     * @return {?}
+     */
+    get(url) {
+        return new Promise((resolve, reject) => {
+            fs.readFile(url, (err, buffer) => {
+                if (err) {
+                    return reject(err);
+                }
+                resolve(buffer.toString());
+            });
+        });
+    }
+}
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1sb2FkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9lbmdpbmUvc3JjL2ZpbGUtbG9hZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFPQSxPQUFPLEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQzs7OztBQUl6QixNQUFNOzs7OztJQUNKLEdBQUcsQ0FBQyxHQUFXO1FBQ2IsTUFBTSxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3JDLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBMEIsRUFBRSxNQUFjLEVBQUUsRUFBRTtnQkFDOUQsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDUixNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUNwQjtnQkFFRCxPQUFPLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7YUFDNUIsQ0FBQyxDQUFDO1NBQ0osQ0FBQyxDQUFDO0tBQ0o7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHsgUmVzb3VyY2VMb2FkZXIgfSBmcm9tICdAYW5ndWxhci9jb21waWxlcic7XG5cbi8qKiBSZXNvdXJjZUxvYWRlciBpbXBsZW1lbnRhdGlvbiBmb3IgbG9hZGluZyBmaWxlcyAqL1xuZXhwb3J0IGNsYXNzIEZpbGVMb2FkZXIgaW1wbGVtZW50cyBSZXNvdXJjZUxvYWRlciB7XG4gIGdldCh1cmw6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGZzLnJlYWRGaWxlKHVybCwgKGVycjogTm9kZUpTLkVycm5vRXhjZXB0aW9uLCBidWZmZXI6IEJ1ZmZlcikgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzb2x2ZShidWZmZXIudG9TdHJpbmcoKSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/engine/src/index.js b/node_modules/@nguniversal/common/esm2015/engine/src/index.js
new file mode 100755
index 0000000..6746ee6
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/engine/src/index.js
@@ -0,0 +1,15 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { FileLoader } from './file-loader';
+export { CommonEngine } from './engine';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9lbmdpbmUvc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBUUEsMkJBQWMsZUFBZSxDQUFDO0FBQzlCLDZCQUFjLFVBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuZXhwb3J0ICogZnJvbSAnLi9pbnRlcmZhY2VzJztcbmV4cG9ydCAqIGZyb20gJy4vZmlsZS1sb2FkZXInO1xuZXhwb3J0ICogZnJvbSAnLi9lbmdpbmUnO1xuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/engine/src/interfaces.js b/node_modules/@nguniversal/common/esm2015/engine/src/interfaces.js
new file mode 100755
index 0000000..8596279
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/engine/src/interfaces.js
@@ -0,0 +1,23 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * These are the allowed options for the render
+ * @record
+ */
+export function RenderOptions() { }
+function RenderOptions_tsickle_Closure_declarations() {
+    /** @type {?} */
+    RenderOptions.prototype.bootstrap;
+    /** @type {?|undefined} */
+    RenderOptions.prototype.providers;
+    /** @type {?|undefined} */
+    RenderOptions.prototype.url;
+    /** @type {?|undefined} */
+    RenderOptions.prototype.document;
+    /** @type {?|undefined} */
+    RenderOptions.prototype.documentFilePath;
+}
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2VuZ2luZS9zcmMvaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQge05nTW9kdWxlRmFjdG9yeSwgU3RhdGljUHJvdmlkZXIsIFR5cGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKiogVGhlc2UgYXJlIHRoZSBhbGxvd2VkIG9wdGlvbnMgZm9yIHRoZSByZW5kZXIgKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVuZGVyT3B0aW9ucyB7XG4gIGJvb3RzdHJhcDogVHlwZTx7fT4gfCBOZ01vZHVsZUZhY3Rvcnk8e30+O1xuICBwcm92aWRlcnM/OiBTdGF0aWNQcm92aWRlcltdO1xuICB1cmw/OiBzdHJpbmc7XG4gIGRvY3VtZW50Pzogc3RyaW5nO1xuICBkb2N1bWVudEZpbGVQYXRoPzogc3RyaW5nO1xufVxuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/index.js b/node_modules/@nguniversal/common/esm2015/index.js
index c1ec1b5..2702608 100755
--- a/node_modules/@nguniversal/common/esm2015/index.js
+++ b/node_modules/@nguniversal/common/esm2015/index.js
@@ -9,6 +9,6 @@
  * Use of this source code is governed by an MIT-style license that can be
  * found in the LICENSE file at https://angular.io/license
  */
-export { TransferHttpCacheModule, StateTransferInitializerModule } from './public_api';
+export { TransferHttpCacheModule, StateTransferInitializerModule, ɵTransferHttpCacheInterceptor } from './public_api';
 
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQU9BLHdFQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWNfYXBpJztcbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQU9BLHVHQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWNfYXBpJztcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/private_api.js b/node_modules/@nguniversal/common/esm2015/private_api.js
new file mode 100755
index 0000000..970d440
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/private_api.js
@@ -0,0 +1,7 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+export { TransferHttpCacheInterceptor as ɵTransferHttpCacheInterceptor } from './src/transfer_http';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV9hcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9wcml2YXRlX2FwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBT0EsT0FBTyxFQUFFLDRCQUE0QixJQUFJLDZCQUE2QixFQUFFLE1BQU0scUJBQXFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmV4cG9ydCB7IFRyYW5zZmVySHR0cENhY2hlSW50ZXJjZXB0b3IgYXMgybVUcmFuc2Zlckh0dHBDYWNoZUludGVyY2VwdG9yIH0gZnJvbSAnLi9zcmMvdHJhbnNmZXJfaHR0cCc7XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/public_api.js b/node_modules/@nguniversal/common/esm2015/public_api.js
index 6a7d070..9817b8b 100755
--- a/node_modules/@nguniversal/common/esm2015/public_api.js
+++ b/node_modules/@nguniversal/common/esm2015/public_api.js
@@ -4,5 +4,6 @@
  */
 export { TransferHttpCacheModule } from './src/transfer_http';
 export { StateTransferInitializerModule } from './src/state-transfer-initializer/module';
+export { ɵTransferHttpCacheInterceptor } from './private_api';
 
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQU9BLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzlELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5leHBvcnQgeyBUcmFuc2Zlckh0dHBDYWNoZU1vZHVsZSB9IGZyb20gJy4vc3JjL3RyYW5zZmVyX2h0dHAnO1xuZXhwb3J0IHsgU3RhdGVUcmFuc2ZlckluaXRpYWxpemVyTW9kdWxlIH0gZnJvbSAnLi9zcmMvc3RhdGUtdHJhbnNmZXItaW5pdGlhbGl6ZXIvbW9kdWxlJztcbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQU9BLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzlELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ3pGLDhDQUFjLGVBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuZXhwb3J0IHsgVHJhbnNmZXJIdHRwQ2FjaGVNb2R1bGUgfSBmcm9tICcuL3NyYy90cmFuc2Zlcl9odHRwJztcbmV4cG9ydCB7IFN0YXRlVHJhbnNmZXJJbml0aWFsaXplck1vZHVsZSB9IGZyb20gJy4vc3JjL3N0YXRlLXRyYW5zZmVyLWluaXRpYWxpemVyL21vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL3ByaXZhdGVfYXBpJztcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/src/state-transfer-initializer/module.js b/node_modules/@nguniversal/common/esm2015/src/state-transfer-initializer/module.js
index 29b74c1..d146129 100755
--- a/node_modules/@nguniversal/common/esm2015/src/state-transfer-initializer/module.js
+++ b/node_modules/@nguniversal/common/esm2015/src/state-transfer-initializer/module.js
@@ -33,14 +33,5 @@ StateTransferInitializerModule.decorators = [
                 ]
             },] }
 ];
-function StateTransferInitializerModule_tsickle_Closure_declarations() {
-    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
-    StateTransferInitializerModule.decorators;
-    /**
-     * @nocollapse
-     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
-     */
-    StateTransferInitializerModule.ctorParameters;
-}
 
 //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9jb21tb24vc3JjL3N0YXRlLXRyYW5zZmVyLWluaXRpYWxpemVyL21vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7QUFFM0MsTUFBTSxrQ0FBa0MsR0FBYTtJQUNuRCxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxPQUFPLENBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLEVBQUU7UUFDN0MsdUJBQU0sYUFBYSxHQUFHLEdBQUcsRUFBRTtZQUN6QixHQUFHLENBQUMsbUJBQW1CLENBQUMsa0JBQWtCLEVBQUUsYUFBYSxDQUFDLENBQUM7WUFDM0QsT0FBTyxFQUFFLENBQUM7U0FDWCxDQUFDO1FBQ0YsR0FBRyxDQUFDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxDQUFDO0tBQ3pELENBQUMsQ0FBQztDQUNKO0FBUUQsTUFBTTs7O1lBTEwsUUFBUSxTQUFDO2dCQUNSLFNBQVMsRUFBRTtvQkFDVCxFQUFDLE9BQU8sRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsdUJBQXVCLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUM7aUJBQy9GO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuaW1wb3J0IHsgTmdNb2R1bGUsIEFQUF9JTklUSUFMSVpFUiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5leHBvcnQgZnVuY3Rpb24gZG9tQ29udGVudExvYWRlZEZhY3RvcnkoZG9jOiBEb2N1bWVudCkge1xuICByZXR1cm4gKCkgPT4gbmV3IFByb21pc2UgKChyZXNvbHZlLCBfcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgY29udGVudExvYWRlZCA9ICgpID0+IHtcbiAgICAgIGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgY29udGVudExvYWRlZCk7XG4gICAgICByZXNvbHZlKCk7XG4gICAgfTtcbiAgICBkb2MuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGNvbnRlbnRMb2FkZWQpO1xuICB9KTtcbn1cblxuXG5ATmdNb2R1bGUoe1xuICBwcm92aWRlcnM6IFtcbiAgICB7cHJvdmlkZTogQVBQX0lOSVRJQUxJWkVSLCBtdWx0aTogdHJ1ZSwgdXNlRmFjdG9yeTogZG9tQ29udGVudExvYWRlZEZhY3RvcnksIGRlcHM6IFtET0NVTUVOVF19LFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFN0YXRlVHJhbnNmZXJJbml0aWFsaXplck1vZHVsZSB7fVxuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/src/transfer_http.js b/node_modules/@nguniversal/common/esm2015/src/transfer_http.js
index 65c459e..e6e850e 100755
--- a/node_modules/@nguniversal/common/esm2015/src/transfer_http.js
+++ b/node_modules/@nguniversal/common/esm2015/src/transfer_http.js
@@ -53,8 +53,20 @@ export class TransferHttpCacheInterceptor {
      * @return {?}
      */
     invalidateCacheEntry(url) {
-        this.transferState.remove(makeStateKey('G.' + url));
-        this.transferState.remove(makeStateKey('H.' + url));
+        Object.keys(this.transferState['store'])
+            .forEach(key => key.includes(url) ? this.transferState.remove(makeStateKey(key)) : null);
+    }
+    /**
+     * @param {?} method
+     * @param {?} url
+     * @param {?} params
+     * @return {?}
+     */
+    makeCacheKey(method, url, params) {
+        // make the params encoded same as a url so it's easy to identify
+        const /** @type {?} */ encodedParams = params.keys().sort().map(k => `${k}=${params.get(k)}`).join('&');
+        const /** @type {?} */ key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;
+        return makeStateKey(key);
     }
     /**
      * @param {?} req
@@ -71,8 +83,7 @@ export class TransferHttpCacheInterceptor {
             // Cache is no longer active. Pass the request through.
             return next.handle(req);
         }
-        const /** @type {?} */ key = (req.method === 'GET' ? 'G.' : 'H.') + req.url;
-        const /** @type {?} */ storeKey = makeStateKey(key);
+        const /** @type {?} */ storeKey = this.makeCacheKey(req.method, req.url, req.params);
         if (this.transferState.hasKey(storeKey)) {
             // Request found in cache. Respond using it.
             const /** @type {?} */ response = this.transferState.get(storeKey, /** @type {?} */ ({}));
@@ -107,17 +118,10 @@ TransferHttpCacheInterceptor.decorators = [
 ];
 /** @nocollapse */
 TransferHttpCacheInterceptor.ctorParameters = () => [
-    { type: ApplicationRef, },
-    { type: TransferState, },
+    { type: ApplicationRef },
+    { type: TransferState }
 ];
 function TransferHttpCacheInterceptor_tsickle_Closure_declarations() {
-    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
-    TransferHttpCacheInterceptor.decorators;
-    /**
-     * @nocollapse
-     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
-     */
-    TransferHttpCacheInterceptor.ctorParameters;
     /** @type {?} */
     TransferHttpCacheInterceptor.prototype.isCacheActive;
     /** @type {?} */
@@ -138,14 +142,5 @@ TransferHttpCacheModule.decorators = [
                 ],
             },] }
 ];
-function TransferHttpCacheModule_tsickle_Closure_declarations() {
-    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
-    TransferHttpCacheModule.decorators;
-    /**
-     * @nocollapse
-     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
-     */
-    TransferHttpCacheModule.ctorParameters;
-}
 
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/tokens/index.js b/node_modules/@nguniversal/common/esm2015/tokens/index.js
new file mode 100755
index 0000000..2967ef5
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/tokens/index.js
@@ -0,0 +1,14 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { ɵORIGIN_URL, ɵREQUEST, ɵRESPONSE } from './public_api';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi90b2tlbnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFPQSxpREFBYyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljX2FwaSc7XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/tokens/private_api.js b/node_modules/@nguniversal/common/esm2015/tokens/private_api.js
new file mode 100755
index 0000000..7b504e7
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/tokens/private_api.js
@@ -0,0 +1,7 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+export { ORIGIN_URL as ɵORIGIN_URL, REQUEST as ɵREQUEST, RESPONSE as ɵRESPONSE } from './src/tokens';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV9hcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi90b2tlbnMvcHJpdmF0ZV9hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQU9BLE9BQU8sRUFBQyxVQUFVLElBQUksV0FBVyxFQUFFLE9BQU8sSUFBSSxRQUFRLEVBQUUsUUFBUSxJQUFJLFNBQVMsRUFBQyxNQUFNLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuZXhwb3J0IHtPUklHSU5fVVJMIGFzIMm1T1JJR0lOX1VSTCwgUkVRVUVTVCBhcyDJtVJFUVVFU1QsIFJFU1BPTlNFIGFzIMm1UkVTUE9OU0V9IGZyb20gJy4vc3JjL3Rva2Vucyc7XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/tokens/public_api.js b/node_modules/@nguniversal/common/esm2015/tokens/public_api.js
new file mode 100755
index 0000000..5a53b3d
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/tokens/public_api.js
@@ -0,0 +1,14 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { ɵORIGIN_URL, ɵREQUEST, ɵRESPONSE } from './private_api';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL3Rva2Vucy9wdWJsaWNfYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBT0EsaURBQWMsZUFBZSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5leHBvcnQgKiBmcm9tICcuL3ByaXZhdGVfYXBpJztcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/tokens/src/tokens.js b/node_modules/@nguniversal/common/esm2015/tokens/src/tokens.js
new file mode 100755
index 0000000..09adeab
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/tokens/src/tokens.js
@@ -0,0 +1,10 @@
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+import { InjectionToken } from '@angular/core';
+export const /** @type {?} */ ORIGIN_URL = new InjectionToken('ORIGIN_URL');
+export const /** @type {?} */ REQUEST = new InjectionToken('REQUEST');
+export const /** @type {?} */ RESPONSE = new InjectionToken('RESPONSE');
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW5zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9jb21tb24vdG9rZW5zL3NyYy90b2tlbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQU9BLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFL0MsTUFBTSxDQUFDLHVCQUFNLFVBQVUsR0FBRyxJQUFJLGNBQWMsQ0FBTSxZQUFZLENBQUMsQ0FBQztBQUNoRSxNQUFNLENBQUMsdUJBQU0sT0FBTyxHQUFHLElBQUksY0FBYyxDQUFNLFNBQVMsQ0FBQyxDQUFDO0FBQzFELE1BQU0sQ0FBQyx1QkFBTSxRQUFRLEdBQUcsSUFBSSxjQUFjLENBQU0sVUFBVSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7IEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBjb25zdCBPUklHSU5fVVJMID0gbmV3IEluamVjdGlvblRva2VuPGFueT4oJ09SSUdJTl9VUkwnKTtcbmV4cG9ydCBjb25zdCBSRVFVRVNUID0gbmV3IEluamVjdGlvblRva2VuPGFueT4oJ1JFUVVFU1QnKTtcbmV4cG9ydCBjb25zdCBSRVNQT05TRSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxhbnk+KCdSRVNQT05TRScpO1xuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm2015/tokens/tokens.externs.js b/node_modules/@nguniversal/common/esm2015/tokens/tokens.externs.js
new file mode 100755
index 0000000..936d2af
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/tokens/tokens.externs.js
@@ -0,0 +1,6 @@
+/** @externs */
+/**
+ * @externs
+ * @suppress {duplicate,checkTypes}
+ */
+// NOTE: generated by tsickle, do not edit.
diff --git a/node_modules/@nguniversal/common/esm2015/tokens/tokens_public_index.js b/node_modules/@nguniversal/common/esm2015/tokens/tokens_public_index.js
new file mode 100755
index 0000000..27b79f1
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm2015/tokens/tokens_public_index.js
@@ -0,0 +1,6 @@
+/**
+ * Generated bundle index. Do not edit.
+ */
+export * from './index';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW5zX3B1YmxpY19pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL3Rva2Vucy90b2tlbnNfcHVibGljX2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsY0FBYyxTQUFTLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vaW5kZXgnO1xuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/common_public_index.js b/node_modules/@nguniversal/common/esm5/common_public_index.js
index da4497b..51e7567 100755
--- a/node_modules/@nguniversal/common/esm5/common_public_index.js
+++ b/node_modules/@nguniversal/common/esm5/common_public_index.js
@@ -2,7 +2,6 @@
  * Generated bundle index. Do not edit.
  */
 export * from './index';
-export { domContentLoadedFactory as ɵnguniversal_modules_common_common_b } from './src/state-transfer-initializer/module';
-export { TransferHttpCacheInterceptor as ɵnguniversal_modules_common_common_a } from './src/transfer_http';
+export { domContentLoadedFactory as ɵnguniversal_modules_common_common_a } from './src/state-transfer-initializer/module';
 
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uX3B1YmxpY19pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2NvbW1vbl9wdWJsaWNfaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLFNBQVMsQ0FBQztBQUV4QixPQUFPLEVBQUMsdUJBQXVCLElBQUksb0NBQW9DLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQztBQUN4SCxPQUFPLEVBQUMsNEJBQTRCLElBQUksb0NBQW9DLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9pbmRleCc7XG5cbmV4cG9ydCB7ZG9tQ29udGVudExvYWRlZEZhY3RvcnkgYXMgybVuZ3VuaXZlcnNhbF9tb2R1bGVzX2NvbW1vbl9jb21tb25fYn0gZnJvbSAnLi9zcmMvc3RhdGUtdHJhbnNmZXItaW5pdGlhbGl6ZXIvbW9kdWxlJztcbmV4cG9ydCB7VHJhbnNmZXJIdHRwQ2FjaGVJbnRlcmNlcHRvciBhcyDJtW5ndW5pdmVyc2FsX21vZHVsZXNfY29tbW9uX2NvbW1vbl9hfSBmcm9tICcuL3NyYy90cmFuc2Zlcl9odHRwJzsiXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uX3B1YmxpY19pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2NvbW1vbl9wdWJsaWNfaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLFNBQVMsQ0FBQztBQUV4QixPQUFPLEVBQUMsdUJBQXVCLElBQUksb0NBQW9DLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9pbmRleCc7XG5cbmV4cG9ydCB7ZG9tQ29udGVudExvYWRlZEZhY3RvcnkgYXMgybVuZ3VuaXZlcnNhbF9tb2R1bGVzX2NvbW1vbl9jb21tb25fYX0gZnJvbSAnLi9zcmMvc3RhdGUtdHJhbnNmZXItaW5pdGlhbGl6ZXIvbW9kdWxlJzsiXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/engine/engine_public_index.js b/node_modules/@nguniversal/common/esm5/engine/engine_public_index.js
new file mode 100755
index 0000000..3d6ab24
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/engine/engine_public_index.js
@@ -0,0 +1,6 @@
+/**
+ * Generated bundle index. Do not edit.
+ */
+export * from './index';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5naW5lX3B1YmxpY19pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2VuZ2luZS9lbmdpbmVfcHVibGljX2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsY0FBYyxTQUFTLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vaW5kZXgnO1xuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/engine/index.js b/node_modules/@nguniversal/common/esm5/engine/index.js
new file mode 100755
index 0000000..d55c9a1
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/engine/index.js
@@ -0,0 +1,10 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export * from './public_api';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9lbmdpbmUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gsY0FBYyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljX2FwaSc7XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/engine/private_api.js b/node_modules/@nguniversal/common/esm5/engine/private_api.js
new file mode 100755
index 0000000..1409621
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/engine/private_api.js
@@ -0,0 +1,10 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { FileLoader as ɵFileLoader, CommonEngine as ɵCommonEngine } from './src/index';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV9hcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9lbmdpbmUvcHJpdmF0ZV9hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUFFLFVBQVUsSUFBSSxXQUFXLEVBQUUsWUFBWSxJQUFJLGFBQWEsRUFDOUIsTUFBTSxhQUFhLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuZXhwb3J0IHsgRmlsZUxvYWRlciBhcyDJtUZpbGVMb2FkZXIsIENvbW1vbkVuZ2luZSBhcyDJtUNvbW1vbkVuZ2luZSxcbiAgUmVuZGVyT3B0aW9ucyBhcyDJtVJlbmRlck9wdGlvbnMgfSBmcm9tICcuL3NyYy9pbmRleCc7XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/engine/public_api.js b/node_modules/@nguniversal/common/esm5/engine/public_api.js
new file mode 100755
index 0000000..39cce46
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/engine/public_api.js
@@ -0,0 +1,10 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export * from './private_api';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2VuZ2luZS9wdWJsaWNfYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILGNBQWMsZUFBZSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5leHBvcnQgKiBmcm9tICcuL3ByaXZhdGVfYXBpJztcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/engine/src/engine.js b/node_modules/@nguniversal/common/esm5/engine/src/engine.js
new file mode 100755
index 0000000..8955e9c
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/engine/src/engine.js
@@ -0,0 +1,157 @@
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (this && this.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (_) try {
+            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [0, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+var __read = (this && this.__read) || function (o, n) {
+    var m = typeof Symbol === "function" && o[Symbol.iterator];
+    if (!m) return o;
+    var i = m.call(o), r, ar = [], e;
+    try {
+        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
+    }
+    catch (error) { e = { error: error }; }
+    finally {
+        try {
+            if (r && !r.done && (m = i["return"])) m.call(i);
+        }
+        finally { if (e) throw e.error; }
+    }
+    return ar;
+};
+var __spread = (this && this.__spread) || function () {
+    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
+    return ar;
+};
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+import { ResourceLoader } from '@angular/compiler';
+import { NgModuleFactory, CompilerFactory } from '@angular/core';
+import { INITIAL_CONFIG, renderModuleFactory, platformDynamicServer } from '@angular/platform-server';
+import * as fs from 'fs';
+import { FileLoader } from './file-loader';
+/**
+ * A common rendering engine utility. This abstracts the logic
+ * for handling the platformServer compiler, the module cache, and
+ * the document loader
+ */
+var CommonEngine = /** @class */ (function () {
+    function CommonEngine(moduleOrFactory, providers) {
+        if (providers === void 0) { providers = []; }
+        this.moduleOrFactory = moduleOrFactory;
+        this.providers = providers;
+        this.factoryCacheMap = new Map();
+        this.templateCache = {};
+    }
+    /** Return an instance of the platformServer compiler */
+    CommonEngine.prototype.getCompiler = function () {
+        var compilerFactory = platformDynamicServer().injector.get(CompilerFactory);
+        return compilerFactory.createCompiler([
+            { providers: [{ provide: ResourceLoader, useClass: FileLoader, deps: [] }] }
+        ]);
+    };
+    /**
+     * Render an HTML document for a specific URL with specified
+     * render options
+     */
+    CommonEngine.prototype.render = function (opts) {
+        return __awaiter(this, void 0, void 0, function () {
+            var doc, _a, extraProviders, factory;
+            return __generator(this, function (_b) {
+                switch (_b.label) {
+                    case 0:
+                        _a = opts.document;
+                        if (_a) return [3 /*break*/, 2];
+                        return [4 /*yield*/, this.getDocument(opts.documentFilePath)];
+                    case 1:
+                        _a = (_b.sent());
+                        _b.label = 2;
+                    case 2:
+                        doc = _a;
+                        extraProviders = __spread((opts.providers || []), (this.providers || []), [
+                            {
+                                provide: INITIAL_CONFIG,
+                                useValue: {
+                                    document: doc,
+                                    url: opts.url
+                                }
+                            }
+                        ]);
+                        return [4 /*yield*/, this.getFactory()];
+                    case 3:
+                        factory = _b.sent();
+                        return [2 /*return*/, renderModuleFactory(factory, { extraProviders: extraProviders })];
+                }
+            });
+        });
+    };
+    /** Return the factory for a given engine instance */
+    CommonEngine.prototype.getFactory = function () {
+        var _this = this;
+        // If module has been compiled AoT
+        var moduleOrFactory = this.moduleOrFactory;
+        if (moduleOrFactory instanceof NgModuleFactory) {
+            return Promise.resolve(moduleOrFactory);
+        }
+        else {
+            // we're in JIT mode
+            var moduleFactory = this.factoryCacheMap.get(moduleOrFactory);
+            // If module factory is cached
+            if (moduleFactory) {
+                return Promise.resolve(moduleFactory);
+            }
+            // Compile the module and cache it
+            return this.getCompiler().compileModuleAsync(moduleOrFactory)
+                .then(function (factory) {
+                _this.factoryCacheMap.set(moduleOrFactory, factory);
+                return factory;
+            });
+        }
+    };
+    /** Retrieve the document from the cache or the filesystem */
+    CommonEngine.prototype.getDocument = function (filePath) {
+        var doc = this.templateCache[filePath] = this.templateCache[filePath] ||
+            fs.readFileSync(filePath).toString();
+        // As  promise so we can change the API later without breaking
+        return Promise.resolve(doc);
+    };
+    return CommonEngine;
+}());
+export { CommonEngine };
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5naW5lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9jb21tb24vZW5naW5lL3NyYy9lbmdpbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQWlCLGVBQWUsRUFBRSxlQUFlLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQy9GLE9BQU8sRUFBQyxjQUFjLEVBQUUsbUJBQW1CLEVBQUUscUJBQXFCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUNwRyxPQUFPLEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQztBQUV6QixPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBR3pDOzs7O0dBSUc7QUFDSDtJQWFFLHNCQUFvQixlQUErQyxFQUMvQyxTQUFnQztRQUFoQywwQkFBQSxFQUFBLGNBQWdDO1FBRGhDLG9CQUFlLEdBQWYsZUFBZSxDQUFnQztRQUMvQyxjQUFTLEdBQVQsU0FBUyxDQUF1QjtRQUo1QyxvQkFBZSxHQUFHLElBQUksR0FBRyxFQUFpQyxDQUFDO1FBQzNELGtCQUFhLEdBQTRCLEVBQUUsQ0FBQztJQUdHLENBQUM7SUFaeEQsd0RBQXdEO0lBQ3hELGtDQUFXLEdBQVg7UUFDRSxJQUFNLGVBQWUsR0FBb0IscUJBQXFCLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQy9GLE1BQU0sQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDO1lBQ3BDLEVBQUMsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsY0FBYyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBQyxDQUFDLEVBQUM7U0FDekUsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQVFEOzs7T0FHRztJQUNHLDZCQUFNLEdBQVosVUFBYSxJQUFtQjs7Ozs7O3dCQUVsQixLQUFBLElBQUksQ0FBQyxRQUFRLENBQUE7Z0NBQWIsd0JBQWE7d0JBQUkscUJBQU0sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFLLENBQUMsZ0JBQTBCLENBQUMsRUFBQTs7OEJBQXhELFNBQXdEOzs7d0JBQS9FLEdBQUcsS0FBNEU7d0JBQy9FLGNBQWMsWUFDZixDQUFDLElBQUksQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDLEVBQ3RCLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUM7NEJBQ3pCO2dDQUNFLE9BQU8sRUFBRSxjQUFjO2dDQUN2QixRQUFRLEVBQUU7b0NBQ1IsUUFBUSxFQUFFLEdBQUc7b0NBQ2IsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHO2lDQUNkOzZCQUNGOzBCQUNGLENBQUM7d0JBRWMscUJBQU0sSUFBSSxDQUFDLFVBQVUsRUFBRSxFQUFBOzt3QkFBakMsT0FBTyxHQUFHLFNBQXVCO3dCQUN2QyxzQkFBTyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsRUFBQyxjQUFjLGdCQUFBLEVBQUMsQ0FBQyxFQUFDOzs7O0tBQ3ZEO0lBRUQscURBQXFEO0lBQ3JELGlDQUFVLEdBQVY7UUFBQSxpQkFxQkM7UUFwQkMsa0NBQWtDO1FBQ2xDLElBQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDN0MsRUFBRSxDQUFDLENBQUMsZUFBZSxZQUFZLGVBQWUsQ0FBQyxDQUFDLENBQUM7WUFDL0MsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDMUMsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sb0JBQW9CO1lBQ3BCLElBQUksYUFBYSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBRTlELDhCQUE4QjtZQUM5QixFQUFFLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO2dCQUNsQixNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUN4QyxDQUFDO1lBRUQsa0NBQWtDO1lBQ2xDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsa0JBQWtCLENBQUMsZUFBZSxDQUFDO2lCQUMxRCxJQUFJLENBQUMsVUFBQyxPQUFPO2dCQUNaLEtBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxPQUFPLENBQUMsQ0FBQztnQkFDbkQsTUFBTSxDQUFDLE9BQU8sQ0FBQztZQUNqQixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7SUFDSCxDQUFDO0lBRUQsNkRBQTZEO0lBQ3JELGtDQUFXLEdBQW5CLFVBQW9CLFFBQWdCO1FBQ2xDLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUM7WUFDdkUsRUFBRSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVyQyw4REFBOEQ7UUFDOUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUNILG1CQUFDO0FBQUQsQ0FBQyxBQXZFRCxJQXVFQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHtSZXNvdXJjZUxvYWRlcn0gZnJvbSAnQGFuZ3VsYXIvY29tcGlsZXInO1xuaW1wb3J0IHtDb21waWxlciwgVHlwZSwgTmdNb2R1bGVGYWN0b3J5LCBDb21waWxlckZhY3RvcnksIFN0YXRpY1Byb3ZpZGVyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7SU5JVElBTF9DT05GSUcsIHJlbmRlck1vZHVsZUZhY3RvcnksIHBsYXRmb3JtRHluYW1pY1NlcnZlcn0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tc2VydmVyJztcbmltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJztcblxuaW1wb3J0IHtGaWxlTG9hZGVyfSBmcm9tICcuL2ZpbGUtbG9hZGVyJztcbmltcG9ydCB7UmVuZGVyT3B0aW9uc30gZnJvbSAnLi9pbnRlcmZhY2VzJztcblxuLyoqXG4gKiBBIGNvbW1vbiByZW5kZXJpbmcgZW5naW5lIHV0aWxpdHkuIFRoaXMgYWJzdHJhY3RzIHRoZSBsb2dpY1xuICogZm9yIGhhbmRsaW5nIHRoZSBwbGF0Zm9ybVNlcnZlciBjb21waWxlciwgdGhlIG1vZHVsZSBjYWNoZSwgYW5kXG4gKiB0aGUgZG9jdW1lbnQgbG9hZGVyXG4gKi9cbmV4cG9ydCBjbGFzcyBDb21tb25FbmdpbmUge1xuXG4gIC8qKiBSZXR1cm4gYW4gaW5zdGFuY2Ugb2YgdGhlIHBsYXRmb3JtU2VydmVyIGNvbXBpbGVyICovXG4gIGdldENvbXBpbGVyKCk6IENvbXBpbGVyIHtcbiAgICBjb25zdCBjb21waWxlckZhY3Rvcnk6IENvbXBpbGVyRmFjdG9yeSA9IHBsYXRmb3JtRHluYW1pY1NlcnZlcigpLmluamVjdG9yLmdldChDb21waWxlckZhY3RvcnkpO1xuICAgIHJldHVybiBjb21waWxlckZhY3RvcnkuY3JlYXRlQ29tcGlsZXIoW1xuICAgICAge3Byb3ZpZGVyczogW3twcm92aWRlOiBSZXNvdXJjZUxvYWRlciwgdXNlQ2xhc3M6IEZpbGVMb2FkZXIsIGRlcHM6IFtdfV19XG4gICAgXSk7XG4gIH1cblxuICBwcml2YXRlIGZhY3RvcnlDYWNoZU1hcCA9IG5ldyBNYXA8VHlwZTx7fT4sIE5nTW9kdWxlRmFjdG9yeTx7fT4+KCk7XG4gIHByaXZhdGUgdGVtcGxhdGVDYWNoZToge1trZXk6IHN0cmluZ106IHN0cmluZ30gPSB7fTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1vZHVsZU9yRmFjdG9yeTogVHlwZTx7fT4gfCBOZ01vZHVsZUZhY3Rvcnk8e30+LFxuICAgICAgICAgICAgICBwcml2YXRlIHByb3ZpZGVyczogU3RhdGljUHJvdmlkZXJbXSA9IFtdKSB7fVxuXG4gIC8qKlxuICAgKiBSZW5kZXIgYW4gSFRNTCBkb2N1bWVudCBmb3IgYSBzcGVjaWZpYyBVUkwgd2l0aCBzcGVjaWZpZWRcbiAgICogcmVuZGVyIG9wdGlvbnNcbiAgICovXG4gIGFzeW5jIHJlbmRlcihvcHRzOiBSZW5kZXJPcHRpb25zKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICAvLyBpZiBvcHRzLmRvY3VtZW50IGRvc2VuJ3QgZXhpc3QgdGhlbiBvcHRzLmRvY3VtZW50RmlsZVBhdGggbXVzdFxuICAgIGNvbnN0IGRvYyA9IG9wdHMuZG9jdW1lbnQgfHwgYXdhaXQgdGhpcy5nZXREb2N1bWVudChvcHRzIS5kb2N1bWVudEZpbGVQYXRoIGFzIHN0cmluZyk7XG4gICAgY29uc3QgZXh0cmFQcm92aWRlcnMgPSBbXG4gICAgICAuLi4ob3B0cy5wcm92aWRlcnMgfHwgW10pLFxuICAgICAgLi4uKHRoaXMucHJvdmlkZXJzIHx8IFtdKSxcbiAgICAgIHtcbiAgICAgICAgcHJvdmlkZTogSU5JVElBTF9DT05GSUcsXG4gICAgICAgIHVzZVZhbHVlOiB7XG4gICAgICAgICAgZG9jdW1lbnQ6IGRvYyxcbiAgICAgICAgICB1cmw6IG9wdHMudXJsXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBdO1xuXG4gICAgY29uc3QgZmFjdG9yeSA9IGF3YWl0IHRoaXMuZ2V0RmFjdG9yeSgpO1xuICAgIHJldHVybiByZW5kZXJNb2R1bGVGYWN0b3J5KGZhY3RvcnksIHtleHRyYVByb3ZpZGVyc30pO1xuICB9XG5cbiAgLyoqIFJldHVybiB0aGUgZmFjdG9yeSBmb3IgYSBnaXZlbiBlbmdpbmUgaW5zdGFuY2UgKi9cbiAgZ2V0RmFjdG9yeSgpOiBQcm9taXNlPE5nTW9kdWxlRmFjdG9yeTx7fT4+IHtcbiAgICAvLyBJZiBtb2R1bGUgaGFzIGJlZW4gY29tcGlsZWQgQW9UXG4gICAgY29uc3QgbW9kdWxlT3JGYWN0b3J5ID0gdGhpcy5tb2R1bGVPckZhY3Rvcnk7XG4gICAgaWYgKG1vZHVsZU9yRmFjdG9yeSBpbnN0YW5jZW9mIE5nTW9kdWxlRmFjdG9yeSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShtb2R1bGVPckZhY3RvcnkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyB3ZSdyZSBpbiBKSVQgbW9kZVxuICAgICAgbGV0IG1vZHVsZUZhY3RvcnkgPSB0aGlzLmZhY3RvcnlDYWNoZU1hcC5nZXQobW9kdWxlT3JGYWN0b3J5KTtcblxuICAgICAgLy8gSWYgbW9kdWxlIGZhY3RvcnkgaXMgY2FjaGVkXG4gICAgICBpZiAobW9kdWxlRmFjdG9yeSkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG1vZHVsZUZhY3RvcnkpO1xuICAgICAgfVxuXG4gICAgICAvLyBDb21waWxlIHRoZSBtb2R1bGUgYW5kIGNhY2hlIGl0XG4gICAgICByZXR1cm4gdGhpcy5nZXRDb21waWxlcigpLmNvbXBpbGVNb2R1bGVBc3luYyhtb2R1bGVPckZhY3RvcnkpXG4gICAgICAgIC50aGVuKChmYWN0b3J5KSA9PiB7XG4gICAgICAgICAgdGhpcy5mYWN0b3J5Q2FjaGVNYXAuc2V0KG1vZHVsZU9yRmFjdG9yeSwgZmFjdG9yeSk7XG4gICAgICAgICAgcmV0dXJuIGZhY3Rvcnk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBSZXRyaWV2ZSB0aGUgZG9jdW1lbnQgZnJvbSB0aGUgY2FjaGUgb3IgdGhlIGZpbGVzeXN0ZW0gKi9cbiAgcHJpdmF0ZSBnZXREb2N1bWVudChmaWxlUGF0aDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICBjb25zdCBkb2MgPSB0aGlzLnRlbXBsYXRlQ2FjaGVbZmlsZVBhdGhdID0gdGhpcy50ZW1wbGF0ZUNhY2hlW2ZpbGVQYXRoXSB8fFxuICAgIGZzLnJlYWRGaWxlU3luYyhmaWxlUGF0aCkudG9TdHJpbmcoKTtcblxuICAgIC8vIEFzICBwcm9taXNlIHNvIHdlIGNhbiBjaGFuZ2UgdGhlIEFQSSBsYXRlciB3aXRob3V0IGJyZWFraW5nXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShkb2MpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/engine/src/file-loader.js b/node_modules/@nguniversal/common/esm5/engine/src/file-loader.js
new file mode 100755
index 0000000..267b9a5
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/engine/src/file-loader.js
@@ -0,0 +1,27 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+import * as fs from 'fs';
+/** ResourceLoader implementation for loading files */
+var FileLoader = /** @class */ (function () {
+    function FileLoader() {
+    }
+    FileLoader.prototype.get = function (url) {
+        return new Promise(function (resolve, reject) {
+            fs.readFile(url, function (err, buffer) {
+                if (err) {
+                    return reject(err);
+                }
+                resolve(buffer.toString());
+            });
+        });
+    };
+    return FileLoader;
+}());
+export { FileLoader };
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1sb2FkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9lbmdpbmUvc3JjL2ZpbGUtbG9hZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sS0FBSyxFQUFFLE1BQU0sSUFBSSxDQUFDO0FBR3pCLHNEQUFzRDtBQUN0RDtJQUFBO0lBWUEsQ0FBQztJQVhDLHdCQUFHLEdBQUgsVUFBSSxHQUFXO1FBQ2IsTUFBTSxDQUFDLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07WUFDakMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsVUFBQyxHQUEwQixFQUFFLE1BQWM7Z0JBQzFELEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ1IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDckIsQ0FBQztnQkFFRCxPQUFPLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFDSCxpQkFBQztBQUFELENBQUMsQUFaRCxJQVlDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XG5pbXBvcnQgeyBSZXNvdXJjZUxvYWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvbXBpbGVyJztcblxuLyoqIFJlc291cmNlTG9hZGVyIGltcGxlbWVudGF0aW9uIGZvciBsb2FkaW5nIGZpbGVzICovXG5leHBvcnQgY2xhc3MgRmlsZUxvYWRlciBpbXBsZW1lbnRzIFJlc291cmNlTG9hZGVyIHtcbiAgZ2V0KHVybDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgZnMucmVhZEZpbGUodXJsLCAoZXJyOiBOb2RlSlMuRXJybm9FeGNlcHRpb24sIGJ1ZmZlcjogQnVmZmVyKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycik7XG4gICAgICAgIH1cblxuICAgICAgICByZXNvbHZlKGJ1ZmZlci50b1N0cmluZygpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/engine/src/index.js b/node_modules/@nguniversal/common/esm5/engine/src/index.js
new file mode 100755
index 0000000..1559e41
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/engine/src/index.js
@@ -0,0 +1,4 @@
+export * from './file-loader';
+export * from './engine';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9lbmdpbmUvc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFBLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsVUFBVSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5leHBvcnQgKiBmcm9tICcuL2ludGVyZmFjZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9maWxlLWxvYWRlcic7XG5leHBvcnQgKiBmcm9tICcuL2VuZ2luZSc7XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/engine/src/interfaces.js b/node_modules/@nguniversal/common/esm5/engine/src/interfaces.js
new file mode 100755
index 0000000..cdece84
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/engine/src/interfaces.js
@@ -0,0 +1,2 @@
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2VuZ2luZS9zcmMvaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQge05nTW9kdWxlRmFjdG9yeSwgU3RhdGljUHJvdmlkZXIsIFR5cGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKiogVGhlc2UgYXJlIHRoZSBhbGxvd2VkIG9wdGlvbnMgZm9yIHRoZSByZW5kZXIgKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVuZGVyT3B0aW9ucyB7XG4gIGJvb3RzdHJhcDogVHlwZTx7fT4gfCBOZ01vZHVsZUZhY3Rvcnk8e30+O1xuICBwcm92aWRlcnM/OiBTdGF0aWNQcm92aWRlcltdO1xuICB1cmw/OiBzdHJpbmc7XG4gIGRvY3VtZW50Pzogc3RyaW5nO1xuICBkb2N1bWVudEZpbGVQYXRoPzogc3RyaW5nO1xufVxuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/index.js b/node_modules/@nguniversal/common/esm5/index.js
index a65cb45..3c22a92 100755
--- a/node_modules/@nguniversal/common/esm5/index.js
+++ b/node_modules/@nguniversal/common/esm5/index.js
@@ -1,3 +1,10 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
 export * from './public_api';
 
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWNfYXBpJztcbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFDSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWNfYXBpJztcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/private_api.js b/node_modules/@nguniversal/common/esm5/private_api.js
new file mode 100755
index 0000000..c926916
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/private_api.js
@@ -0,0 +1,10 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { TransferHttpCacheInterceptor as ɵTransferHttpCacheInterceptor } from './src/transfer_http';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV9hcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi9wcml2YXRlX2FwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFDSCxPQUFPLEVBQUUsNEJBQTRCLElBQUksNkJBQTZCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuZXhwb3J0IHsgVHJhbnNmZXJIdHRwQ2FjaGVJbnRlcmNlcHRvciBhcyDJtVRyYW5zZmVySHR0cENhY2hlSW50ZXJjZXB0b3IgfSBmcm9tICcuL3NyYy90cmFuc2Zlcl9odHRwJztcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/public_api.js b/node_modules/@nguniversal/common/esm5/public_api.js
index e5089fe..e24621e 100755
--- a/node_modules/@nguniversal/common/esm5/public_api.js
+++ b/node_modules/@nguniversal/common/esm5/public_api.js
@@ -1,4 +1,12 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
 export { TransferHttpCacheModule } from './src/transfer_http';
 export { StateTransferInitializerModule } from './src/state-transfer-initializer/module';
+export * from './private_api';
 
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0EsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUQsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0seUNBQXlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmV4cG9ydCB7IFRyYW5zZmVySHR0cENhY2hlTW9kdWxlIH0gZnJvbSAnLi9zcmMvdHJhbnNmZXJfaHR0cCc7XG5leHBvcnQgeyBTdGF0ZVRyYW5zZmVySW5pdGlhbGl6ZXJNb2R1bGUgfSBmcm9tICcuL3NyYy9zdGF0ZS10cmFuc2Zlci1pbml0aWFsaXplci9tb2R1bGUnO1xuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUQsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDekYsY0FBYyxlQUFlLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmV4cG9ydCB7IFRyYW5zZmVySHR0cENhY2hlTW9kdWxlIH0gZnJvbSAnLi9zcmMvdHJhbnNmZXJfaHR0cCc7XG5leHBvcnQgeyBTdGF0ZVRyYW5zZmVySW5pdGlhbGl6ZXJNb2R1bGUgfSBmcm9tICcuL3NyYy9zdGF0ZS10cmFuc2Zlci1pbml0aWFsaXplci9tb2R1bGUnO1xuZXhwb3J0ICogZnJvbSAnLi9wcml2YXRlX2FwaSc7XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/src/state-transfer-initializer/module.js b/node_modules/@nguniversal/common/esm5/src/state-transfer-initializer/module.js
index a21c554..63b9623 100755
--- a/node_modules/@nguniversal/common/esm5/src/state-transfer-initializer/module.js
+++ b/node_modules/@nguniversal/common/esm5/src/state-transfer-initializer/module.js
@@ -8,15 +8,13 @@
 import { NgModule, APP_INITIALIZER } from '@angular/core';
 import { DOCUMENT } from '@angular/common';
 export function domContentLoadedFactory(doc) {
-    return function () {
-        return new Promise(function (resolve, _reject) {
-            var contentLoaded = function () {
-                doc.removeEventListener('DOMContentLoaded', contentLoaded);
-                resolve();
-            };
-            doc.addEventListener('DOMContentLoaded', contentLoaded);
-        });
-    };
+    return function () { return new Promise(function (resolve, _reject) {
+        var contentLoaded = function () {
+            doc.removeEventListener('DOMContentLoaded', contentLoaded);
+            resolve();
+        };
+        doc.addEventListener('DOMContentLoaded', contentLoaded);
+    }); };
 }
 var StateTransferInitializerModule = /** @class */ (function () {
     function StateTransferInitializerModule() {
@@ -32,4 +30,4 @@ var StateTransferInitializerModule = /** @class */ (function () {
 }());
 export { StateTransferInitializerModule };
 
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9jb21tb24vc3JjL3N0YXRlLXRyYW5zZmVyLWluaXRpYWxpemVyL21vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBUUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxlQUFlLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTNDLE1BQU0sa0NBQWtDLEdBQWE7SUFDbkQsTUFBTSxDQUFDO1FBQU0sT0FBQSxJQUFJLE9BQU8sQ0FBRSxVQUFDLE9BQU8sRUFBRSxPQUFPO1lBQ3pDLElBQU0sYUFBYSxHQUFHO2dCQUNwQixHQUFHLENBQUMsbUJBQW1CLENBQUMsa0JBQWtCLEVBQUUsYUFBYSxDQUFDLENBQUM7Z0JBQzNELE9BQU8sRUFBRSxDQUFDO2FBQ1gsQ0FBQztZQUNGLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxhQUFhLENBQUMsQ0FBQztTQUN6RCxDQUFDO0lBTlcsQ0FNWCxDQUFDO0NBQ0o7Ozs7O2dCQUdBLFFBQVEsU0FBQztvQkFDUixTQUFTLEVBQUU7d0JBQ1QsRUFBQyxPQUFPLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLHVCQUF1QixFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFDO3FCQUMvRjtpQkFDRjs7eUNBMUJEOztTQTJCYSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuaW1wb3J0IHsgTmdNb2R1bGUsIEFQUF9JTklUSUFMSVpFUiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5leHBvcnQgZnVuY3Rpb24gZG9tQ29udGVudExvYWRlZEZhY3RvcnkoZG9jOiBEb2N1bWVudCkge1xuICByZXR1cm4gKCkgPT4gbmV3IFByb21pc2UgKChyZXNvbHZlLCBfcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgY29udGVudExvYWRlZCA9ICgpID0+IHtcbiAgICAgIGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgY29udGVudExvYWRlZCk7XG4gICAgICByZXNvbHZlKCk7XG4gICAgfTtcbiAgICBkb2MuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGNvbnRlbnRMb2FkZWQpO1xuICB9KTtcbn1cblxuXG5ATmdNb2R1bGUoe1xuICBwcm92aWRlcnM6IFtcbiAgICB7cHJvdmlkZTogQVBQX0lOSVRJQUxJWkVSLCBtdWx0aTogdHJ1ZSwgdXNlRmFjdG9yeTogZG9tQ29udGVudExvYWRlZEZhY3RvcnksIGRlcHM6IFtET0NVTUVOVF19LFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFN0YXRlVHJhbnNmZXJJbml0aWFsaXplck1vZHVsZSB7fVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9jb21tb24vc3JjL3N0YXRlLXRyYW5zZmVyLWluaXRpYWxpemVyL21vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsUUFBUSxFQUFFLGVBQWUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFM0MsTUFBTSxrQ0FBa0MsR0FBYTtJQUNuRCxNQUFNLENBQUMsY0FBTSxPQUFBLElBQUksT0FBTyxDQUFFLFVBQUMsT0FBTyxFQUFFLE9BQU87UUFDekMsSUFBTSxhQUFhLEdBQUc7WUFDcEIsR0FBRyxDQUFDLG1CQUFtQixDQUFDLGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxDQUFDO1lBQzNELE9BQU8sRUFBRSxDQUFDO1FBQ1osQ0FBQyxDQUFDO1FBQ0YsR0FBRyxDQUFDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQzFELENBQUMsQ0FBQyxFQU5XLENBTVgsQ0FBQztBQUNMLENBQUM7QUFHRDtJQUFBO0lBSzZDLENBQUM7O2dCQUw3QyxRQUFRLFNBQUM7b0JBQ1IsU0FBUyxFQUFFO3dCQUNULEVBQUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSx1QkFBdUIsRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBQztxQkFDL0Y7aUJBQ0Y7O0lBQzRDLHFDQUFDO0NBQUEsQUFMOUMsSUFLOEM7U0FBakMsOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbmltcG9ydCB7IE5nTW9kdWxlLCBBUFBfSU5JVElBTElaRVIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERPQ1VNRU5UIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIGRvbUNvbnRlbnRMb2FkZWRGYWN0b3J5KGRvYzogRG9jdW1lbnQpIHtcbiAgcmV0dXJuICgpID0+IG5ldyBQcm9taXNlICgocmVzb2x2ZSwgX3JlamVjdCkgPT4ge1xuICAgIGNvbnN0IGNvbnRlbnRMb2FkZWQgPSAoKSA9PiB7XG4gICAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGNvbnRlbnRMb2FkZWQpO1xuICAgICAgcmVzb2x2ZSgpO1xuICAgIH07XG4gICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBjb250ZW50TG9hZGVkKTtcbiAgfSk7XG59XG5cblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbXG4gICAge3Byb3ZpZGU6IEFQUF9JTklUSUFMSVpFUiwgbXVsdGk6IHRydWUsIHVzZUZhY3Rvcnk6IGRvbUNvbnRlbnRMb2FkZWRGYWN0b3J5LCBkZXBzOiBbRE9DVU1FTlRdfSxcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBTdGF0ZVRyYW5zZmVySW5pdGlhbGl6ZXJNb2R1bGUge31cbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/src/transfer_http.js b/node_modules/@nguniversal/common/esm5/src/transfer_http.js
index a195be5..a1e141d 100755
--- a/node_modules/@nguniversal/common/esm5/src/transfer_http.js
+++ b/node_modules/@nguniversal/common/esm5/src/transfer_http.js
@@ -8,6 +8,13 @@ var __values = (this && this.__values) || function (o) {
         }
     };
 };
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
 import { HTTP_INTERCEPTORS, HttpHeaders, HttpResponse } from '@angular/common/http';
 import { ApplicationRef, Injectable, NgModule } from '@angular/core';
 import { BrowserTransferStateModule, TransferState, makeStateKey } from '@angular/platform-browser';
@@ -18,7 +25,7 @@ function getHeadersMap(headers) {
     try {
         for (var _a = __values(headers.keys()), _b = _a.next(); !_b.done; _b = _a.next()) {
             var key = _b.value;
-            headersMap[key] = (headers.getAll(key));
+            headersMap[key] = headers.getAll(key);
         }
     }
     catch (e_1_1) { e_1 = { error: e_1_1 }; }
@@ -43,8 +50,15 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
             .then(function () { _this.isCacheActive = false; });
     }
     TransferHttpCacheInterceptor.prototype.invalidateCacheEntry = function (url) {
-        this.transferState.remove(makeStateKey('G.' + url));
-        this.transferState.remove(makeStateKey('H.' + url));
+        var _this = this;
+        Object.keys(this.transferState['store'])
+            .forEach(function (key) { return key.includes(url) ? _this.transferState.remove(makeStateKey(key)) : null; });
+    };
+    TransferHttpCacheInterceptor.prototype.makeCacheKey = function (method, url, params) {
+        // make the params encoded same as a url so it's easy to identify
+        var encodedParams = params.keys().sort().map(function (k) { return k + "=" + params.get(k); }).join('&');
+        var key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;
+        return makeStateKey(key);
     };
     TransferHttpCacheInterceptor.prototype.intercept = function (req, next) {
         var _this = this;
@@ -57,8 +71,7 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
             // Cache is no longer active. Pass the request through.
             return next.handle(req);
         }
-        var key = (req.method === 'GET' ? 'G.' : 'H.') + req.url;
-        var storeKey = makeStateKey(key);
+        var storeKey = this.makeCacheKey(req.method, req.url, req.params);
         if (this.transferState.hasKey(storeKey)) {
             // Request found in cache. Respond using it.
             var response = this.transferState.get(storeKey, {});
@@ -81,7 +94,7 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
                         headers: getHeadersMap(event.headers),
                         status: event.status,
                         statusText: event.statusText,
-                        url: (event.url),
+                        url: event.url,
                     });
                 }
             }));
@@ -92,8 +105,8 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
     ];
     /** @nocollapse */
     TransferHttpCacheInterceptor.ctorParameters = function () { return [
-        { type: ApplicationRef, },
-        { type: TransferState, },
+        { type: ApplicationRef },
+        { type: TransferState }
     ]; };
     return TransferHttpCacheInterceptor;
 }());
@@ -118,4 +131,4 @@ var TransferHttpCacheModule = /** @class */ (function () {
 }());
 export { TransferHttpCacheModule };
 
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/tokens/index.js b/node_modules/@nguniversal/common/esm5/tokens/index.js
new file mode 100755
index 0000000..7709746
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/tokens/index.js
@@ -0,0 +1,10 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export * from './public_api';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi90b2tlbnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gsY0FBYyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljX2FwaSc7XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/tokens/private_api.js b/node_modules/@nguniversal/common/esm5/tokens/private_api.js
new file mode 100755
index 0000000..03e1062
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/tokens/private_api.js
@@ -0,0 +1,10 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { ORIGIN_URL as ɵORIGIN_URL, REQUEST as ɵREQUEST, RESPONSE as ɵRESPONSE } from './src/tokens';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV9hcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2NvbW1vbi90b2tlbnMvcHJpdmF0ZV9hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gsT0FBTyxFQUFDLFVBQVUsSUFBSSxXQUFXLEVBQUUsT0FBTyxJQUFJLFFBQVEsRUFBRSxRQUFRLElBQUksU0FBUyxFQUFDLE1BQU0sY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5leHBvcnQge09SSUdJTl9VUkwgYXMgybVPUklHSU5fVVJMLCBSRVFVRVNUIGFzIMm1UkVRVUVTVCwgUkVTUE9OU0UgYXMgybVSRVNQT05TRX0gZnJvbSAnLi9zcmMvdG9rZW5zJztcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/tokens/public_api.js b/node_modules/@nguniversal/common/esm5/tokens/public_api.js
new file mode 100755
index 0000000..5697e0d
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/tokens/public_api.js
@@ -0,0 +1,10 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export * from './private_api';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL3Rva2Vucy9wdWJsaWNfYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILGNBQWMsZUFBZSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5leHBvcnQgKiBmcm9tICcuL3ByaXZhdGVfYXBpJztcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/tokens/src/tokens.js b/node_modules/@nguniversal/common/esm5/tokens/src/tokens.js
new file mode 100755
index 0000000..633c92b
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/tokens/src/tokens.js
@@ -0,0 +1,13 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+import { InjectionToken } from '@angular/core';
+export var ORIGIN_URL = new InjectionToken('ORIGIN_URL');
+export var REQUEST = new InjectionToken('REQUEST');
+export var RESPONSE = new InjectionToken('RESPONSE');
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW5zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9jb21tb24vdG9rZW5zL3NyYy90b2tlbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUvQyxNQUFNLENBQUMsSUFBTSxVQUFVLEdBQUcsSUFBSSxjQUFjLENBQU0sWUFBWSxDQUFDLENBQUM7QUFDaEUsTUFBTSxDQUFDLElBQU0sT0FBTyxHQUFHLElBQUksY0FBYyxDQUFNLFNBQVMsQ0FBQyxDQUFDO0FBQzFELE1BQU0sQ0FBQyxJQUFNLFFBQVEsR0FBRyxJQUFJLGNBQWMsQ0FBTSxVQUFVLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGNvbnN0IE9SSUdJTl9VUkwgPSBuZXcgSW5qZWN0aW9uVG9rZW48YW55PignT1JJR0lOX1VSTCcpO1xuZXhwb3J0IGNvbnN0IFJFUVVFU1QgPSBuZXcgSW5qZWN0aW9uVG9rZW48YW55PignUkVRVUVTVCcpO1xuZXhwb3J0IGNvbnN0IFJFU1BPTlNFID0gbmV3IEluamVjdGlvblRva2VuPGFueT4oJ1JFU1BPTlNFJyk7XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/esm5/tokens/tokens_public_index.js b/node_modules/@nguniversal/common/esm5/tokens/tokens_public_index.js
new file mode 100755
index 0000000..54f57c4
--- /dev/null
+++ b/node_modules/@nguniversal/common/esm5/tokens/tokens_public_index.js
@@ -0,0 +1,6 @@
+/**
+ * Generated bundle index. Do not edit.
+ */
+export * from './index';
+
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW5zX3B1YmxpY19pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL3Rva2Vucy90b2tlbnNfcHVibGljX2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsY0FBYyxTQUFTLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vaW5kZXgnO1xuIl19
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/fesm2015/common.js b/node_modules/@nguniversal/common/fesm2015/common.js
index 705fab1..418bdcd 100755
--- a/node_modules/@nguniversal/common/fesm2015/common.js
+++ b/node_modules/@nguniversal/common/fesm2015/common.js
@@ -43,8 +43,20 @@ class TransferHttpCacheInterceptor {
      * @return {?}
      */
     invalidateCacheEntry(url) {
-        this.transferState.remove(makeStateKey('G.' + url));
-        this.transferState.remove(makeStateKey('H.' + url));
+        Object.keys(this.transferState['store'])
+            .forEach(key => key.includes(url) ? this.transferState.remove(makeStateKey(key)) : null);
+    }
+    /**
+     * @param {?} method
+     * @param {?} url
+     * @param {?} params
+     * @return {?}
+     */
+    makeCacheKey(method, url, params) {
+        // make the params encoded same as a url so it's easy to identify
+        const /** @type {?} */ encodedParams = params.keys().sort().map(k => `${k}=${params.get(k)}`).join('&');
+        const /** @type {?} */ key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;
+        return makeStateKey(key);
     }
     /**
      * @param {?} req
@@ -61,8 +73,7 @@ class TransferHttpCacheInterceptor {
             // Cache is no longer active. Pass the request through.
             return next.handle(req);
         }
-        const /** @type {?} */ key = (req.method === 'GET' ? 'G.' : 'H.') + req.url;
-        const /** @type {?} */ storeKey = makeStateKey(key);
+        const /** @type {?} */ storeKey = this.makeCacheKey(req.method, req.url, req.params);
         if (this.transferState.hasKey(storeKey)) {
             // Request found in cache. Respond using it.
             const /** @type {?} */ response = this.transferState.get(storeKey, /** @type {?} */ ({}));
@@ -97,8 +108,8 @@ TransferHttpCacheInterceptor.decorators = [
 ];
 /** @nocollapse */
 TransferHttpCacheInterceptor.ctorParameters = () => [
-    { type: ApplicationRef, },
-    { type: TransferState, },
+    { type: ApplicationRef },
+    { type: TransferState }
 ];
 /**
  * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP
@@ -159,6 +170,11 @@ StateTransferInitializerModule.decorators = [
  * @fileoverview added by tsickle
  * @suppress {checkTypes} checked by tsc
  */
+
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
 /**
  * @license
  * Copyright Google LLC All Rights Reserved.
@@ -171,5 +187,5 @@ StateTransferInitializerModule.decorators = [
  * Generated bundle index. Do not edit.
  */
 
-export { domContentLoadedFactory as ɵnguniversal_modules_common_common_b, TransferHttpCacheInterceptor as ɵnguniversal_modules_common_common_a, TransferHttpCacheModule, StateTransferInitializerModule };
+export { domContentLoadedFactory as ɵnguniversal_modules_common_common_a, TransferHttpCacheModule, StateTransferInitializerModule, TransferHttpCacheInterceptor as ɵTransferHttpCacheInterceptor };
 //# sourceMappingURL=common.js.map
diff --git a/node_modules/@nguniversal/common/fesm2015/common.js.map b/node_modules/@nguniversal/common/fesm2015/common.js.map
index d0ea7cc..18b2693 100755
--- a/node_modules/@nguniversal/common/fesm2015/common.js.map
+++ b/node_modules/@nguniversal/common/fesm2015/common.js.map
@@ -1 +1 @@
-{"version":3,"file":"common.js","sources":["../../../../../../../../../../execroot/nguniversal/bazel-out/darwin-fastbuild/bin/modules/common/src/transfer_http.ts","../../../../../../../../../../execroot/nguniversal/bazel-out/darwin-fastbuild/bin/modules/common/src/state-transfer-initializer/module.ts","../../../../../../../../../../execroot/nguniversal/bazel-out/darwin-fastbuild/bin/modules/common/common_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport {ApplicationRef, Injectable, NgModule} from '@angular/core';\nimport {BrowserTransferStateModule, TransferState, makeStateKey} from '@angular/platform-browser';\nimport {Observable, of as observableOf} from 'rxjs';\nimport {tap, take, filter} from 'rxjs/operators';\n\nexport interface TransferHttpResponse {\n  body?: any | null;\n  headers?: {[k: string]: string[]};\n  status?: number;\n  statusText?: string;\n  url?: string;\n}\n\nfunction getHeadersMap(headers: HttpHeaders) {\n  const headersMap: {[name: string]: string[]} = {};\n  for (const key of headers.keys()) {\n    headersMap[key] = headers.getAll(key)!;\n  }\n  return headersMap;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n\n  private isCacheActive = true;\n\n  private invalidateCacheEntry(url: string) {\n    this.transferState.remove(makeStateKey<TransferHttpResponse>('G.' + url));\n    this.transferState.remove(makeStateKey<TransferHttpResponse>('H.' + url));\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    appRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => { this.isCacheActive = false; });\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Stop using the cache if there is a mutating call.\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      this.isCacheActive = false;\n      this.invalidateCacheEntry(req.url);\n    }\n\n    if (!this.isCacheActive) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const key = (req.method === 'GET' ? 'G.' : 'H.') + req.url;\n    const storeKey = makeStateKey<TransferHttpResponse>(key);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get(storeKey, {} as TransferHttpResponse);\n      return observableOf(new HttpResponse<any>({\n        body: response.body,\n        headers: new HttpHeaders(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url,\n      }));\n    } else {\n      // Request not found in cache. Make the request and cache it.\n      const httpEvent = next.handle(req);\n      return httpEvent\n        .pipe(\n          tap((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n              this.transferState.set(storeKey, {\n                body: event.body,\n                headers: getHeadersMap(event.headers),\n                status: event.status,\n                statusText: event.statusText,\n                url: event.url!,\n              });\n            }\n          })\n        );\n    }\n  }\n}\n\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    {provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true},\n  ],\n})\nexport class TransferHttpCacheModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nexport function domContentLoadedFactory(doc: Document) {\n  return () => new Promise ((resolve, _reject) => {\n    const contentLoaded = () => {\n      doc.removeEventListener('DOMContentLoaded', contentLoaded);\n      resolve();\n    };\n    doc.addEventListener('DOMContentLoaded', contentLoaded);\n  });\n}\n\n\n@NgModule({\n  providers: [\n    {provide: APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [DOCUMENT]},\n  ]\n})\nexport class StateTransferInitializerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {domContentLoadedFactory as Éµnguniversal_modules_common_common_b} from './src/state-transfer-initializer/module';\nexport {TransferHttpCacheInterceptor as Éµnguniversal_modules_common_common_a} from './src/transfer_http';"],"names":["observableOf"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"common.js","sources":["../../../../../../../../../../../execroot/nguniversal/bazel-out/k8-fastbuild/bin/modules/common/src/transfer_http.ts","../../../../../../../../../../../execroot/nguniversal/bazel-out/k8-fastbuild/bin/modules/common/src/state-transfer-initializer/module.ts","../common_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpParams\n} from '@angular/common/http';\nimport {ApplicationRef, Injectable, NgModule} from '@angular/core';\nimport {\n  BrowserTransferStateModule,\n  TransferState,\n  makeStateKey,\n  StateKey\n} from '@angular/platform-browser';\nimport {Observable, of as observableOf} from 'rxjs';\nimport {tap, take, filter} from 'rxjs/operators';\n\nexport interface TransferHttpResponse {\n  body?: any | null;\n  headers?: {[k: string]: string[]};\n  status?: number;\n  statusText?: string;\n  url?: string;\n}\n\nfunction getHeadersMap(headers: HttpHeaders) {\n  const headersMap: {[name: string]: string[]} = {};\n  for (const key of headers.keys()) {\n    headersMap[key] = headers.getAll(key)!;\n  }\n  return headersMap;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n\n  private isCacheActive = true;\n\n  private invalidateCacheEntry(url: string) {\n    Object.keys(this.transferState['store'])\n      .forEach(key => key.includes(url) ? this.transferState.remove(makeStateKey(key)) : null);\n  }\n\n  private makeCacheKey(method: string, url: string, params: HttpParams): StateKey<string> {\n    // make the params encoded same as a url so it's easy to identify\n    const encodedParams = params.keys().sort().map(k => `${k}=${params.get(k)}`).join('&');\n    const key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n    return makeStateKey<TransferHttpResponse>(key);\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    appRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => { this.isCacheActive = false; });\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Stop using the cache if there is a mutating call.\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      this.isCacheActive = false;\n      this.invalidateCacheEntry(req.url);\n    }\n\n    if (!this.isCacheActive) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const storeKey = this.makeCacheKey(req.method, req.url, req.params);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get(storeKey, {} as TransferHttpResponse);\n      return observableOf(new HttpResponse<any>({\n        body: response.body,\n        headers: new HttpHeaders(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url,\n      }));\n    } else {\n      // Request not found in cache. Make the request and cache it.\n      const httpEvent = next.handle(req);\n      return httpEvent\n        .pipe(\n          tap((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n              this.transferState.set(storeKey, {\n                body: event.body,\n                headers: getHeadersMap(event.headers),\n                status: event.status,\n                statusText: event.statusText,\n                url: event.url!,\n              });\n            }\n          })\n        );\n    }\n  }\n}\n\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    {provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true},\n  ],\n})\nexport class TransferHttpCacheModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nexport function domContentLoadedFactory(doc: Document) {\n  return () => new Promise ((resolve, _reject) => {\n    const contentLoaded = () => {\n      doc.removeEventListener('DOMContentLoaded', contentLoaded);\n      resolve();\n    };\n    doc.addEventListener('DOMContentLoaded', contentLoaded);\n  });\n}\n\n\n@NgModule({\n  providers: [\n    {provide: APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [DOCUMENT]},\n  ]\n})\nexport class StateTransferInitializerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {domContentLoadedFactory as Éµnguniversal_modules_common_common_a} from './src/state-transfer-initializer/module';"],"names":["observableOf"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/fesm2015/engine.js b/node_modules/@nguniversal/common/fesm2015/engine.js
new file mode 100755
index 0000000..10effe7
--- /dev/null
+++ b/node_modules/@nguniversal/common/fesm2015/engine.js
@@ -0,0 +1,184 @@
+import { readFile, readFileSync } from 'fs';
+import { ResourceLoader } from '@angular/compiler';
+import { CompilerFactory, NgModuleFactory } from '@angular/core';
+import { INITIAL_CONFIG, platformDynamicServer, renderModuleFactory } from '@angular/platform-server';
+
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * ResourceLoader implementation for loading files
+ */
+class FileLoader {
+    /**
+     * @param {?} url
+     * @return {?}
+     */
+    get(url) {
+        return new Promise((resolve, reject) => {
+            readFile(url, (err, buffer) => {
+                if (err) {
+                    return reject(err);
+                }
+                resolve(buffer.toString());
+            });
+        });
+    }
+}
+
+var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * A common rendering engine utility. This abstracts the logic
+ * for handling the platformServer compiler, the module cache, and
+ * the document loader
+ */
+class CommonEngine {
+    /**
+     * @param {?} moduleOrFactory
+     * @param {?=} providers
+     */
+    constructor(moduleOrFactory, providers = []) {
+        this.moduleOrFactory = moduleOrFactory;
+        this.providers = providers;
+        this.factoryCacheMap = new Map();
+        this.templateCache = {};
+    }
+    /**
+     * Return an instance of the platformServer compiler
+     * @return {?}
+     */
+    getCompiler() {
+        const /** @type {?} */ compilerFactory = platformDynamicServer().injector.get(CompilerFactory);
+        return compilerFactory.createCompiler([
+            { providers: [{ provide: ResourceLoader, useClass: FileLoader, deps: [] }] }
+        ]);
+    }
+    /**
+     * Render an HTML document for a specific URL with specified
+     * render options
+     * @param {?} opts
+     * @return {?}
+     */
+    render(opts) {
+        return __awaiter(this, void 0, void 0, function* () {
+            // if opts.document dosen't exist then opts.documentFilePath must
+            const /** @type {?} */ doc = opts.document || (yield this.getDocument(/** @type {?} */ (((opts)).documentFilePath)));
+            const /** @type {?} */ extraProviders = [
+                ...(opts.providers || []),
+                ...(this.providers || []),
+                {
+                    provide: INITIAL_CONFIG,
+                    useValue: {
+                        document: doc,
+                        url: opts.url
+                    }
+                }
+            ];
+            const /** @type {?} */ factory = yield this.getFactory();
+            return renderModuleFactory(factory, { extraProviders });
+        });
+    }
+    /**
+     * Return the factory for a given engine instance
+     * @return {?}
+     */
+    getFactory() {
+        // If module has been compiled AoT
+        const /** @type {?} */ moduleOrFactory = this.moduleOrFactory;
+        if (moduleOrFactory instanceof NgModuleFactory) {
+            return Promise.resolve(moduleOrFactory);
+        }
+        else {
+            // we're in JIT mode
+            let /** @type {?} */ moduleFactory = this.factoryCacheMap.get(moduleOrFactory);
+            // If module factory is cached
+            if (moduleFactory) {
+                return Promise.resolve(moduleFactory);
+            }
+            // Compile the module and cache it
+            return this.getCompiler().compileModuleAsync(moduleOrFactory)
+                .then((factory) => {
+                this.factoryCacheMap.set(moduleOrFactory, factory);
+                return factory;
+            });
+        }
+    }
+    /**
+     * Retrieve the document from the cache or the filesystem
+     * @param {?} filePath
+     * @return {?}
+     */
+    getDocument(filePath) {
+        const /** @type {?} */ doc = this.templateCache[filePath] = this.templateCache[filePath] ||
+            readFileSync(filePath).toString();
+        // As  promise so we can change the API later without breaking
+        return Promise.resolve(doc);
+    }
+}
+
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * Generated bundle index. Do not edit.
+ */
+
+export { FileLoader as ɵFileLoader, CommonEngine as ɵCommonEngine };
+//# sourceMappingURL=engine.js.map
diff --git a/node_modules/@nguniversal/common/fesm2015/engine.js.map b/node_modules/@nguniversal/common/fesm2015/engine.js.map
new file mode 100755
index 0000000..1d45a2d
--- /dev/null
+++ b/node_modules/@nguniversal/common/fesm2015/engine.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"engine.js","sources":["../../../../../../../../../../../execroot/nguniversal/bazel-out/k8-fastbuild/bin/modules/common/engine/src/file-loader.ts","../../../../../../../../../../../execroot/nguniversal/bazel-out/k8-fastbuild/bin/modules/common/engine/src/engine.ts","../engine/engine_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport { ResourceLoader } from '@angular/compiler';\n\n/** ResourceLoader implementation for loading files */\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException, buffer: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(buffer.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ResourceLoader} from '@angular/compiler';\nimport {Compiler, Type, NgModuleFactory, CompilerFactory, StaticProvider} from '@angular/core';\nimport {INITIAL_CONFIG, renderModuleFactory, platformDynamicServer} from '@angular/platform-server';\nimport * as fs from 'fs';\n\nimport {FileLoader} from './file-loader';\nimport {RenderOptions} from './interfaces';\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n\n  /** Return an instance of the platformServer compiler */\n  getCompiler(): Compiler {\n    const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n    return compilerFactory.createCompiler([\n      {providers: [{provide: ResourceLoader, useClass: FileLoader, deps: []}]}\n    ]);\n  }\n\n  private factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n  private templateCache: {[key: string]: string} = {};\n\n  constructor(private moduleOrFactory: Type<{}> | NgModuleFactory<{}>,\n              private providers: StaticProvider[] = []) {}\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const doc = opts.document || await this.getDocument(opts!.documentFilePath as string);\n    const extraProviders = [\n      ...(opts.providers || []),\n      ...(this.providers || []),\n      {\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: doc,\n          url: opts.url\n        }\n      }\n    ];\n\n    const factory = await this.getFactory();\n    return renderModuleFactory(factory, {extraProviders});\n  }\n\n  /** Return the factory for a given engine instance */\n  getFactory(): Promise<NgModuleFactory<{}>> {\n    // If module has been compiled AoT\n    const moduleOrFactory = this.moduleOrFactory;\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      return Promise.resolve(moduleOrFactory);\n    } else {\n      // we're in JIT mode\n      let moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        return Promise.resolve(moduleFactory);\n      }\n\n      // Compile the module and cache it\n      return this.getCompiler().compileModuleAsync(moduleOrFactory)\n        .then((factory) => {\n          this.factoryCacheMap.set(moduleOrFactory, factory);\n          return factory;\n        });\n    }\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private getDocument(filePath: string): Promise<string> {\n    const doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n    fs.readFileSync(filePath).toString();\n\n    // As  promise so we can change the API later without breaking\n    return Promise.resolve(doc);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["fs.readFile","fs.readFileSync"],"mappings":";;;;;;;;;AAOA;;;AAIA;;;;;IACE,GAAG,CAAC,GAAW;QACb,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;YACjCA,QAAW,CAAC,GAAG,EAAE,CAAC,GAA0B,EAAE,MAAc;gBAC1D,IAAI,GAAG,EAAE;oBACP,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;iBACpB;gBAED,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;aAC5B,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;CACF;;;;;;;;;;;;;;AChBD;;;;;AAaA;;;;;IAaE,YAAoB,eAA+C,EAC/C,YAA8B,EAAE;QADhC,oBAAe,GAAf,eAAe,CAAgC;QAC/C,cAAS,GAAT,SAAS;+BAJH,IAAI,GAAG,EAAiC;6BACjB,EAAE;KAGK;;;;;IAXxD,WAAW;QACT,uBAAM,eAAe,GAAoB,qBAAqB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC/F,OAAO,eAAe,CAAC,cAAc,CAAC;YACpC,EAAC,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,EAAC;SACzE,CAAC,CAAC;KACJ;;;;;;;IAYK,MAAM,CAAC,IAAmB;;;YAE9B,uBAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,KAAI,MAAM,IAAI,CAAC,WAAW,qBAAC,IAAI,GAAE,gBAAgB,EAAW,CAAA,CAAC;YACtF,uBAAM,cAAc,GAAG;gBACrB,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;gBACzB,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;gBACzB;oBACE,OAAO,EAAE,cAAc;oBACvB,QAAQ,EAAE;wBACR,QAAQ,EAAE,GAAG;wBACb,GAAG,EAAE,IAAI,CAAC,GAAG;qBACd;iBACF;aACF,CAAC;YAEF,uBAAM,OAAO,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YACxC,OAAO,mBAAmB,CAAC,OAAO,EAAE,EAAC,cAAc,EAAC,CAAC,CAAC;;KACvD;;;;;IAGD,UAAU;;QAER,uBAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC7C,IAAI,eAAe,YAAY,eAAe,EAAE;YAC9C,OAAO,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SACzC;aAAM;;YAEL,qBAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;;YAG9D,IAAI,aAAa,EAAE;gBACjB,OAAO,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;aACvC;;YAGD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,kBAAkB,CAAC,eAAe,CAAC;iBAC1D,IAAI,CAAC,CAAC,OAAO;gBACZ,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;gBACnD,OAAO,OAAO,CAAC;aAChB,CAAC,CAAC;SACN;KACF;;;;;;IAGO,WAAW,CAAC,QAAgB;QAClC,uBAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;YACvEC,YAAe,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;;QAGrC,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;;CAE/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FD;;GAEG;;;;"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/fesm2015/tokens.js b/node_modules/@nguniversal/common/fesm2015/tokens.js
new file mode 100755
index 0000000..91c74d8
--- /dev/null
+++ b/node_modules/@nguniversal/common/fesm2015/tokens.js
@@ -0,0 +1,45 @@
+import { InjectionToken } from '@angular/core';
+
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+const ORIGIN_URL = new InjectionToken('ORIGIN_URL');
+const REQUEST = new InjectionToken('REQUEST');
+const RESPONSE = new InjectionToken('RESPONSE');
+
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @fileoverview added by tsickle
+ * @suppress {checkTypes} checked by tsc
+ */
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * Generated bundle index. Do not edit.
+ */
+
+export { ORIGIN_URL as ɵORIGIN_URL, REQUEST as ɵREQUEST, RESPONSE as ɵRESPONSE };
+//# sourceMappingURL=tokens.js.map
diff --git a/node_modules/@nguniversal/common/fesm2015/tokens.js.map b/node_modules/@nguniversal/common/fesm2015/tokens.js.map
new file mode 100755
index 0000000..fde412a
--- /dev/null
+++ b/node_modules/@nguniversal/common/fesm2015/tokens.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"tokens.js","sources":["../../../../../../../../../../../execroot/nguniversal/bazel-out/k8-fastbuild/bin/modules/common/tokens/src/tokens.ts","../tokens/tokens_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '@angular/core';\n\nexport const ORIGIN_URL = new InjectionToken<any>('ORIGIN_URL');\nexport const REQUEST = new InjectionToken<any>('REQUEST');\nexport const RESPONSE = new InjectionToken<any>('RESPONSE');\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;AAOA,AAEO,MAAM,UAAU,GAAG,IAAI,cAAc,CAAM,YAAY,CAAC,CAAC;AAChE,AAAO,MAAM,OAAO,GAAG,IAAI,cAAc,CAAM,SAAS,CAAC,CAAC;AAC1D,AAAO,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAM,UAAU,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX3D;;GAEG;;;;"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/fesm5/common.js b/node_modules/@nguniversal/common/fesm5/common.js
index 2b121df..f46698a 100755
--- a/node_modules/@nguniversal/common/fesm5/common.js
+++ b/node_modules/@nguniversal/common/fesm5/common.js
@@ -15,12 +15,19 @@ var __values = (undefined && undefined.__values) || function (o) {
         }
     };
 };
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
 function getHeadersMap(headers) {
     var headersMap = {};
     try {
         for (var _a = __values(headers.keys()), _b = _a.next(); !_b.done; _b = _a.next()) {
             var key = _b.value;
-            headersMap[key] = (headers.getAll(key));
+            headersMap[key] = headers.getAll(key);
         }
     }
     catch (e_1_1) { e_1 = { error: e_1_1 }; }
@@ -45,8 +52,15 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
             .then(function () { _this.isCacheActive = false; });
     }
     TransferHttpCacheInterceptor.prototype.invalidateCacheEntry = function (url) {
-        this.transferState.remove(makeStateKey('G.' + url));
-        this.transferState.remove(makeStateKey('H.' + url));
+        var _this = this;
+        Object.keys(this.transferState['store'])
+            .forEach(function (key) { return key.includes(url) ? _this.transferState.remove(makeStateKey(key)) : null; });
+    };
+    TransferHttpCacheInterceptor.prototype.makeCacheKey = function (method, url, params) {
+        // make the params encoded same as a url so it's easy to identify
+        var encodedParams = params.keys().sort().map(function (k) { return k + "=" + params.get(k); }).join('&');
+        var key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;
+        return makeStateKey(key);
     };
     TransferHttpCacheInterceptor.prototype.intercept = function (req, next) {
         var _this = this;
@@ -59,8 +73,7 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
             // Cache is no longer active. Pass the request through.
             return next.handle(req);
         }
-        var key = (req.method === 'GET' ? 'G.' : 'H.') + req.url;
-        var storeKey = makeStateKey(key);
+        var storeKey = this.makeCacheKey(req.method, req.url, req.params);
         if (this.transferState.hasKey(storeKey)) {
             // Request found in cache. Respond using it.
             var response = this.transferState.get(storeKey, {});
@@ -83,7 +96,7 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
                         headers: getHeadersMap(event.headers),
                         status: event.status,
                         statusText: event.statusText,
-                        url: (event.url),
+                        url: event.url,
                     });
                 }
             }));
@@ -94,8 +107,8 @@ var TransferHttpCacheInterceptor = /** @class */ (function () {
     ];
     /** @nocollapse */
     TransferHttpCacheInterceptor.ctorParameters = function () { return [
-        { type: ApplicationRef, },
-        { type: TransferState, },
+        { type: ApplicationRef },
+        { type: TransferState }
     ]; };
     return TransferHttpCacheInterceptor;
 }());
@@ -126,15 +139,13 @@ var TransferHttpCacheModule = /** @class */ (function () {
  * found in the LICENSE file at https://angular.io/license
  */
 function domContentLoadedFactory(doc) {
-    return function () {
-        return new Promise(function (resolve, _reject) {
-            var contentLoaded = function () {
-                doc.removeEventListener('DOMContentLoaded', contentLoaded);
-                resolve();
-            };
-            doc.addEventListener('DOMContentLoaded', contentLoaded);
-        });
-    };
+    return function () { return new Promise(function (resolve, _reject) {
+        var contentLoaded = function () {
+            doc.removeEventListener('DOMContentLoaded', contentLoaded);
+            resolve();
+        };
+        doc.addEventListener('DOMContentLoaded', contentLoaded);
+    }); };
 }
 var StateTransferInitializerModule = /** @class */ (function () {
     function StateTransferInitializerModule() {
@@ -150,8 +161,32 @@ var StateTransferInitializerModule = /** @class */ (function () {
 }());
 
 /**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
  * Generated bundle index. Do not edit.
  */
 
-export { domContentLoadedFactory as ɵnguniversal_modules_common_common_b, TransferHttpCacheInterceptor as ɵnguniversal_modules_common_common_a, TransferHttpCacheModule, StateTransferInitializerModule };
+export { domContentLoadedFactory as ɵnguniversal_modules_common_common_a, TransferHttpCacheModule, StateTransferInitializerModule, TransferHttpCacheInterceptor as ɵTransferHttpCacheInterceptor };
 //# sourceMappingURL=common.js.map
diff --git a/node_modules/@nguniversal/common/fesm5/common.js.map b/node_modules/@nguniversal/common/fesm5/common.js.map
index 636a153..58e9577 100755
--- a/node_modules/@nguniversal/common/fesm5/common.js.map
+++ b/node_modules/@nguniversal/common/fesm5/common.js.map
@@ -1 +1 @@
-{"version":3,"file":"common.js","sources":["../../../../../../../../../../execroot/nguniversal/modules/common/src/transfer_http.ts","../../../../../../../../../../execroot/nguniversal/modules/common/src/state-transfer-initializer/module.ts","../../../../../../../../../../execroot/nguniversal/modules/common/common_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport {ApplicationRef, Injectable, NgModule} from '@angular/core';\nimport {BrowserTransferStateModule, TransferState, makeStateKey} from '@angular/platform-browser';\nimport {Observable, of as observableOf} from 'rxjs';\nimport {tap, take, filter} from 'rxjs/operators';\n\nexport interface TransferHttpResponse {\n  body?: any | null;\n  headers?: {[k: string]: string[]};\n  status?: number;\n  statusText?: string;\n  url?: string;\n}\n\nfunction getHeadersMap(headers: HttpHeaders) {\n  const headersMap: {[name: string]: string[]} = {};\n  for (const key of headers.keys()) {\n    headersMap[key] = headers.getAll(key)!;\n  }\n  return headersMap;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n\n  private isCacheActive = true;\n\n  private invalidateCacheEntry(url: string) {\n    this.transferState.remove(makeStateKey<TransferHttpResponse>('G.' + url));\n    this.transferState.remove(makeStateKey<TransferHttpResponse>('H.' + url));\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    appRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => { this.isCacheActive = false; });\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Stop using the cache if there is a mutating call.\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      this.isCacheActive = false;\n      this.invalidateCacheEntry(req.url);\n    }\n\n    if (!this.isCacheActive) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const key = (req.method === 'GET' ? 'G.' : 'H.') + req.url;\n    const storeKey = makeStateKey<TransferHttpResponse>(key);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get(storeKey, {} as TransferHttpResponse);\n      return observableOf(new HttpResponse<any>({\n        body: response.body,\n        headers: new HttpHeaders(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url,\n      }));\n    } else {\n      // Request not found in cache. Make the request and cache it.\n      const httpEvent = next.handle(req);\n      return httpEvent\n        .pipe(\n          tap((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n              this.transferState.set(storeKey, {\n                body: event.body,\n                headers: getHeadersMap(event.headers),\n                status: event.status,\n                statusText: event.statusText,\n                url: event.url!,\n              });\n            }\n          })\n        );\n    }\n  }\n}\n\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    {provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true},\n  ],\n})\nexport class TransferHttpCacheModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nexport function domContentLoadedFactory(doc: Document) {\n  return () => new Promise ((resolve, _reject) => {\n    const contentLoaded = () => {\n      doc.removeEventListener('DOMContentLoaded', contentLoaded);\n      resolve();\n    };\n    doc.addEventListener('DOMContentLoaded', contentLoaded);\n  });\n}\n\n\n@NgModule({\n  providers: [\n    {provide: APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [DOCUMENT]},\n  ]\n})\nexport class StateTransferInitializerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {domContentLoadedFactory as Éµnguniversal_modules_common_common_b} from './src/state-transfer-initializer/module';\nexport {TransferHttpCacheInterceptor as Éµnguniversal_modules_common_common_a} from './src/transfer_http';"],"names":["observableOf"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"common.js","sources":["../../../../../../../../../../../execroot/nguniversal/modules/common/src/transfer_http.ts","../../../../../../../../../../../execroot/nguniversal/modules/common/src/state-transfer-initializer/module.ts","../../../../../../../../../../../execroot/nguniversal/modules/common/private_api.ts","../../../../../../../../../../../execroot/nguniversal/modules/common/public_api.ts","../../../../../../../../../../../execroot/nguniversal/modules/common/index.ts","../../../../../../../../../../../execroot/nguniversal/modules/common/common_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpParams\n} from '@angular/common/http';\nimport {ApplicationRef, Injectable, NgModule} from '@angular/core';\nimport {\n  BrowserTransferStateModule,\n  TransferState,\n  makeStateKey,\n  StateKey\n} from '@angular/platform-browser';\nimport {Observable, of as observableOf} from 'rxjs';\nimport {tap, take, filter} from 'rxjs/operators';\n\nexport interface TransferHttpResponse {\n  body?: any | null;\n  headers?: {[k: string]: string[]};\n  status?: number;\n  statusText?: string;\n  url?: string;\n}\n\nfunction getHeadersMap(headers: HttpHeaders) {\n  const headersMap: {[name: string]: string[]} = {};\n  for (const key of headers.keys()) {\n    headersMap[key] = headers.getAll(key)!;\n  }\n  return headersMap;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n\n  private isCacheActive = true;\n\n  private invalidateCacheEntry(url: string) {\n    Object.keys(this.transferState['store'])\n      .forEach(key => key.includes(url) ? this.transferState.remove(makeStateKey(key)) : null);\n  }\n\n  private makeCacheKey(method: string, url: string, params: HttpParams): StateKey<string> {\n    // make the params encoded same as a url so it's easy to identify\n    const encodedParams = params.keys().sort().map(k => `${k}=${params.get(k)}`).join('&');\n    const key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n    return makeStateKey<TransferHttpResponse>(key);\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    appRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => { this.isCacheActive = false; });\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Stop using the cache if there is a mutating call.\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      this.isCacheActive = false;\n      this.invalidateCacheEntry(req.url);\n    }\n\n    if (!this.isCacheActive) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const storeKey = this.makeCacheKey(req.method, req.url, req.params);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get(storeKey, {} as TransferHttpResponse);\n      return observableOf(new HttpResponse<any>({\n        body: response.body,\n        headers: new HttpHeaders(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url,\n      }));\n    } else {\n      // Request not found in cache. Make the request and cache it.\n      const httpEvent = next.handle(req);\n      return httpEvent\n        .pipe(\n          tap((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n              this.transferState.set(storeKey, {\n                body: event.body,\n                headers: getHeadersMap(event.headers),\n                status: event.status,\n                statusText: event.statusText,\n                url: event.url!,\n              });\n            }\n          })\n        );\n    }\n  }\n}\n\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    {provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true},\n  ],\n})\nexport class TransferHttpCacheModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nexport function domContentLoadedFactory(doc: Document) {\n  return () => new Promise ((resolve, _reject) => {\n    const contentLoaded = () => {\n      doc.removeEventListener('DOMContentLoaded', contentLoaded);\n      resolve();\n    };\n    doc.addEventListener('DOMContentLoaded', contentLoaded);\n  });\n}\n\n\n@NgModule({\n  providers: [\n    {provide: APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [DOCUMENT]},\n  ]\n})\nexport class StateTransferInitializerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { TransferHttpCacheInterceptor as ÉµTransferHttpCacheInterceptor } from './src/transfer_http';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { TransferHttpCacheModule } from './src/transfer_http';\nexport { StateTransferInitializerModule } from './src/state-transfer-initializer/module';\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {domContentLoadedFactory as Éµnguniversal_modules_common_common_a} from './src/state-transfer-initializer/module';"],"names":["observableOf"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/fesm5/engine.js b/node_modules/@nguniversal/common/fesm5/engine.js
new file mode 100755
index 0000000..08c6d8b
--- /dev/null
+++ b/node_modules/@nguniversal/common/fesm5/engine.js
@@ -0,0 +1,209 @@
+import { readFile, readFileSync } from 'fs';
+import { ResourceLoader } from '@angular/compiler';
+import { CompilerFactory, NgModuleFactory } from '@angular/core';
+import { INITIAL_CONFIG, platformDynamicServer, renderModuleFactory } from '@angular/platform-server';
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/** ResourceLoader implementation for loading files */
+var FileLoader = /** @class */ (function () {
+    function FileLoader() {
+    }
+    FileLoader.prototype.get = function (url) {
+        return new Promise(function (resolve, reject) {
+            readFile(url, function (err, buffer) {
+                if (err) {
+                    return reject(err);
+                }
+                resolve(buffer.toString());
+            });
+        });
+    };
+    return FileLoader;
+}());
+
+var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
+    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    function verb(n) { return function (v) { return step([n, v]); }; }
+    function step(op) {
+        if (f) throw new TypeError("Generator is already executing.");
+        while (_) try {
+            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
+            if (y = 0, t) op = [0, t.value];
+            switch (op[0]) {
+                case 0: case 1: t = op; break;
+                case 4: _.label++; return { value: op[1], done: false };
+                case 5: _.label++; y = op[1]; op = [0]; continue;
+                case 7: op = _.ops.pop(); _.trys.pop(); continue;
+                default:
+                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
+                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
+                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
+                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
+                    if (t[2]) _.ops.pop();
+                    _.trys.pop(); continue;
+            }
+            op = body.call(thisArg, _);
+        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
+        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
+    }
+};
+var __read = (undefined && undefined.__read) || function (o, n) {
+    var m = typeof Symbol === "function" && o[Symbol.iterator];
+    if (!m) return o;
+    var i = m.call(o), r, ar = [], e;
+    try {
+        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
+    }
+    catch (error) { e = { error: error }; }
+    finally {
+        try {
+            if (r && !r.done && (m = i["return"])) m.call(i);
+        }
+        finally { if (e) throw e.error; }
+    }
+    return ar;
+};
+var __spread = (undefined && undefined.__spread) || function () {
+    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
+    return ar;
+};
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+/**
+ * A common rendering engine utility. This abstracts the logic
+ * for handling the platformServer compiler, the module cache, and
+ * the document loader
+ */
+var CommonEngine = /** @class */ (function () {
+    function CommonEngine(moduleOrFactory, providers) {
+        if (providers === void 0) { providers = []; }
+        this.moduleOrFactory = moduleOrFactory;
+        this.providers = providers;
+        this.factoryCacheMap = new Map();
+        this.templateCache = {};
+    }
+    /** Return an instance of the platformServer compiler */
+    CommonEngine.prototype.getCompiler = function () {
+        var compilerFactory = platformDynamicServer().injector.get(CompilerFactory);
+        return compilerFactory.createCompiler([
+            { providers: [{ provide: ResourceLoader, useClass: FileLoader, deps: [] }] }
+        ]);
+    };
+    /**
+     * Render an HTML document for a specific URL with specified
+     * render options
+     */
+    CommonEngine.prototype.render = function (opts) {
+        return __awaiter(this, void 0, void 0, function () {
+            var doc, _a, extraProviders, factory;
+            return __generator(this, function (_b) {
+                switch (_b.label) {
+                    case 0:
+                        _a = opts.document;
+                        if (_a) return [3 /*break*/, 2];
+                        return [4 /*yield*/, this.getDocument(opts.documentFilePath)];
+                    case 1:
+                        _a = (_b.sent());
+                        _b.label = 2;
+                    case 2:
+                        doc = _a;
+                        extraProviders = __spread((opts.providers || []), (this.providers || []), [
+                            {
+                                provide: INITIAL_CONFIG,
+                                useValue: {
+                                    document: doc,
+                                    url: opts.url
+                                }
+                            }
+                        ]);
+                        return [4 /*yield*/, this.getFactory()];
+                    case 3:
+                        factory = _b.sent();
+                        return [2 /*return*/, renderModuleFactory(factory, { extraProviders: extraProviders })];
+                }
+            });
+        });
+    };
+    /** Return the factory for a given engine instance */
+    CommonEngine.prototype.getFactory = function () {
+        var _this = this;
+        // If module has been compiled AoT
+        var moduleOrFactory = this.moduleOrFactory;
+        if (moduleOrFactory instanceof NgModuleFactory) {
+            return Promise.resolve(moduleOrFactory);
+        }
+        else {
+            // we're in JIT mode
+            var moduleFactory = this.factoryCacheMap.get(moduleOrFactory);
+            // If module factory is cached
+            if (moduleFactory) {
+                return Promise.resolve(moduleFactory);
+            }
+            // Compile the module and cache it
+            return this.getCompiler().compileModuleAsync(moduleOrFactory)
+                .then(function (factory) {
+                _this.factoryCacheMap.set(moduleOrFactory, factory);
+                return factory;
+            });
+        }
+    };
+    /** Retrieve the document from the cache or the filesystem */
+    CommonEngine.prototype.getDocument = function (filePath) {
+        var doc = this.templateCache[filePath] = this.templateCache[filePath] ||
+            readFileSync(filePath).toString();
+        // As  promise so we can change the API later without breaking
+        return Promise.resolve(doc);
+    };
+    return CommonEngine;
+}());
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * Generated bundle index. Do not edit.
+ */
+
+export { FileLoader as ɵFileLoader, CommonEngine as ɵCommonEngine };
+//# sourceMappingURL=engine.js.map
diff --git a/node_modules/@nguniversal/common/fesm5/engine.js.map b/node_modules/@nguniversal/common/fesm5/engine.js.map
new file mode 100755
index 0000000..35237a4
--- /dev/null
+++ b/node_modules/@nguniversal/common/fesm5/engine.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"engine.js","sources":["../../../../../../../../../../execroot/modules/common/engine/src/file-loader.ts","../../../../../../../../../../execroot/modules/common/engine/src/engine.ts","../../../../../../../../../../execroot/modules/common/engine/private_api.ts","../../../../../../../../../../execroot/modules/common/engine/public_api.ts","../../../../../../../../../../execroot/modules/common/engine/index.ts","../../../../../../../../../../execroot/modules/common/engine/engine_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport { ResourceLoader } from '@angular/compiler';\n\n/** ResourceLoader implementation for loading files */\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException, buffer: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(buffer.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ResourceLoader} from '@angular/compiler';\nimport {Compiler, Type, NgModuleFactory, CompilerFactory, StaticProvider} from '@angular/core';\nimport {INITIAL_CONFIG, renderModuleFactory, platformDynamicServer} from '@angular/platform-server';\nimport * as fs from 'fs';\n\nimport {FileLoader} from './file-loader';\nimport {RenderOptions} from './interfaces';\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n\n  /** Return an instance of the platformServer compiler */\n  getCompiler(): Compiler {\n    const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n    return compilerFactory.createCompiler([\n      {providers: [{provide: ResourceLoader, useClass: FileLoader, deps: []}]}\n    ]);\n  }\n\n  private factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n  private templateCache: {[key: string]: string} = {};\n\n  constructor(private moduleOrFactory: Type<{}> | NgModuleFactory<{}>,\n              private providers: StaticProvider[] = []) {}\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const doc = opts.document || await this.getDocument(opts!.documentFilePath as string);\n    const extraProviders = [\n      ...(opts.providers || []),\n      ...(this.providers || []),\n      {\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: doc,\n          url: opts.url\n        }\n      }\n    ];\n\n    const factory = await this.getFactory();\n    return renderModuleFactory(factory, {extraProviders});\n  }\n\n  /** Return the factory for a given engine instance */\n  getFactory(): Promise<NgModuleFactory<{}>> {\n    // If module has been compiled AoT\n    const moduleOrFactory = this.moduleOrFactory;\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      return Promise.resolve(moduleOrFactory);\n    } else {\n      // we're in JIT mode\n      let moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        return Promise.resolve(moduleFactory);\n      }\n\n      // Compile the module and cache it\n      return this.getCompiler().compileModuleAsync(moduleOrFactory)\n        .then((factory) => {\n          this.factoryCacheMap.set(moduleOrFactory, factory);\n          return factory;\n        });\n    }\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private getDocument(filePath: string): Promise<string> {\n    const doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n    fs.readFileSync(filePath).toString();\n\n    // As  promise so we can change the API later without breaking\n    return Promise.resolve(doc);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { FileLoader as ÉµFileLoader, CommonEngine as ÉµCommonEngine,\n  RenderOptions as ÉµRenderOptions } from './src/index';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["fs.readFile","fs.readFileSync"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/fesm5/tokens.js b/node_modules/@nguniversal/common/fesm5/tokens.js
new file mode 100755
index 0000000..83cb9af
--- /dev/null
+++ b/node_modules/@nguniversal/common/fesm5/tokens.js
@@ -0,0 +1,43 @@
+import { InjectionToken } from '@angular/core';
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+var ORIGIN_URL = new InjectionToken('ORIGIN_URL');
+var REQUEST = new InjectionToken('REQUEST');
+var RESPONSE = new InjectionToken('RESPONSE');
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+
+/**
+ * Generated bundle index. Do not edit.
+ */
+
+export { ORIGIN_URL as ɵORIGIN_URL, REQUEST as ɵREQUEST, RESPONSE as ɵRESPONSE };
+//# sourceMappingURL=tokens.js.map
diff --git a/node_modules/@nguniversal/common/fesm5/tokens.js.map b/node_modules/@nguniversal/common/fesm5/tokens.js.map
new file mode 100755
index 0000000..9054fc0
--- /dev/null
+++ b/node_modules/@nguniversal/common/fesm5/tokens.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"tokens.js","sources":["../../../../../../../../../../execroot/modules/common/tokens/src/tokens.ts","../../../../../../../../../../execroot/modules/common/tokens/private_api.ts","../../../../../../../../../../execroot/modules/common/tokens/public_api.ts","../../../../../../../../../../execroot/modules/common/tokens/index.ts","../../../../../../../../../../execroot/modules/common/tokens/tokens_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '@angular/core';\n\nexport const ORIGIN_URL = new InjectionToken<any>('ORIGIN_URL');\nexport const REQUEST = new InjectionToken<any>('REQUEST');\nexport const RESPONSE = new InjectionToken<any>('RESPONSE');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport {ORIGIN_URL as ÉµORIGIN_URL, REQUEST as ÉµREQUEST, RESPONSE as ÉµRESPONSE} from './src/tokens';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;AAAA;;;;;;;AAOA,AAEO,IAAM,UAAU,GAAG,IAAI,cAAc,CAAM,YAAY,CAAC,CAAC;AAChE,AAAO,IAAM,OAAO,GAAG,IAAI,cAAc,CAAM,SAAS,CAAC,CAAC;AAC1D,AAAO,IAAM,QAAQ,GAAG,IAAI,cAAc,CAAM,UAAU,CAAC;;ACX3D;;;;;;GAMG;;ACNH;;;;;;GAMG;;ACNH;;;;;;GAMG;;ACNH;;GAEG;;;;"}
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/private_api.d.ts b/node_modules/@nguniversal/common/private_api.d.ts
new file mode 100755
index 0000000..0fd06ad
--- /dev/null
+++ b/node_modules/@nguniversal/common/private_api.d.ts
@@ -0,0 +1,8 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { TransferHttpCacheInterceptor as ɵTransferHttpCacheInterceptor } from './src/transfer_http';
diff --git a/node_modules/@nguniversal/common/public_api.d.ts b/node_modules/@nguniversal/common/public_api.d.ts
index befe74e..09b8c3b 100755
--- a/node_modules/@nguniversal/common/public_api.d.ts
+++ b/node_modules/@nguniversal/common/public_api.d.ts
@@ -7,3 +7,4 @@
  */
 export { TransferHttpCacheModule } from './src/transfer_http';
 export { StateTransferInitializerModule } from './src/state-transfer-initializer/module';
+export * from './private_api';
diff --git a/node_modules/@nguniversal/common/src/transfer_http.d.ts b/node_modules/@nguniversal/common/src/transfer_http.d.ts
index e5cecc8..ea43919 100755
--- a/node_modules/@nguniversal/common/src/transfer_http.d.ts
+++ b/node_modules/@nguniversal/common/src/transfer_http.d.ts
@@ -22,6 +22,7 @@ export declare class TransferHttpCacheInterceptor implements HttpInterceptor {
     private transferState;
     private isCacheActive;
     private invalidateCacheEntry(url);
+    private makeCacheKey(method, url, params);
     constructor(appRef: ApplicationRef, transferState: TransferState);
     intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
 }
diff --git a/node_modules/@nguniversal/common/tokens.d.ts b/node_modules/@nguniversal/common/tokens.d.ts
new file mode 100755
index 0000000..f1c8843
--- /dev/null
+++ b/node_modules/@nguniversal/common/tokens.d.ts
@@ -0,0 +1,3 @@
+
+  export * from './tokens/tokens_public_index';
+  
\ No newline at end of file
diff --git a/node_modules/@nguniversal/common/tokens.metadata.json b/node_modules/@nguniversal/common/tokens.metadata.json
new file mode 100755
index 0000000..500c974
--- /dev/null
+++ b/node_modules/@nguniversal/common/tokens.metadata.json
@@ -0,0 +1 @@
+{"__symbolic":"module","version":3,"metadata":{},"exports":[{"from":"./tokens/tokens_public_index"}],"flatModuleIndexRedirect":true,"importAs":"@nguniversal/common/tokens"}
diff --git a/node_modules/@nguniversal/common/tokens/index.d.ts b/node_modules/@nguniversal/common/tokens/index.d.ts
new file mode 100755
index 0000000..45965af
--- /dev/null
+++ b/node_modules/@nguniversal/common/tokens/index.d.ts
@@ -0,0 +1,8 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export * from './public_api';
diff --git a/node_modules/@nguniversal/common/tokens/private_api.d.ts b/node_modules/@nguniversal/common/tokens/private_api.d.ts
new file mode 100755
index 0000000..5bea5f5
--- /dev/null
+++ b/node_modules/@nguniversal/common/tokens/private_api.d.ts
@@ -0,0 +1,8 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export { ORIGIN_URL as ɵORIGIN_URL, REQUEST as ɵREQUEST, RESPONSE as ɵRESPONSE } from './src/tokens';
diff --git a/node_modules/@nguniversal/common/tokens/public_api.d.ts b/node_modules/@nguniversal/common/tokens/public_api.d.ts
new file mode 100755
index 0000000..64280dd
--- /dev/null
+++ b/node_modules/@nguniversal/common/tokens/public_api.d.ts
@@ -0,0 +1,8 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+export * from './private_api';
diff --git a/node_modules/@nguniversal/common/tokens/src/tokens.d.ts b/node_modules/@nguniversal/common/tokens/src/tokens.d.ts
new file mode 100755
index 0000000..5fdcc0f
--- /dev/null
+++ b/node_modules/@nguniversal/common/tokens/src/tokens.d.ts
@@ -0,0 +1,11 @@
+/**
+ * @license
+ * Copyright Google LLC All Rights Reserved.
+ *
+ * Use of this source code is governed by an MIT-style license that can be
+ * found in the LICENSE file at https://angular.io/license
+ */
+import { InjectionToken } from '@angular/core';
+export declare const ORIGIN_URL: InjectionToken<any>;
+export declare const REQUEST: InjectionToken<any>;
+export declare const RESPONSE: InjectionToken<any>;
diff --git a/node_modules/@nguniversal/common/tokens/tokens_public_index.d.ts b/node_modules/@nguniversal/common/tokens/tokens_public_index.d.ts
new file mode 100755
index 0000000..67ff29a
--- /dev/null
+++ b/node_modules/@nguniversal/common/tokens/tokens_public_index.d.ts
@@ -0,0 +1,4 @@
+/**
+ * Generated bundle index. Do not edit.
+ */
+export * from './index';
diff --git a/node_modules/@nguniversal/common/tokens/tokens_public_index.metadata.json b/node_modules/@nguniversal/common/tokens/tokens_public_index.metadata.json
new file mode 100755
index 0000000..309540d
--- /dev/null
+++ b/node_modules/@nguniversal/common/tokens/tokens_public_index.metadata.json
@@ -0,0 +1 @@
+{"__symbolic":"module","version":4,"metadata":{"ɵORIGIN_URL":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":9,"character":30},"arguments":["ORIGIN_URL"]},"ɵREQUEST":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":10,"character":27},"arguments":["REQUEST"]},"ɵRESPONSE":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":11,"character":28},"arguments":["RESPONSE"]}},"origins":{"ɵORIGIN_URL":"./src/tokens","ɵREQUEST":"./src/tokens","ɵRESPONSE":"./src/tokens"},"importAs":"@nguniversal/common/tokens"}
\ No newline at end of file
